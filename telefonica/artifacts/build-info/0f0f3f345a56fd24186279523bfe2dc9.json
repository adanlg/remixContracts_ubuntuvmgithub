{
	"id": "0f0f3f345a56fd24186279523bfe2dc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"telefonica/centenario2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyToken is ERC721, ERC721URIStorage, ERC721Pausable, Ownable {\n    uint256 private _nextTokenId;\n    mapping(address => bool) private _hasMinted;\n    mapping(address => bool) public isAllowedToMint;\n    address[] public allowedAddresses;\n\n    constructor()\n        ERC721(\"MyToken\", \"MTK\")\n    {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function safeMint(address to, string memory uri) public {\n\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n        _hasMinted[to] = true;\n    }\n\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address to, uint256 tokenId, address auth)\n        internal\n        override(ERC721, ERC721Pausable)\n        returns (address)\n    {\n        return super._update(to, tokenId, auth);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal virtual override whenNotPaused returns (address) {\n        return super._update(to, tokenId, auth);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 333,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ERC721Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 333,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1644,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 333,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1487,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1644,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122027830f6a6377877afbda85e389470348360e63f3b616c4b8ef9b680e7c47a7eb64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027830f6a6377877afbda85e389470348360e63f3b616c4b8ef9b680e7c47a7eb64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUP4 0xF PUSH11 0x6377877AFBDA85E3894703 BASEFEE CALLDATASIZE 0xE PUSH4 0xF3B616C4 0xB8 0xEF SWAP12 PUSH9 0xE7C47A7EB64736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "220:2559:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027830f6a6377877afbda85e389470348360e63f3b616c4b8ef9b680e7c47a7eb64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUP4 0xF PUSH11 0x6377877AFBDA85E3894703 BASEFEE CALLDATASIZE 0xE PUSH4 0xF3B616C4 0xB8 0xEF SWAP12 PUSH9 0xE7C47A7EB64736F6C PUSH4 0x43000817 STOP CALLER ",
							"sourceMap": "220:2559:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027830f6a6377877afbda85e389470348360e63f3b616c4b8ef9b680e7c47a7eb64736f6c63430008170033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"telefonica/centenario2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a54ef2359c6f2f2ab9fb491ef4e3c16fafe018a3cda0555e2f841635db620e064736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a54ef2359c6f2f2ab9fb491ef4e3c16fafe018a3cda0555e2f841635db620e064736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SLOAD 0xEF 0x23 MSIZE 0xC6 CALLCODE CALLCODE 0xAB SWAP16 0xB4 SWAP2 0xEF 0x4E EXTCODECOPY AND STATICCALL INVALID ADD DUP11 EXTCODECOPY 0xDA SDIV SSTORE 0xE2 0xF8 COINBASE PUSH4 0x5DB620E0 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "202:12582:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a54ef2359c6f2f2ab9fb491ef4e3c16fafe018a3cda0555e2f841635db620e064736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SLOAD 0xEF 0x23 MSIZE 0xC6 CALLCODE CALLCODE 0xAB SWAP16 0xB4 SWAP2 0xEF 0x4E EXTCODECOPY AND STATICCALL INVALID ADD DUP11 EXTCODECOPY 0xDA SDIV SSTORE 0xE2 0xF8 COINBASE PUSH4 0x5DB620E0 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "202:12582:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a54ef2359c6f2f2ab9fb491ef4e3c16fafe018a3cda0555e2f841635db620e064736f6c63430008170033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"telefonica/centenario2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db9c35e10bdb24d6c2e11ccee1e28078aa708c5362ca56543e50666fab1373a964736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220db9c35e10bdb24d6c2e11ccee1e28078aa708c5362ca56543e50666fab1373a964736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP13 CALLDATALOAD 0xE1 SIGNEXTEND 0xDB 0x24 0xD6 0xC2 0xE1 SHR 0xCE 0xE1 0xE2 DUP1 PUSH25 0xAA708C5362CA56543E50666FAB1373A964736F6C6343000817 STOP CALLER ",
							"sourceMap": "215:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220db9c35e10bdb24d6c2e11ccee1e28078aa708c5362ca56543e50666fab1373a964736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SWAP13 CALLDATALOAD 0xE1 SIGNEXTEND 0xDB 0x24 0xD6 0xC2 0xE1 SHR 0xCE 0xE1 0xE2 DUP1 PUSH25 0xAA708C5362CA56543E50666FAB1373A964736F6C6343000817 STOP CALLER ",
							"sourceMap": "215:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db9c35e10bdb24d6c2e11ccee1e28078aa708c5362ca56543e50666fab1373a964736f6c63430008170033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"telefonica/centenario2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"telefonica/centenario2.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allowedAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isAllowedToMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"telefonica/centenario2.sol\":326:1663  contract MyToken is ERC721, ERC721URIStorage, ERC721Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"telefonica/centenario2.sol\":578:631  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"telefonica/centenario2.sol\":326:1663  contract MyToken is ERC721, ERC721URIStorage, ERC721Pausable, Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x07\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x07\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_20:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_21:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_22:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_23:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_45:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_47\n  tag_22\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":714:798   */\ntag_46:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_24:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_25:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_26:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_27:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_52\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1429:1468   */\n  tag_53\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_28:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_29:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_30:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_57\n    /* \"#utility.yul\":1818:1852   */\n  tag_58\n    /* \"#utility.yul\":1827:1851   */\n  tag_59\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1818:1852   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1800:1853   */\n  tag_28\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_31:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_32:\n    /* \"#utility.yul\":2056:2095   */\n  tag_62\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_30\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2117:2208   */\n  tag_63\n    /* \"#utility.yul\":2166:2207   */\n  tag_64\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_33:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_34:\n    /* \"#utility.yul\":2377:2409   */\n  tag_67\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2418:2483   */\n  tag_68\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_35:\n    /* \"#utility.yul\":2555:2675   */\ntag_70:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_73\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_34\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_36:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_76\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_24\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2906:2935   */\n  tag_77\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_25\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_78:\n    /* \"#utility.yul\":3133:3213   */\n  tag_79\n    /* \"#utility.yul\":3189:3211   */\n  tag_80\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_75:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_37:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_38:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_83\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_39:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_85\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_38\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_87\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_20\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_89\n  tag_21\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4038:4094   */\ntag_88:\n    /* \"#utility.yul\":4118:4156   */\n  tag_90\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_23\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4203:4270   */\n  tag_91\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_36\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_93\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_94:\n    /* \"#utility.yul\":5144:5211   */\n  tag_95\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_39\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_92)\n    /* \"#utility.yul\":4365:4983   */\ntag_93:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_96\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_24\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_97:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_97)\ntag_99:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_101\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_38\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_100:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_92:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"telefonica/centenario2.sol\":326:1663  contract MyToken is ERC721, ERC721URIStorage, ERC721Pausable, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"telefonica/centenario2.sol\":326:1663  contract MyToken is ERC721, ERC721URIStorage, ERC721Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4813d8a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x64b55bed\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"telefonica/centenario2.sol\":1456:1661  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"telefonica/centenario2.sol\":702:765  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"telefonica/centenario2.sol\":485:532  mapping(address => bool) public isAllowedToMint */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"telefonica/centenario2.sol\":538:571  address[] public allowedAddresses */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"telefonica/centenario2.sol\":637:696  function pause() public onlyOwner {... */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"telefonica/centenario2.sol\":1261:1450  function tokenURI(uint256 tokenId)... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"telefonica/centenario2.sol\":771:976  function safeMint(address to, string memory uri) public {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"telefonica/centenario2.sol\":1456:1661  function supportsInterface(bytes4 interfaceId)... */\n    tag_31:\n        /* \"telefonica/centenario2.sol\":1591:1595  bool */\n      0x00\n        /* \"telefonica/centenario2.sol\":1618:1654  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"telefonica/centenario2.sol\":1642:1653  interfaceId */\n      dup3\n        /* \"telefonica/centenario2.sol\":1618:1641  super.supportsInterface */\n      tag_114\n        /* \"telefonica/centenario2.sol\":1618:1654  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"telefonica/centenario2.sol\":1611:1654  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"telefonica/centenario2.sol\":1456:1661  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":702:765  function unpause() public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"telefonica/centenario2.sol\":748:758  _unpause() */\n      tag_145\n        /* \"telefonica/centenario2.sol\":748:756  _unpause */\n      tag_146\n        /* \"telefonica/centenario2.sol\":748:758  _unpause() */\n      jump\t// in\n    tag_145:\n        /* \"telefonica/centenario2.sol\":702:765  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":485:532  mapping(address => bool) public isAllowedToMint */\n    tag_60:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":538:571  address[] public allowedAddresses */\n    tag_71:\n      0x0b\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":637:696  function pause() public onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"telefonica/centenario2.sol\":681:689  _pause() */\n      tag_165\n        /* \"telefonica/centenario2.sol\":681:687  _pause */\n      tag_166\n        /* \"telefonica/centenario2.sol\":681:689  _pause() */\n      jump\t// in\n    tag_165:\n        /* \"telefonica/centenario2.sol\":637:696  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_117\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_117\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":1261:1450  function tokenURI(uint256 tokenId)... */\n    tag_98:\n        /* \"telefonica/centenario2.sol\":1384:1397  string memory */\n      0x60\n        /* \"telefonica/centenario2.sol\":1420:1443  super.tokenURI(tokenId) */\n      tag_183\n        /* \"telefonica/centenario2.sol\":1435:1442  tokenId */\n      dup3\n        /* \"telefonica/centenario2.sol\":1420:1434  super.tokenURI */\n      tag_184\n        /* \"telefonica/centenario2.sol\":1420:1443  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"telefonica/centenario2.sol\":1413:1443  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"telefonica/centenario2.sol\":1261:1450  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":771:976  function safeMint(address to, string memory uri) public {... */\n    tag_103:\n        /* \"telefonica/centenario2.sol\":838:853  uint256 tokenId */\n      0x00\n        /* \"telefonica/centenario2.sol\":856:868  _nextTokenId */\n      0x08\n      0x00\n        /* \"telefonica/centenario2.sol\":856:870  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"telefonica/centenario2.sol\":838:870  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"telefonica/centenario2.sol\":880:902  _safeMint(to, tokenId) */\n      tag_188\n        /* \"telefonica/centenario2.sol\":890:892  to */\n      dup4\n        /* \"telefonica/centenario2.sol\":894:901  tokenId */\n      dup3\n        /* \"telefonica/centenario2.sol\":880:889  _safeMint */\n      tag_189\n        /* \"telefonica/centenario2.sol\":880:902  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"telefonica/centenario2.sol\":912:938  _setTokenURI(tokenId, uri) */\n      tag_190\n        /* \"telefonica/centenario2.sol\":925:932  tokenId */\n      dup2\n        /* \"telefonica/centenario2.sol\":934:937  uri */\n      dup4\n        /* \"telefonica/centenario2.sol\":912:924  _setTokenURI */\n      tag_191\n        /* \"telefonica/centenario2.sol\":912:938  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_190:\n        /* \"telefonica/centenario2.sol\":965:969  true */\n      0x01\n        /* \"telefonica/centenario2.sol\":948:958  _hasMinted */\n      0x09\n        /* \"telefonica/centenario2.sol\":948:962  _hasMinted[to] */\n      0x00\n        /* \"telefonica/centenario2.sol\":959:961  to */\n      dup6\n        /* \"telefonica/centenario2.sol\":948:962  _hasMinted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"telefonica/centenario2.sol\":948:969  _hasMinted[to] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"telefonica/centenario2.sol\":827:976  {... */\n      pop\n        /* \"telefonica/centenario2.sol\":771:976  function safeMint(address to, string memory uri) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"telefonica/centenario2.sol\":1051:1255  function _update(address to, uint256 tokenId, address auth)... */\n    tag_137:\n        /* \"telefonica/centenario2.sol\":1186:1193  address */\n      0x00\n        /* \"telefonica/centenario2.sol\":1216:1248  super._update(to, tokenId, auth) */\n      tag_215\n        /* \"telefonica/centenario2.sol\":1230:1232  to */\n      dup5\n        /* \"telefonica/centenario2.sol\":1234:1241  tokenId */\n      dup5\n        /* \"telefonica/centenario2.sol\":1243:1247  auth */\n      dup5\n        /* \"telefonica/centenario2.sol\":1216:1229  super._update */\n      tag_216\n        /* \"telefonica/centenario2.sol\":1216:1248  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_215:\n        /* \"telefonica/centenario2.sol\":1209:1248  return super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"telefonica/centenario2.sol\":1051:1255  function _update(address to, uint256 tokenId, address auth)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x07\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_231\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      0x01\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_248\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_253\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_252)\n    tag_253:\n      0x60\n      swap2\n      pop\n    tag_252:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_262\n      swap1\n      tag_117\n      jump\t// in\n    tag_262:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_263\n      swap1\n      tag_117\n      jump\t// in\n    tag_263:\n      dup1\n      iszero\n      tag_264\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_265\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_264)\n    tag_265:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_266:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_266\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_260)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_271\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_260)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_260:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_283\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_284\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_293\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1120:1324  function _update(... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1259:1266  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_299\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1317  super._update(to, tokenId, auth) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1299:1301  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1303:1310  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1312:1316  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1298  super._update */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1285:1317  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1278:1317  return super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":1120:1324  function _update(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_307\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_63\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_311:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_313\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_314)\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_317\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_332\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_334\n      jumpi\n      tag_335\n      tag_336\n      jump\t// in\n    tag_335:\n    tag_334:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_337\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_337:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_340\n      jumpi\n      tag_341\n      tag_342\n      jump\t// in\n    tag_341:\n    tag_340:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_361\n      jumpi\n      tag_362\n      tag_342\n      jump\t// in\n    tag_362:\n    tag_361:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_364\n      jumpi\n      tag_365\n      tag_342\n      jump\t// in\n    tag_365:\n    tag_364:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_367\n      jumpi\n      tag_368\n      tag_342\n      jump\t// in\n    tag_368:\n    tag_367:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_370\n      jumpi\n      tag_371\n      tag_342\n      jump\t// in\n    tag_371:\n    tag_370:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_373\n      jumpi\n      tag_374\n      tag_342\n      jump\t// in\n    tag_374:\n    tag_373:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_376\n      jumpi\n      tag_377\n      tag_342\n      jump\t// in\n    tag_377:\n    tag_376:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_381\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_383\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_384\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_385:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_386:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_387:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_388:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_389:\n        /* \"#utility.yul\":561:584   */\n      tag_453\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_388\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_454:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_390:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_456\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_389\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_459\n      tag_386\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":833:952   */\n    tag_458:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_460\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_390\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_391:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_392:\n        /* \"#utility.yul\":1268:1289   */\n      tag_463\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_391\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_465\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_392\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_393:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_394:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_395:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_469:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_469)\n    tag_471:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_396:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_397:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_474\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_393\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2329:2400   */\n      tag_475\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_394\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_476\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_395\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2499:2528   */\n      tag_477\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_396\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_37:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_479\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_397\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_398:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_399:\n        /* \"#utility.yul\":3016:3040   */\n      tag_482\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_398\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_483:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_400:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_485\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_399\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_488\n      tag_386\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3292:3411   */\n    tag_487:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_489\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_400\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_401:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_402:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_492\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_401\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_403:\n        /* \"#utility.yul\":3872:3896   */\n      tag_494\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_402\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_496\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_403\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_404:\n        /* \"#utility.yul\":4210:4234   */\n      tag_498\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_402\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_499:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_405:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_501\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_404\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_46:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_504\n      tag_386\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4503:4622   */\n    tag_503:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_505\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_405\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_506\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_400\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_50:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_509\n      tag_386\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5000:5119   */\n    tag_508:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_510\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_405\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_511\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_405\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_512\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_400\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_59:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_515\n      tag_386\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5591:5710   */\n    tag_514:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_516\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_405\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_406:\n        /* \"#utility.yul\":5937:5961   */\n      tag_518\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_398\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_77:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_520\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_406\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_407:\n        /* \"#utility.yul\":6272:6293   */\n      tag_522\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_391\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_523:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_408:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_525\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_407\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_90:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_528\n      tag_386\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6553:6672   */\n    tag_527:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_529\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_405\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_530\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_408\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_409:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_410:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_336:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_411:\n        /* \"#utility.yul\":7452:7479   */\n      tag_535\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_396\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_537\n      tag_336\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7525:7613   */\n    tag_536:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_412:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_539\n      tag_385\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_540\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_411\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_413:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_543\n      tag_336\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7928:7984   */\n    tag_542:\n        /* \"#utility.yul\":8002:8031   */\n      tag_544\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_396\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_414:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_415:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_547\n        /* \"#utility.yul\":8374:8422   */\n      tag_548\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_413\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8358:8423   */\n      tag_412\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_550\n      tag_410\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":8498:8610   */\n    tag_549:\n        /* \"#utility.yul\":8619:8673   */\n      tag_551\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_414\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_416:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_554\n      tag_409\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8769:8891   */\n    tag_553:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_555\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_415\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_94:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_558\n      tag_386\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9178:9298   */\n    tag_557:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_559\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_405\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_560\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_405\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_561\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_400\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_563\n      tag_387\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9765:9882   */\n    tag_562:\n        /* \"#utility.yul\":9906:9968   */\n      tag_564\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_416\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_417:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_567\n      tag_336\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10129:10185   */\n    tag_566:\n        /* \"#utility.yul\":10203:10232   */\n      tag_568\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_396\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_418:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_570\n        /* \"#utility.yul\":10424:10473   */\n      tag_571\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_417\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":10408:10474   */\n      tag_412\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_573\n      tag_410\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":10549:10661   */\n    tag_572:\n        /* \"#utility.yul\":10670:10724   */\n      tag_574\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_414\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_419:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_577\n      tag_409\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":10822:10944   */\n    tag_576:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_578\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_418\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11750   */\n    tag_102:\n        /* \"#utility.yul\":11174:11180   */\n      0x00\n        /* \"#utility.yul\":11182:11188   */\n      dup1\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11219:11228   */\n      dup4\n        /* \"#utility.yul\":11210:11217   */\n      dup6\n        /* \"#utility.yul\":11206:11229   */\n      sub\n        /* \"#utility.yul\":11202:11234   */\n      slt\n        /* \"#utility.yul\":11199:11318   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":11237:11316   */\n      tag_581\n      tag_386\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":11199:11318   */\n    tag_580:\n        /* \"#utility.yul\":11357:11358   */\n      0x00\n        /* \"#utility.yul\":11382:11435   */\n      tag_582\n        /* \"#utility.yul\":11427:11434   */\n      dup6\n        /* \"#utility.yul\":11418:11424   */\n      dup3\n        /* \"#utility.yul\":11407:11416   */\n      dup7\n        /* \"#utility.yul\":11403:11425   */\n      add\n        /* \"#utility.yul\":11382:11435   */\n      tag_405\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":11372:11435   */\n      swap3\n      pop\n        /* \"#utility.yul\":11328:11445   */\n      pop\n        /* \"#utility.yul\":11512:11514   */\n      0x20\n        /* \"#utility.yul\":11501:11510   */\n      dup4\n        /* \"#utility.yul\":11497:11515   */\n      add\n        /* \"#utility.yul\":11484:11516   */\n      calldataload\n        /* \"#utility.yul\":11543:11561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11532:11562   */\n      gt\n        /* \"#utility.yul\":11529:11646   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":11565:11644   */\n      tag_584\n      tag_387\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":11529:11646   */\n    tag_583:\n        /* \"#utility.yul\":11670:11733   */\n      tag_585\n        /* \"#utility.yul\":11725:11732   */\n      dup6\n        /* \"#utility.yul\":11716:11722   */\n      dup3\n        /* \"#utility.yul\":11705:11714   */\n      dup7\n        /* \"#utility.yul\":11701:11723   */\n      add\n        /* \"#utility.yul\":11670:11733   */\n      tag_419\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":11660:11733   */\n      swap2\n      pop\n        /* \"#utility.yul\":11455:11743   */\n      pop\n        /* \"#utility.yul\":11096:11750   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11756:12230   */\n    tag_106:\n        /* \"#utility.yul\":11824:11830   */\n      0x00\n        /* \"#utility.yul\":11832:11838   */\n      dup1\n        /* \"#utility.yul\":11881:11883   */\n      0x40\n        /* \"#utility.yul\":11869:11878   */\n      dup4\n        /* \"#utility.yul\":11860:11867   */\n      dup6\n        /* \"#utility.yul\":11856:11879   */\n      sub\n        /* \"#utility.yul\":11852:11884   */\n      slt\n        /* \"#utility.yul\":11849:11968   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":11887:11966   */\n      tag_588\n      tag_386\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":11849:11968   */\n    tag_587:\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12032:12085   */\n      tag_589\n        /* \"#utility.yul\":12077:12084   */\n      dup6\n        /* \"#utility.yul\":12068:12074   */\n      dup3\n        /* \"#utility.yul\":12057:12066   */\n      dup7\n        /* \"#utility.yul\":12053:12075   */\n      add\n        /* \"#utility.yul\":12032:12085   */\n      tag_405\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":12022:12085   */\n      swap3\n      pop\n        /* \"#utility.yul\":11978:12095   */\n      pop\n        /* \"#utility.yul\":12134:12136   */\n      0x20\n        /* \"#utility.yul\":12160:12213   */\n      tag_590\n        /* \"#utility.yul\":12205:12212   */\n      dup6\n        /* \"#utility.yul\":12196:12202   */\n      dup3\n        /* \"#utility.yul\":12185:12194   */\n      dup7\n        /* \"#utility.yul\":12181:12203   */\n      add\n        /* \"#utility.yul\":12160:12213   */\n      tag_405\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":12150:12213   */\n      swap2\n      pop\n        /* \"#utility.yul\":12105:12223   */\n      pop\n        /* \"#utility.yul\":11756:12230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12416   */\n    tag_420:\n        /* \"#utility.yul\":12284:12361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12274:12362   */\n      mstore\n        /* \"#utility.yul\":12381:12385   */\n      0x22\n        /* \"#utility.yul\":12378:12379   */\n      0x04\n        /* \"#utility.yul\":12371:12386   */\n      mstore\n        /* \"#utility.yul\":12405:12409   */\n      0x24\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12395:12410   */\n      revert\n        /* \"#utility.yul\":12422:12742   */\n    tag_117:\n        /* \"#utility.yul\":12466:12472   */\n      0x00\n        /* \"#utility.yul\":12503:12504   */\n      0x02\n        /* \"#utility.yul\":12497:12501   */\n      dup3\n        /* \"#utility.yul\":12493:12505   */\n      div\n        /* \"#utility.yul\":12483:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12550:12551   */\n      0x01\n        /* \"#utility.yul\":12544:12548   */\n      dup3\n        /* \"#utility.yul\":12540:12552   */\n      and\n        /* \"#utility.yul\":12571:12589   */\n      dup1\n        /* \"#utility.yul\":12561:12642   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":12627:12631   */\n      0x7f\n        /* \"#utility.yul\":12619:12625   */\n      dup3\n        /* \"#utility.yul\":12615:12632   */\n      and\n        /* \"#utility.yul\":12605:12632   */\n      swap2\n      pop\n        /* \"#utility.yul\":12561:12642   */\n    tag_593:\n        /* \"#utility.yul\":12689:12691   */\n      0x20\n        /* \"#utility.yul\":12681:12687   */\n      dup3\n        /* \"#utility.yul\":12678:12692   */\n      lt\n        /* \"#utility.yul\":12658:12676   */\n      dup2\n        /* \"#utility.yul\":12655:12693   */\n      sub\n        /* \"#utility.yul\":12652:12736   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":12708:12726   */\n      tag_595\n      tag_420\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":12652:12736   */\n    tag_594:\n        /* \"#utility.yul\":12473:12742   */\n      pop\n        /* \"#utility.yul\":12422:12742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12748:13190   */\n    tag_140:\n        /* \"#utility.yul\":12897:12901   */\n      0x00\n        /* \"#utility.yul\":12935:12937   */\n      0x60\n        /* \"#utility.yul\":12924:12933   */\n      dup3\n        /* \"#utility.yul\":12920:12938   */\n      add\n        /* \"#utility.yul\":12912:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12948:13019   */\n      tag_597\n        /* \"#utility.yul\":13016:13017   */\n      0x00\n        /* \"#utility.yul\":13005:13014   */\n      dup4\n        /* \"#utility.yul\":13001:13018   */\n      add\n        /* \"#utility.yul\":12992:12998   */\n      dup7\n        /* \"#utility.yul\":12948:13019   */\n      tag_403\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":13029:13101   */\n      tag_598\n        /* \"#utility.yul\":13097:13099   */\n      0x20\n        /* \"#utility.yul\":13086:13095   */\n      dup4\n        /* \"#utility.yul\":13082:13100   */\n      add\n        /* \"#utility.yul\":13073:13079   */\n      dup6\n        /* \"#utility.yul\":13029:13101   */\n      tag_406\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":13111:13183   */\n      tag_599\n        /* \"#utility.yul\":13179:13181   */\n      0x40\n        /* \"#utility.yul\":13168:13177   */\n      dup4\n        /* \"#utility.yul\":13164:13182   */\n      add\n        /* \"#utility.yul\":13155:13161   */\n      dup5\n        /* \"#utility.yul\":13111:13183   */\n      tag_403\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":12748:13190   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13196:13376   */\n    tag_421:\n        /* \"#utility.yul\":13244:13321   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13241:13242   */\n      0x00\n        /* \"#utility.yul\":13234:13322   */\n      mstore\n        /* \"#utility.yul\":13341:13345   */\n      0x11\n        /* \"#utility.yul\":13338:13339   */\n      0x04\n        /* \"#utility.yul\":13331:13346   */\n      mstore\n        /* \"#utility.yul\":13365:13369   */\n      0x24\n        /* \"#utility.yul\":13362:13363   */\n      0x00\n        /* \"#utility.yul\":13355:13370   */\n      revert\n        /* \"#utility.yul\":13382:13615   */\n    tag_187:\n        /* \"#utility.yul\":13421:13424   */\n      0x00\n        /* \"#utility.yul\":13444:13468   */\n      tag_602\n        /* \"#utility.yul\":13462:13467   */\n      dup3\n        /* \"#utility.yul\":13444:13468   */\n      tag_398\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":13435:13468   */\n      swap2\n      pop\n        /* \"#utility.yul\":13490:13556   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13483:13488   */\n      dup3\n        /* \"#utility.yul\":13480:13557   */\n      sub\n        /* \"#utility.yul\":13477:13580   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":13560:13578   */\n      tag_604\n      tag_421\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":13477:13580   */\n    tag_603:\n        /* \"#utility.yul\":13607:13608   */\n      0x01\n        /* \"#utility.yul\":13600:13605   */\n      dup3\n        /* \"#utility.yul\":13596:13609   */\n      add\n        /* \"#utility.yul\":13589:13609   */\n      swap1\n      pop\n        /* \"#utility.yul\":13382:13615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13621:13846   */\n    tag_422:\n        /* \"#utility.yul\":13761:13795   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13757:13758   */\n      0x00\n        /* \"#utility.yul\":13749:13755   */\n      dup3\n        /* \"#utility.yul\":13745:13759   */\n      add\n        /* \"#utility.yul\":13738:13796   */\n      mstore\n        /* \"#utility.yul\":13830:13838   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13825:13827   */\n      0x20\n        /* \"#utility.yul\":13817:13823   */\n      dup3\n        /* \"#utility.yul\":13813:13828   */\n      add\n        /* \"#utility.yul\":13806:13839   */\n      mstore\n        /* \"#utility.yul\":13621:13846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13852:14218   */\n    tag_423:\n        /* \"#utility.yul\":13994:13997   */\n      0x00\n        /* \"#utility.yul\":14015:14082   */\n      tag_607\n        /* \"#utility.yul\":14079:14081   */\n      0x26\n        /* \"#utility.yul\":14074:14077   */\n      dup4\n        /* \"#utility.yul\":14015:14082   */\n      tag_394\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":14008:14082   */\n      swap2\n      pop\n        /* \"#utility.yul\":14091:14184   */\n      tag_608\n        /* \"#utility.yul\":14180:14183   */\n      dup3\n        /* \"#utility.yul\":14091:14184   */\n      tag_422\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":14209:14211   */\n      0x40\n        /* \"#utility.yul\":14204:14207   */\n      dup3\n        /* \"#utility.yul\":14200:14212   */\n      add\n        /* \"#utility.yul\":14193:14212   */\n      swap1\n      pop\n        /* \"#utility.yul\":13852:14218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14224:14643   */\n    tag_198:\n        /* \"#utility.yul\":14390:14394   */\n      0x00\n        /* \"#utility.yul\":14428:14430   */\n      0x20\n        /* \"#utility.yul\":14417:14426   */\n      dup3\n        /* \"#utility.yul\":14413:14431   */\n      add\n        /* \"#utility.yul\":14405:14431   */\n      swap1\n      pop\n        /* \"#utility.yul\":14477:14486   */\n      dup2\n        /* \"#utility.yul\":14471:14475   */\n      dup2\n        /* \"#utility.yul\":14467:14487   */\n      sub\n        /* \"#utility.yul\":14463:14464   */\n      0x00\n        /* \"#utility.yul\":14452:14461   */\n      dup4\n        /* \"#utility.yul\":14448:14465   */\n      add\n        /* \"#utility.yul\":14441:14488   */\n      mstore\n        /* \"#utility.yul\":14505:14636   */\n      tag_610\n        /* \"#utility.yul\":14631:14635   */\n      dup2\n        /* \"#utility.yul\":14505:14636   */\n      tag_423\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":14497:14636   */\n      swap1\n      pop\n        /* \"#utility.yul\":14224:14643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14649:14831   */\n    tag_424:\n        /* \"#utility.yul\":14789:14823   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14785:14786   */\n      0x00\n        /* \"#utility.yul\":14777:14783   */\n      dup3\n        /* \"#utility.yul\":14773:14787   */\n      add\n        /* \"#utility.yul\":14766:14824   */\n      mstore\n        /* \"#utility.yul\":14649:14831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14837:15203   */\n    tag_425:\n        /* \"#utility.yul\":14979:14982   */\n      0x00\n        /* \"#utility.yul\":15000:15067   */\n      tag_613\n        /* \"#utility.yul\":15064:15066   */\n      0x20\n        /* \"#utility.yul\":15059:15062   */\n      dup4\n        /* \"#utility.yul\":15000:15067   */\n      tag_394\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":14993:15067   */\n      swap2\n      pop\n        /* \"#utility.yul\":15076:15169   */\n      tag_614\n        /* \"#utility.yul\":15165:15168   */\n      dup3\n        /* \"#utility.yul\":15076:15169   */\n      tag_424\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":15194:15196   */\n      0x20\n        /* \"#utility.yul\":15189:15192   */\n      dup3\n        /* \"#utility.yul\":15185:15197   */\n      add\n        /* \"#utility.yul\":15178:15197   */\n      swap1\n      pop\n        /* \"#utility.yul\":14837:15203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15209:15628   */\n    tag_222:\n        /* \"#utility.yul\":15375:15379   */\n      0x00\n        /* \"#utility.yul\":15413:15415   */\n      0x20\n        /* \"#utility.yul\":15402:15411   */\n      dup3\n        /* \"#utility.yul\":15398:15416   */\n      add\n        /* \"#utility.yul\":15390:15416   */\n      swap1\n      pop\n        /* \"#utility.yul\":15462:15471   */\n      dup2\n        /* \"#utility.yul\":15456:15460   */\n      dup2\n        /* \"#utility.yul\":15452:15472   */\n      sub\n        /* \"#utility.yul\":15448:15449   */\n      0x00\n        /* \"#utility.yul\":15437:15446   */\n      dup4\n        /* \"#utility.yul\":15433:15450   */\n      add\n        /* \"#utility.yul\":15426:15473   */\n      mstore\n        /* \"#utility.yul\":15490:15621   */\n      tag_616\n        /* \"#utility.yul\":15616:15620   */\n      dup2\n        /* \"#utility.yul\":15490:15621   */\n      tag_425\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":15482:15621   */\n      swap1\n      pop\n        /* \"#utility.yul\":15209:15628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15634:15732   */\n    tag_426:\n        /* \"#utility.yul\":15685:15691   */\n      0x00\n        /* \"#utility.yul\":15719:15724   */\n      dup2\n        /* \"#utility.yul\":15713:15725   */\n      mload\n        /* \"#utility.yul\":15703:15725   */\n      swap1\n      pop\n        /* \"#utility.yul\":15634:15732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15738:15906   */\n    tag_427:\n        /* \"#utility.yul\":15821:15832   */\n      0x00\n        /* \"#utility.yul\":15855:15861   */\n      dup3\n        /* \"#utility.yul\":15850:15853   */\n      dup3\n        /* \"#utility.yul\":15843:15862   */\n      mstore\n        /* \"#utility.yul\":15895:15899   */\n      0x20\n        /* \"#utility.yul\":15890:15893   */\n      dup3\n        /* \"#utility.yul\":15886:15900   */\n      add\n        /* \"#utility.yul\":15871:15900   */\n      swap1\n      pop\n        /* \"#utility.yul\":15738:15906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15912:16285   */\n    tag_428:\n        /* \"#utility.yul\":15998:16001   */\n      0x00\n        /* \"#utility.yul\":16026:16064   */\n      tag_620\n        /* \"#utility.yul\":16058:16063   */\n      dup3\n        /* \"#utility.yul\":16026:16064   */\n      tag_426\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":16080:16150   */\n      tag_621\n        /* \"#utility.yul\":16143:16149   */\n      dup2\n        /* \"#utility.yul\":16138:16141   */\n      dup6\n        /* \"#utility.yul\":16080:16150   */\n      tag_427\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":16073:16150   */\n      swap4\n      pop\n        /* \"#utility.yul\":16159:16224   */\n      tag_622\n        /* \"#utility.yul\":16217:16223   */\n      dup2\n        /* \"#utility.yul\":16212:16215   */\n      dup6\n        /* \"#utility.yul\":16205:16209   */\n      0x20\n        /* \"#utility.yul\":16198:16203   */\n      dup7\n        /* \"#utility.yul\":16194:16210   */\n      add\n        /* \"#utility.yul\":16159:16224   */\n      tag_395\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":16249:16278   */\n      tag_623\n        /* \"#utility.yul\":16271:16277   */\n      dup2\n        /* \"#utility.yul\":16249:16278   */\n      tag_396\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":16244:16247   */\n      dup5\n        /* \"#utility.yul\":16240:16279   */\n      add\n        /* \"#utility.yul\":16233:16279   */\n      swap2\n      pop\n        /* \"#utility.yul\":16002:16285   */\n      pop\n        /* \"#utility.yul\":15912:16285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16291:16931   */\n    tag_244:\n        /* \"#utility.yul\":16486:16490   */\n      0x00\n        /* \"#utility.yul\":16524:16527   */\n      0x80\n        /* \"#utility.yul\":16513:16522   */\n      dup3\n        /* \"#utility.yul\":16509:16528   */\n      add\n        /* \"#utility.yul\":16501:16528   */\n      swap1\n      pop\n        /* \"#utility.yul\":16538:16609   */\n      tag_625\n        /* \"#utility.yul\":16606:16607   */\n      0x00\n        /* \"#utility.yul\":16595:16604   */\n      dup4\n        /* \"#utility.yul\":16591:16608   */\n      add\n        /* \"#utility.yul\":16582:16588   */\n      dup8\n        /* \"#utility.yul\":16538:16609   */\n      tag_403\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":16619:16691   */\n      tag_626\n        /* \"#utility.yul\":16687:16689   */\n      0x20\n        /* \"#utility.yul\":16676:16685   */\n      dup4\n        /* \"#utility.yul\":16672:16690   */\n      add\n        /* \"#utility.yul\":16663:16669   */\n      dup7\n        /* \"#utility.yul\":16619:16691   */\n      tag_403\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16701:16773   */\n      tag_627\n        /* \"#utility.yul\":16769:16771   */\n      0x40\n        /* \"#utility.yul\":16758:16767   */\n      dup4\n        /* \"#utility.yul\":16754:16772   */\n      add\n        /* \"#utility.yul\":16745:16751   */\n      dup6\n        /* \"#utility.yul\":16701:16773   */\n      tag_406\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":16820:16829   */\n      dup2\n        /* \"#utility.yul\":16814:16818   */\n      dup2\n        /* \"#utility.yul\":16810:16830   */\n      sub\n        /* \"#utility.yul\":16805:16807   */\n      0x60\n        /* \"#utility.yul\":16794:16803   */\n      dup4\n        /* \"#utility.yul\":16790:16808   */\n      add\n        /* \"#utility.yul\":16783:16831   */\n      mstore\n        /* \"#utility.yul\":16848:16924   */\n      tag_628\n        /* \"#utility.yul\":16919:16923   */\n      dup2\n        /* \"#utility.yul\":16910:16916   */\n      dup5\n        /* \"#utility.yul\":16848:16924   */\n      tag_428\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":16840:16924   */\n      swap1\n      pop\n        /* \"#utility.yul\":16291:16931   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16937:17078   */\n    tag_429:\n        /* \"#utility.yul\":16993:16998   */\n      0x00\n        /* \"#utility.yul\":17024:17030   */\n      dup2\n        /* \"#utility.yul\":17018:17031   */\n      mload\n        /* \"#utility.yul\":17009:17031   */\n      swap1\n      pop\n        /* \"#utility.yul\":17040:17072   */\n      tag_630\n        /* \"#utility.yul\":17066:17071   */\n      dup2\n        /* \"#utility.yul\":17040:17072   */\n      tag_389\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":16937:17078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17084:17433   */\n    tag_247:\n        /* \"#utility.yul\":17153:17159   */\n      0x00\n        /* \"#utility.yul\":17202:17204   */\n      0x20\n        /* \"#utility.yul\":17190:17199   */\n      dup3\n        /* \"#utility.yul\":17181:17188   */\n      dup5\n        /* \"#utility.yul\":17177:17200   */\n      sub\n        /* \"#utility.yul\":17173:17205   */\n      slt\n        /* \"#utility.yul\":17170:17289   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":17208:17287   */\n      tag_633\n      tag_386\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":17170:17289   */\n    tag_632:\n        /* \"#utility.yul\":17328:17329   */\n      0x00\n        /* \"#utility.yul\":17353:17416   */\n      tag_634\n        /* \"#utility.yul\":17408:17415   */\n      dup5\n        /* \"#utility.yul\":17399:17405   */\n      dup3\n        /* \"#utility.yul\":17388:17397   */\n      dup6\n        /* \"#utility.yul\":17384:17406   */\n      add\n        /* \"#utility.yul\":17353:17416   */\n      tag_429\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":17343:17416   */\n      swap2\n      pop\n        /* \"#utility.yul\":17299:17426   */\n      pop\n        /* \"#utility.yul\":17084:17433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17439:17587   */\n    tag_430:\n        /* \"#utility.yul\":17541:17552   */\n      0x00\n        /* \"#utility.yul\":17578:17581   */\n      dup2\n        /* \"#utility.yul\":17563:17581   */\n      swap1\n      pop\n        /* \"#utility.yul\":17439:17587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17593:17983   */\n    tag_431:\n        /* \"#utility.yul\":17699:17702   */\n      0x00\n        /* \"#utility.yul\":17727:17766   */\n      tag_637\n        /* \"#utility.yul\":17760:17765   */\n      dup3\n        /* \"#utility.yul\":17727:17766   */\n      tag_393\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":17782:17871   */\n      tag_638\n        /* \"#utility.yul\":17864:17870   */\n      dup2\n        /* \"#utility.yul\":17859:17862   */\n      dup6\n        /* \"#utility.yul\":17782:17871   */\n      tag_430\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":17775:17871   */\n      swap4\n      pop\n        /* \"#utility.yul\":17880:17945   */\n      tag_639\n        /* \"#utility.yul\":17938:17944   */\n      dup2\n        /* \"#utility.yul\":17933:17936   */\n      dup6\n        /* \"#utility.yul\":17926:17930   */\n      0x20\n        /* \"#utility.yul\":17919:17924   */\n      dup7\n        /* \"#utility.yul\":17915:17931   */\n      add\n        /* \"#utility.yul\":17880:17945   */\n      tag_395\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":17970:17976   */\n      dup1\n        /* \"#utility.yul\":17965:17968   */\n      dup5\n        /* \"#utility.yul\":17961:17977   */\n      add\n        /* \"#utility.yul\":17954:17977   */\n      swap2\n      pop\n        /* \"#utility.yul\":17703:17983   */\n      pop\n        /* \"#utility.yul\":17593:17983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17989:18424   */\n    tag_272:\n        /* \"#utility.yul\":18169:18172   */\n      0x00\n        /* \"#utility.yul\":18191:18286   */\n      tag_641\n        /* \"#utility.yul\":18282:18285   */\n      dup3\n        /* \"#utility.yul\":18273:18279   */\n      dup6\n        /* \"#utility.yul\":18191:18286   */\n      tag_431\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18184:18286   */\n      swap2\n      pop\n        /* \"#utility.yul\":18303:18398   */\n      tag_642\n        /* \"#utility.yul\":18394:18397   */\n      dup3\n        /* \"#utility.yul\":18385:18391   */\n      dup5\n        /* \"#utility.yul\":18303:18398   */\n      tag_431\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":18296:18398   */\n      swap2\n      pop\n        /* \"#utility.yul\":18415:18418   */\n      dup2\n        /* \"#utility.yul\":18408:18418   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:18424   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18430:18571   */\n    tag_432:\n        /* \"#utility.yul\":18479:18483   */\n      0x00\n        /* \"#utility.yul\":18502:18505   */\n      dup2\n        /* \"#utility.yul\":18494:18505   */\n      swap1\n      pop\n        /* \"#utility.yul\":18525:18528   */\n      dup2\n        /* \"#utility.yul\":18522:18523   */\n      0x00\n        /* \"#utility.yul\":18515:18529   */\n      mstore\n        /* \"#utility.yul\":18559:18563   */\n      0x20\n        /* \"#utility.yul\":18556:18557   */\n      0x00\n        /* \"#utility.yul\":18546:18564   */\n      keccak256\n        /* \"#utility.yul\":18538:18564   */\n      swap1\n      pop\n        /* \"#utility.yul\":18430:18571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18577:18670   */\n    tag_433:\n        /* \"#utility.yul\":18614:18620   */\n      0x00\n        /* \"#utility.yul\":18661:18663   */\n      0x20\n        /* \"#utility.yul\":18656:18658   */\n      0x1f\n        /* \"#utility.yul\":18649:18654   */\n      dup4\n        /* \"#utility.yul\":18645:18659   */\n      add\n        /* \"#utility.yul\":18641:18664   */\n      div\n        /* \"#utility.yul\":18631:18664   */\n      swap1\n      pop\n        /* \"#utility.yul\":18577:18670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18676:18783   */\n    tag_434:\n        /* \"#utility.yul\":18720:18728   */\n      0x00\n        /* \"#utility.yul\":18770:18775   */\n      dup3\n        /* \"#utility.yul\":18764:18768   */\n      dup3\n        /* \"#utility.yul\":18760:18776   */\n      shl\n        /* \"#utility.yul\":18739:18776   */\n      swap1\n      pop\n        /* \"#utility.yul\":18676:18783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18789:19182   */\n    tag_435:\n        /* \"#utility.yul\":18858:18864   */\n      0x00\n        /* \"#utility.yul\":18908:18909   */\n      0x08\n        /* \"#utility.yul\":18896:18906   */\n      dup4\n        /* \"#utility.yul\":18892:18910   */\n      mul\n        /* \"#utility.yul\":18931:19028   */\n      tag_647\n        /* \"#utility.yul\":18961:19027   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18950:18959   */\n      dup3\n        /* \"#utility.yul\":18931:19028   */\n      tag_434\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19049:19088   */\n      tag_648\n        /* \"#utility.yul\":19079:19087   */\n      dup7\n        /* \"#utility.yul\":19068:19077   */\n      dup4\n        /* \"#utility.yul\":19049:19088   */\n      tag_434\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":19037:19088   */\n      swap6\n      pop\n        /* \"#utility.yul\":19121:19125   */\n      dup1\n        /* \"#utility.yul\":19117:19126   */\n      not\n        /* \"#utility.yul\":19110:19115   */\n      dup5\n        /* \"#utility.yul\":19106:19127   */\n      and\n        /* \"#utility.yul\":19097:19127   */\n      swap4\n      pop\n        /* \"#utility.yul\":19170:19174   */\n      dup1\n        /* \"#utility.yul\":19160:19168   */\n      dup7\n        /* \"#utility.yul\":19156:19175   */\n      and\n        /* \"#utility.yul\":19149:19154   */\n      dup5\n        /* \"#utility.yul\":19146:19176   */\n      or\n        /* \"#utility.yul\":19136:19176   */\n      swap3\n      pop\n        /* \"#utility.yul\":18865:19182   */\n      pop\n      pop\n        /* \"#utility.yul\":18789:19182   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19188:19248   */\n    tag_436:\n        /* \"#utility.yul\":19216:19219   */\n      0x00\n        /* \"#utility.yul\":19237:19242   */\n      dup2\n        /* \"#utility.yul\":19230:19242   */\n      swap1\n      pop\n        /* \"#utility.yul\":19188:19248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19254:19396   */\n    tag_437:\n        /* \"#utility.yul\":19304:19313   */\n      0x00\n        /* \"#utility.yul\":19337:19390   */\n      tag_651\n        /* \"#utility.yul\":19355:19389   */\n      tag_652\n        /* \"#utility.yul\":19364:19388   */\n      tag_653\n        /* \"#utility.yul\":19382:19387   */\n      dup5\n        /* \"#utility.yul\":19364:19388   */\n      tag_398\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19355:19389   */\n      tag_436\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":19337:19390   */\n      tag_398\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19324:19390   */\n      swap1\n      pop\n        /* \"#utility.yul\":19254:19396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19402:19477   */\n    tag_438:\n        /* \"#utility.yul\":19445:19448   */\n      0x00\n        /* \"#utility.yul\":19466:19471   */\n      dup2\n        /* \"#utility.yul\":19459:19471   */\n      swap1\n      pop\n        /* \"#utility.yul\":19402:19477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19483:19752   */\n    tag_439:\n        /* \"#utility.yul\":19593:19632   */\n      tag_656\n        /* \"#utility.yul\":19624:19631   */\n      dup4\n        /* \"#utility.yul\":19593:19632   */\n      tag_437\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":19654:19745   */\n      tag_657\n        /* \"#utility.yul\":19703:19744   */\n      tag_658\n        /* \"#utility.yul\":19727:19743   */\n      dup3\n        /* \"#utility.yul\":19703:19744   */\n      tag_438\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":19695:19701   */\n      dup5\n        /* \"#utility.yul\":19688:19692   */\n      dup5\n        /* \"#utility.yul\":19682:19693   */\n      sload\n        /* \"#utility.yul\":19654:19745   */\n      tag_435\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":19648:19652   */\n      dup3\n        /* \"#utility.yul\":19641:19746   */\n      sstore\n        /* \"#utility.yul\":19559:19752   */\n      pop\n        /* \"#utility.yul\":19483:19752   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19758:19831   */\n    tag_440:\n        /* \"#utility.yul\":19803:19806   */\n      0x00\n        /* \"#utility.yul\":19758:19831   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19837:20026   */\n    tag_441:\n        /* \"#utility.yul\":19914:19946   */\n      tag_661\n      tag_440\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":19955:20020   */\n      tag_662\n        /* \"#utility.yul\":20013:20019   */\n      dup2\n        /* \"#utility.yul\":20005:20011   */\n      dup5\n        /* \"#utility.yul\":19999:20003   */\n      dup5\n        /* \"#utility.yul\":19955:20020   */\n      tag_439\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":19890:20026   */\n      pop\n        /* \"#utility.yul\":19837:20026   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20032:20218   */\n    tag_442:\n        /* \"#utility.yul\":20092:20212   */\n    tag_664:\n        /* \"#utility.yul\":20109:20112   */\n      dup2\n        /* \"#utility.yul\":20102:20107   */\n      dup2\n        /* \"#utility.yul\":20099:20113   */\n      lt\n        /* \"#utility.yul\":20092:20212   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":20163:20202   */\n      tag_667\n        /* \"#utility.yul\":20200:20201   */\n      0x00\n        /* \"#utility.yul\":20193:20198   */\n      dup3\n        /* \"#utility.yul\":20163:20202   */\n      tag_441\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":20136:20137   */\n      0x01\n        /* \"#utility.yul\":20129:20134   */\n      dup2\n        /* \"#utility.yul\":20125:20138   */\n      add\n        /* \"#utility.yul\":20116:20138   */\n      swap1\n      pop\n        /* \"#utility.yul\":20092:20212   */\n      jump(tag_664)\n    tag_666:\n        /* \"#utility.yul\":20032:20218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20224:20767   */\n    tag_443:\n        /* \"#utility.yul\":20325:20327   */\n      0x1f\n        /* \"#utility.yul\":20320:20323   */\n      dup3\n        /* \"#utility.yul\":20317:20328   */\n      gt\n        /* \"#utility.yul\":20314:20760   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":20359:20397   */\n      tag_670\n        /* \"#utility.yul\":20391:20396   */\n      dup2\n        /* \"#utility.yul\":20359:20397   */\n      tag_432\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":20443:20472   */\n      tag_671\n        /* \"#utility.yul\":20461:20471   */\n      dup5\n        /* \"#utility.yul\":20443:20472   */\n      tag_433\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20433:20441   */\n      dup2\n        /* \"#utility.yul\":20429:20473   */\n      add\n        /* \"#utility.yul\":20626:20628   */\n      0x20\n        /* \"#utility.yul\":20614:20624   */\n      dup6\n        /* \"#utility.yul\":20611:20629   */\n      lt\n        /* \"#utility.yul\":20608:20657   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":20647:20655   */\n      dup2\n        /* \"#utility.yul\":20632:20655   */\n      swap1\n      pop\n        /* \"#utility.yul\":20608:20657   */\n    tag_672:\n        /* \"#utility.yul\":20670:20750   */\n      tag_673\n        /* \"#utility.yul\":20726:20748   */\n      tag_674\n        /* \"#utility.yul\":20744:20747   */\n      dup6\n        /* \"#utility.yul\":20726:20748   */\n      tag_433\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20716:20724   */\n      dup4\n        /* \"#utility.yul\":20712:20749   */\n      add\n        /* \"#utility.yul\":20699:20710   */\n      dup3\n        /* \"#utility.yul\":20670:20750   */\n      tag_442\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":20329:20760   */\n      pop\n      pop\n        /* \"#utility.yul\":20314:20760   */\n    tag_669:\n        /* \"#utility.yul\":20224:20767   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20773:20890   */\n    tag_444:\n        /* \"#utility.yul\":20827:20835   */\n      0x00\n        /* \"#utility.yul\":20877:20882   */\n      dup3\n        /* \"#utility.yul\":20871:20875   */\n      dup3\n        /* \"#utility.yul\":20867:20883   */\n      shr\n        /* \"#utility.yul\":20846:20883   */\n      swap1\n      pop\n        /* \"#utility.yul\":20773:20890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20896:21065   */\n    tag_445:\n        /* \"#utility.yul\":20940:20946   */\n      0x00\n        /* \"#utility.yul\":20973:21024   */\n      tag_677\n        /* \"#utility.yul\":21021:21022   */\n      0x00\n        /* \"#utility.yul\":21017:21023   */\n      not\n        /* \"#utility.yul\":21009:21014   */\n      dup5\n        /* \"#utility.yul\":21006:21007   */\n      0x08\n        /* \"#utility.yul\":21002:21015   */\n      mul\n        /* \"#utility.yul\":20973:21024   */\n      tag_444\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":20969:21025   */\n      not\n        /* \"#utility.yul\":21054:21058   */\n      dup1\n        /* \"#utility.yul\":21048:21052   */\n      dup4\n        /* \"#utility.yul\":21044:21059   */\n      and\n        /* \"#utility.yul\":21034:21059   */\n      swap2\n      pop\n        /* \"#utility.yul\":20947:21065   */\n      pop\n        /* \"#utility.yul\":20896:21065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21070:21365   */\n    tag_446:\n        /* \"#utility.yul\":21146:21150   */\n      0x00\n        /* \"#utility.yul\":21292:21321   */\n      tag_679\n        /* \"#utility.yul\":21317:21320   */\n      dup4\n        /* \"#utility.yul\":21311:21315   */\n      dup4\n        /* \"#utility.yul\":21292:21321   */\n      tag_445\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":21284:21321   */\n      swap2\n      pop\n        /* \"#utility.yul\":21354:21357   */\n      dup3\n        /* \"#utility.yul\":21351:21352   */\n      0x02\n        /* \"#utility.yul\":21347:21358   */\n      mul\n        /* \"#utility.yul\":21341:21345   */\n      dup3\n        /* \"#utility.yul\":21338:21359   */\n      or\n        /* \"#utility.yul\":21330:21359   */\n      swap1\n      pop\n        /* \"#utility.yul\":21070:21365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21370:22765   */\n    tag_280:\n        /* \"#utility.yul\":21487:21524   */\n      tag_681\n        /* \"#utility.yul\":21520:21523   */\n      dup3\n        /* \"#utility.yul\":21487:21524   */\n      tag_393\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":21589:21607   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21581:21587   */\n      dup2\n        /* \"#utility.yul\":21578:21608   */\n      gt\n        /* \"#utility.yul\":21575:21631   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":21611:21629   */\n      tag_683\n      tag_336\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":21575:21631   */\n    tag_682:\n        /* \"#utility.yul\":21655:21693   */\n      tag_684\n        /* \"#utility.yul\":21687:21691   */\n      dup3\n        /* \"#utility.yul\":21681:21692   */\n      sload\n        /* \"#utility.yul\":21655:21693   */\n      tag_117\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":21740:21807   */\n      tag_685\n        /* \"#utility.yul\":21800:21806   */\n      dup3\n        /* \"#utility.yul\":21792:21798   */\n      dup3\n        /* \"#utility.yul\":21786:21790   */\n      dup6\n        /* \"#utility.yul\":21740:21807   */\n      tag_443\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":21834:21835   */\n      0x00\n        /* \"#utility.yul\":21858:21862   */\n      0x20\n        /* \"#utility.yul\":21845:21862   */\n      swap1\n      pop\n        /* \"#utility.yul\":21890:21892   */\n      0x1f\n        /* \"#utility.yul\":21882:21888   */\n      dup4\n        /* \"#utility.yul\":21879:21893   */\n      gt\n        /* \"#utility.yul\":21907:21908   */\n      0x01\n        /* \"#utility.yul\":21902:22520   */\n      dup2\n      eq\n      tag_687\n      jumpi\n        /* \"#utility.yul\":22564:22565   */\n      0x00\n        /* \"#utility.yul\":22581:22587   */\n      dup5\n        /* \"#utility.yul\":22578:22655   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":22630:22639   */\n      dup3\n        /* \"#utility.yul\":22625:22628   */\n      dup8\n        /* \"#utility.yul\":22621:22640   */\n      add\n        /* \"#utility.yul\":22615:22641   */\n      mload\n        /* \"#utility.yul\":22606:22641   */\n      swap1\n      pop\n        /* \"#utility.yul\":22578:22655   */\n    tag_688:\n        /* \"#utility.yul\":22681:22748   */\n      tag_689\n        /* \"#utility.yul\":22741:22747   */\n      dup6\n        /* \"#utility.yul\":22734:22739   */\n      dup3\n        /* \"#utility.yul\":22681:22748   */\n      tag_446\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":22675:22679   */\n      dup7\n        /* \"#utility.yul\":22668:22749   */\n      sstore\n        /* \"#utility.yul\":22537:22759   */\n      pop\n        /* \"#utility.yul\":21872:22759   */\n      jump(tag_686)\n        /* \"#utility.yul\":21902:22520   */\n    tag_687:\n        /* \"#utility.yul\":21954:21958   */\n      0x1f\n        /* \"#utility.yul\":21950:21959   */\n      not\n        /* \"#utility.yul\":21942:21948   */\n      dup5\n        /* \"#utility.yul\":21938:21960   */\n      and\n        /* \"#utility.yul\":21988:22025   */\n      tag_690\n        /* \"#utility.yul\":22020:22024   */\n      dup7\n        /* \"#utility.yul\":21988:22025   */\n      tag_432\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":22047:22048   */\n      0x00\n        /* \"#utility.yul\":22061:22269   */\n    tag_691:\n        /* \"#utility.yul\":22075:22082   */\n      dup3\n        /* \"#utility.yul\":22072:22073   */\n      dup2\n        /* \"#utility.yul\":22069:22083   */\n      lt\n        /* \"#utility.yul\":22061:22269   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":22154:22163   */\n      dup5\n        /* \"#utility.yul\":22149:22152   */\n      dup10\n        /* \"#utility.yul\":22145:22164   */\n      add\n        /* \"#utility.yul\":22139:22165   */\n      mload\n        /* \"#utility.yul\":22131:22137   */\n      dup3\n        /* \"#utility.yul\":22124:22166   */\n      sstore\n        /* \"#utility.yul\":22205:22206   */\n      0x01\n        /* \"#utility.yul\":22197:22203   */\n      dup3\n        /* \"#utility.yul\":22193:22207   */\n      add\n        /* \"#utility.yul\":22183:22207   */\n      swap2\n      pop\n        /* \"#utility.yul\":22252:22254   */\n      0x20\n        /* \"#utility.yul\":22241:22250   */\n      dup6\n        /* \"#utility.yul\":22237:22255   */\n      add\n        /* \"#utility.yul\":22224:22255   */\n      swap5\n      pop\n        /* \"#utility.yul\":22098:22102   */\n      0x20\n        /* \"#utility.yul\":22095:22096   */\n      dup2\n        /* \"#utility.yul\":22091:22103   */\n      add\n        /* \"#utility.yul\":22086:22103   */\n      swap1\n      pop\n        /* \"#utility.yul\":22061:22269   */\n      jump(tag_691)\n    tag_693:\n        /* \"#utility.yul\":22297:22303   */\n      dup7\n        /* \"#utility.yul\":22288:22295   */\n      dup4\n        /* \"#utility.yul\":22285:22304   */\n      lt\n        /* \"#utility.yul\":22282:22461   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":22355:22364   */\n      dup5\n        /* \"#utility.yul\":22350:22353   */\n      dup10\n        /* \"#utility.yul\":22346:22365   */\n      add\n        /* \"#utility.yul\":22340:22366   */\n      mload\n        /* \"#utility.yul\":22398:22446   */\n      tag_695\n        /* \"#utility.yul\":22440:22444   */\n      0x1f\n        /* \"#utility.yul\":22432:22438   */\n      dup10\n        /* \"#utility.yul\":22428:22445   */\n      and\n        /* \"#utility.yul\":22417:22426   */\n      dup3\n        /* \"#utility.yul\":22398:22446   */\n      tag_445\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":22390:22396   */\n      dup4\n        /* \"#utility.yul\":22383:22447   */\n      sstore\n        /* \"#utility.yul\":22305:22461   */\n      pop\n        /* \"#utility.yul\":22282:22461   */\n    tag_694:\n        /* \"#utility.yul\":22507:22508   */\n      0x01\n        /* \"#utility.yul\":22503:22504   */\n      0x02\n        /* \"#utility.yul\":22495:22501   */\n      dup9\n        /* \"#utility.yul\":22491:22505   */\n      mul\n        /* \"#utility.yul\":22487:22509   */\n      add\n        /* \"#utility.yul\":22481:22485   */\n      dup9\n        /* \"#utility.yul\":22474:22510   */\n      sstore\n        /* \"#utility.yul\":21909:22520   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21872:22759   */\n    tag_686:\n      pop\n        /* \"#utility.yul\":21462:22765   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21370:22765   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22771:22951   */\n    tag_342:\n        /* \"#utility.yul\":22819:22896   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22816:22817   */\n      0x00\n        /* \"#utility.yul\":22809:22897   */\n      mstore\n        /* \"#utility.yul\":22916:22920   */\n      0x12\n        /* \"#utility.yul\":22913:22914   */\n      0x04\n        /* \"#utility.yul\":22906:22921   */\n      mstore\n        /* \"#utility.yul\":22940:22944   */\n      0x24\n        /* \"#utility.yul\":22937:22938   */\n      0x00\n        /* \"#utility.yul\":22930:22945   */\n      revert\n        /* \"#utility.yul\":22957:23289   */\n    tag_358:\n        /* \"#utility.yul\":23078:23082   */\n      0x00\n        /* \"#utility.yul\":23116:23118   */\n      0x40\n        /* \"#utility.yul\":23105:23114   */\n      dup3\n        /* \"#utility.yul\":23101:23119   */\n      add\n        /* \"#utility.yul\":23093:23119   */\n      swap1\n      pop\n        /* \"#utility.yul\":23129:23200   */\n      tag_698\n        /* \"#utility.yul\":23197:23198   */\n      0x00\n        /* \"#utility.yul\":23186:23195   */\n      dup4\n        /* \"#utility.yul\":23182:23199   */\n      add\n        /* \"#utility.yul\":23173:23179   */\n      dup6\n        /* \"#utility.yul\":23129:23200   */\n      tag_403\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":23210:23282   */\n      tag_699\n        /* \"#utility.yul\":23278:23280   */\n      0x20\n        /* \"#utility.yul\":23267:23276   */\n      dup4\n        /* \"#utility.yul\":23263:23281   */\n      add\n        /* \"#utility.yul\":23254:23260   */\n      dup5\n        /* \"#utility.yul\":23210:23282   */\n      tag_406\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":22957:23289   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220393ce21c9454a391d54c3822cfd29abb76449e80cfea5f097f1704df6f15357864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1669": {
									"entryPoint": null,
									"id": 1669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3023": {
									"entryPoint": null,
									"id": 3023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1625": {
									"entryPoint": 225,
									"id": 1625,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 232,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:19",
										"nodeType": "YulBlock",
										"src": "0:5231:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:19",
													"nodeType": "YulBlock",
													"src": "66:40:19",
													"statements": [
														{
															"nativeSrc": "77:22:19",
															"nodeType": "YulAssignment",
															"src": "77:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:19"
																},
																"nativeSrc": "87:12:19",
																"nodeType": "YulFunctionCall",
																"src": "87:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:19",
														"nodeType": "YulTypedName",
														"src": "49:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:19",
														"nodeType": "YulTypedName",
														"src": "59:6:19",
														"type": ""
													}
												],
												"src": "7:99:19"
											},
											{
												"body": {
													"nativeSrc": "140:152:19",
													"nodeType": "YulBlock",
													"src": "140:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:19",
																		"nodeType": "YulLiteral",
																		"src": "157:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:19",
																		"nodeType": "YulLiteral",
																		"src": "160:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:19"
																},
																"nativeSrc": "150:88:19",
																"nodeType": "YulFunctionCall",
																"src": "150:88:19"
															},
															"nativeSrc": "150:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:19",
																		"nodeType": "YulLiteral",
																		"src": "254:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:19",
																		"nodeType": "YulLiteral",
																		"src": "257:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:19"
																},
																"nativeSrc": "247:15:19",
																"nodeType": "YulFunctionCall",
																"src": "247:15:19"
															},
															"nativeSrc": "247:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:19",
																		"nodeType": "YulLiteral",
																		"src": "278:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:19",
																		"nodeType": "YulLiteral",
																		"src": "281:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:19"
																},
																"nativeSrc": "271:15:19",
																"nodeType": "YulFunctionCall",
																"src": "271:15:19"
															},
															"nativeSrc": "271:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:19"
											},
											{
												"body": {
													"nativeSrc": "326:152:19",
													"nodeType": "YulBlock",
													"src": "326:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:19",
																		"nodeType": "YulLiteral",
																		"src": "343:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:19",
																		"nodeType": "YulLiteral",
																		"src": "346:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:19"
																},
																"nativeSrc": "336:88:19",
																"nodeType": "YulFunctionCall",
																"src": "336:88:19"
															},
															"nativeSrc": "336:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:19",
																		"nodeType": "YulLiteral",
																		"src": "440:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:19",
																		"nodeType": "YulLiteral",
																		"src": "443:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:19"
																},
																"nativeSrc": "433:15:19",
																"nodeType": "YulFunctionCall",
																"src": "433:15:19"
															},
															"nativeSrc": "433:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:19",
																		"nodeType": "YulLiteral",
																		"src": "464:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:19",
																		"nodeType": "YulLiteral",
																		"src": "467:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:19"
																},
																"nativeSrc": "457:15:19",
																"nodeType": "YulFunctionCall",
																"src": "457:15:19"
															},
															"nativeSrc": "457:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:19"
											},
											{
												"body": {
													"nativeSrc": "535:269:19",
													"nodeType": "YulBlock",
													"src": "535:269:19",
													"statements": [
														{
															"nativeSrc": "545:22:19",
															"nodeType": "YulAssignment",
															"src": "545:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:19",
																		"nodeType": "YulLiteral",
																		"src": "565:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:19"
																},
																"nativeSrc": "555:12:19",
																"nodeType": "YulFunctionCall",
																"src": "555:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:19"
																}
															]
														},
														{
															"nativeSrc": "576:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:19",
																		"nodeType": "YulLiteral",
																		"src": "612:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:19"
																},
																"nativeSrc": "602:12:19",
																"nodeType": "YulFunctionCall",
																"src": "602:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:19",
																	"nodeType": "YulTypedName",
																	"src": "580:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:19",
																"nodeType": "YulBlock",
																"src": "653:51:19",
																"statements": [
																	{
																		"nativeSrc": "667:27:19",
																		"nodeType": "YulAssignment",
																		"src": "667:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:19",
																					"nodeType": "YulLiteral",
																					"src": "689:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:19"
																			},
																			"nativeSrc": "677:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:19"
																},
																"nativeSrc": "626:26:19",
																"nodeType": "YulFunctionCall",
																"src": "626:26:19"
															},
															"nativeSrc": "623:81:19",
															"nodeType": "YulIf",
															"src": "623:81:19"
														},
														{
															"body": {
																"nativeSrc": "756:42:19",
																"nodeType": "YulBlock",
																"src": "756:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:19"
																			},
																			"nativeSrc": "770:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:19"
																		},
																		"nativeSrc": "770:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:19",
																				"nodeType": "YulLiteral",
																				"src": "751:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:19"
																		},
																		"nativeSrc": "740:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:19"
																},
																"nativeSrc": "717:38:19",
																"nodeType": "YulFunctionCall",
																"src": "717:38:19"
															},
															"nativeSrc": "714:84:19",
															"nodeType": "YulIf",
															"src": "714:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:19",
														"nodeType": "YulTypedName",
														"src": "519:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:19",
														"nodeType": "YulTypedName",
														"src": "528:6:19",
														"type": ""
													}
												],
												"src": "484:320:19"
											},
											{
												"body": {
													"nativeSrc": "864:87:19",
													"nodeType": "YulBlock",
													"src": "864:87:19",
													"statements": [
														{
															"nativeSrc": "874:11:19",
															"nodeType": "YulAssignment",
															"src": "874:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:19",
																"nodeType": "YulIdentifier",
																"src": "882:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:19",
																		"nodeType": "YulLiteral",
																		"src": "902:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:19"
																},
																"nativeSrc": "895:14:19",
																"nodeType": "YulFunctionCall",
																"src": "895:14:19"
															},
															"nativeSrc": "895:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:19"
														},
														{
															"nativeSrc": "918:26:19",
															"nodeType": "YulAssignment",
															"src": "918:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:19",
																		"nodeType": "YulLiteral",
																		"src": "936:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:19",
																		"nodeType": "YulLiteral",
																		"src": "939:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:19"
																},
																"nativeSrc": "926:18:19",
																"nodeType": "YulFunctionCall",
																"src": "926:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:19",
														"nodeType": "YulTypedName",
														"src": "851:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:19",
														"nodeType": "YulTypedName",
														"src": "859:4:19",
														"type": ""
													}
												],
												"src": "810:141:19"
											},
											{
												"body": {
													"nativeSrc": "1001:49:19",
													"nodeType": "YulBlock",
													"src": "1001:49:19",
													"statements": [
														{
															"nativeSrc": "1011:33:19",
															"nodeType": "YulAssignment",
															"src": "1011:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:19",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:19"
																		},
																		"nativeSrc": "1025:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:19"
																},
																"nativeSrc": "1021:23:19",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:19",
														"nodeType": "YulTypedName",
														"src": "984:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:19",
														"nodeType": "YulTypedName",
														"src": "994:6:19",
														"type": ""
													}
												],
												"src": "957:93:19"
											},
											{
												"body": {
													"nativeSrc": "1109:54:19",
													"nodeType": "YulBlock",
													"src": "1109:54:19",
													"statements": [
														{
															"nativeSrc": "1119:37:19",
															"nodeType": "YulAssignment",
															"src": "1119:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:19"
																},
																"nativeSrc": "1140:16:19",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:19",
														"nodeType": "YulTypedName",
														"src": "1084:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:19",
														"nodeType": "YulTypedName",
														"src": "1090:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:19",
														"nodeType": "YulTypedName",
														"src": "1100:8:19",
														"type": ""
													}
												],
												"src": "1056:107:19"
											},
											{
												"body": {
													"nativeSrc": "1245:317:19",
													"nodeType": "YulBlock",
													"src": "1245:317:19",
													"statements": [
														{
															"nativeSrc": "1255:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:19"
																},
																"nativeSrc": "1272:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:19",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:19",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:19"
																},
																"nativeSrc": "1311:97:19",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:19",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:19",
															"nodeType": "YulAssignment",
															"src": "1417:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:19"
																},
																"nativeSrc": "1429:39:19",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:19"
																}
															]
														},
														{
															"nativeSrc": "1477:30:19",
															"nodeType": "YulAssignment",
															"src": "1477:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:19"
																		},
																		"nativeSrc": "1497:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:19"
																},
																"nativeSrc": "1486:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:19"
																}
															]
														},
														{
															"nativeSrc": "1516:40:19",
															"nodeType": "YulAssignment",
															"src": "1516:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:19"
																		},
																		"nativeSrc": "1536:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:19"
																},
																"nativeSrc": "1526:30:19",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:19",
														"nodeType": "YulTypedName",
														"src": "1206:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:19",
														"nodeType": "YulTypedName",
														"src": "1213:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:19",
														"nodeType": "YulTypedName",
														"src": "1225:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:19",
														"nodeType": "YulTypedName",
														"src": "1238:6:19",
														"type": ""
													}
												],
												"src": "1169:393:19"
											},
											{
												"body": {
													"nativeSrc": "1613:32:19",
													"nodeType": "YulBlock",
													"src": "1613:32:19",
													"statements": [
														{
															"nativeSrc": "1623:16:19",
															"nodeType": "YulAssignment",
															"src": "1623:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:19",
																"nodeType": "YulIdentifier",
																"src": "1634:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:19",
														"nodeType": "YulTypedName",
														"src": "1595:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:19",
														"nodeType": "YulTypedName",
														"src": "1605:7:19",
														"type": ""
													}
												],
												"src": "1568:77:19"
											},
											{
												"body": {
													"nativeSrc": "1683:28:19",
													"nodeType": "YulBlock",
													"src": "1683:28:19",
													"statements": [
														{
															"nativeSrc": "1693:12:19",
															"nodeType": "YulAssignment",
															"src": "1693:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:19",
																"nodeType": "YulIdentifier",
																"src": "1700:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:19",
														"nodeType": "YulTypedName",
														"src": "1669:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:19",
														"nodeType": "YulTypedName",
														"src": "1679:3:19",
														"type": ""
													}
												],
												"src": "1651:60:19"
											},
											{
												"body": {
													"nativeSrc": "1777:82:19",
													"nodeType": "YulBlock",
													"src": "1777:82:19",
													"statements": [
														{
															"nativeSrc": "1787:66:19",
															"nodeType": "YulAssignment",
															"src": "1787:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:19"
																				},
																				"nativeSrc": "1827:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:19"
																		},
																		"nativeSrc": "1818:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:19"
																},
																"nativeSrc": "1800:53:19",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:19",
														"nodeType": "YulTypedName",
														"src": "1757:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:19",
														"nodeType": "YulTypedName",
														"src": "1767:9:19",
														"type": ""
													}
												],
												"src": "1717:142:19"
											},
											{
												"body": {
													"nativeSrc": "1912:28:19",
													"nodeType": "YulBlock",
													"src": "1912:28:19",
													"statements": [
														{
															"nativeSrc": "1922:12:19",
															"nodeType": "YulAssignment",
															"src": "1922:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:19",
																"nodeType": "YulIdentifier",
																"src": "1929:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:19",
														"nodeType": "YulTypedName",
														"src": "1898:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:19",
														"nodeType": "YulTypedName",
														"src": "1908:3:19",
														"type": ""
													}
												],
												"src": "1865:75:19"
											},
											{
												"body": {
													"nativeSrc": "2022:193:19",
													"nodeType": "YulBlock",
													"src": "2022:193:19",
													"statements": [
														{
															"nativeSrc": "2032:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:19"
																},
																"nativeSrc": "2056:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:19",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:19"
																				},
																				"nativeSrc": "2145:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:19"
																				},
																				"nativeSrc": "2166:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:19"
																		},
																		"nativeSrc": "2117:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:19"
																},
																"nativeSrc": "2104:105:19",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:19"
															},
															"nativeSrc": "2104:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:19",
														"nodeType": "YulTypedName",
														"src": "1999:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:19",
														"nodeType": "YulTypedName",
														"src": "2005:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:19",
														"nodeType": "YulTypedName",
														"src": "2013:7:19",
														"type": ""
													}
												],
												"src": "1946:269:19"
											},
											{
												"body": {
													"nativeSrc": "2270:24:19",
													"nodeType": "YulBlock",
													"src": "2270:24:19",
													"statements": [
														{
															"nativeSrc": "2280:8:19",
															"nodeType": "YulAssignment",
															"src": "2280:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:19",
																"nodeType": "YulLiteral",
																"src": "2287:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:19",
														"nodeType": "YulTypedName",
														"src": "2266:3:19",
														"type": ""
													}
												],
												"src": "2221:73:19"
											},
											{
												"body": {
													"nativeSrc": "2353:136:19",
													"nodeType": "YulBlock",
													"src": "2353:136:19",
													"statements": [
														{
															"nativeSrc": "2363:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:19"
																},
																"nativeSrc": "2377:32:19",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:19"
																},
																"nativeSrc": "2418:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:19"
															},
															"nativeSrc": "2418:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:19",
														"nodeType": "YulTypedName",
														"src": "2339:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:19",
														"nodeType": "YulTypedName",
														"src": "2345:6:19",
														"type": ""
													}
												],
												"src": "2300:189:19"
											},
											{
												"body": {
													"nativeSrc": "2545:136:19",
													"nodeType": "YulBlock",
													"src": "2545:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:19",
																"nodeType": "YulBlock",
																"src": "2612:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:19"
																			},
																			"nativeSrc": "2626:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:19"
																		},
																		"nativeSrc": "2626:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:19"
																},
																"nativeSrc": "2562:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:19"
															},
															"nativeSrc": "2555:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:19",
																"nodeType": "YulBlock",
																"src": "2577:26:19",
																"statements": [
																	{
																		"nativeSrc": "2579:22:19",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:19"
																			},
																			"nativeSrc": "2588:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:19",
																"nodeType": "YulBlock",
																"src": "2559:2:19",
																"statements": []
															},
															"src": "2555:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:19",
														"nodeType": "YulTypedName",
														"src": "2533:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:19",
														"nodeType": "YulTypedName",
														"src": "2540:3:19",
														"type": ""
													}
												],
												"src": "2495:186:19"
											},
											{
												"body": {
													"nativeSrc": "2766:464:19",
													"nodeType": "YulBlock",
													"src": "2766:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:19",
																"nodeType": "YulBlock",
																"src": "2792:431:19",
																"statements": [
																	{
																		"nativeSrc": "2806:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:19"
																			},
																			"nativeSrc": "2822:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:19",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:19"
																					},
																					"nativeSrc": "2906:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:19"
																			},
																			"nativeSrc": "2892:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:19",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:19",
																			"nodeType": "YulBlock",
																			"src": "3093:27:19",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:19",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:19",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:19"
																			},
																			"nativeSrc": "3074:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:19"
																		},
																		"nativeSrc": "3071:49:19",
																		"nodeType": "YulIf",
																		"src": "3071:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:19"
																							},
																							"nativeSrc": "3189:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:19"
																					},
																					"nativeSrc": "3175:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:19"
																			},
																			"nativeSrc": "3133:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:19"
																		},
																		"nativeSrc": "3133:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:19"
																},
																"nativeSrc": "2780:11:19",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:19"
															},
															"nativeSrc": "2777:446:19",
															"nodeType": "YulIf",
															"src": "2777:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:19",
														"nodeType": "YulTypedName",
														"src": "2742:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:19",
														"nodeType": "YulTypedName",
														"src": "2749:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:19",
														"nodeType": "YulTypedName",
														"src": "2754:10:19",
														"type": ""
													}
												],
												"src": "2687:543:19"
											},
											{
												"body": {
													"nativeSrc": "3299:54:19",
													"nodeType": "YulBlock",
													"src": "3299:54:19",
													"statements": [
														{
															"nativeSrc": "3309:37:19",
															"nodeType": "YulAssignment",
															"src": "3309:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:19"
																},
																"nativeSrc": "3330:16:19",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:19",
														"nodeType": "YulTypedName",
														"src": "3274:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:19",
														"nodeType": "YulTypedName",
														"src": "3280:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:19",
														"nodeType": "YulTypedName",
														"src": "3290:8:19",
														"type": ""
													}
												],
												"src": "3236:117:19"
											},
											{
												"body": {
													"nativeSrc": "3410:118:19",
													"nodeType": "YulBlock",
													"src": "3410:118:19",
													"statements": [
														{
															"nativeSrc": "3420:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:19"
																				},
																				"nativeSrc": "3465:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:19",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:19"
																				},
																				"nativeSrc": "3480:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:19"
																		},
																		"nativeSrc": "3436:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:19"
																},
																"nativeSrc": "3432:56:19",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:19",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:19",
															"nodeType": "YulAssignment",
															"src": "3497:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:19"
																},
																"nativeSrc": "3507:15:19",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:19",
														"nodeType": "YulTypedName",
														"src": "3387:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:19",
														"nodeType": "YulTypedName",
														"src": "3393:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:19",
														"nodeType": "YulTypedName",
														"src": "3403:6:19",
														"type": ""
													}
												],
												"src": "3359:169:19"
											},
											{
												"body": {
													"nativeSrc": "3614:214:19",
													"nodeType": "YulBlock",
													"src": "3614:214:19",
													"statements": [
														{
															"nativeSrc": "3747:37:19",
															"nodeType": "YulAssignment",
															"src": "3747:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:19"
																},
																"nativeSrc": "3755:29:19",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:19"
																}
															]
														},
														{
															"nativeSrc": "3793:29:19",
															"nodeType": "YulAssignment",
															"src": "3793:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:19"
																		},
																		"nativeSrc": "3810:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:19"
																},
																"nativeSrc": "3801:21:19",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:19",
														"nodeType": "YulTypedName",
														"src": "3595:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:19",
														"nodeType": "YulTypedName",
														"src": "3601:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:19",
														"nodeType": "YulTypedName",
														"src": "3609:4:19",
														"type": ""
													}
												],
												"src": "3533:295:19"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:19",
													"nodeType": "YulBlock",
													"src": "3925:1303:19",
													"statements": [
														{
															"nativeSrc": "3936:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:19"
																},
																"nativeSrc": "3950:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:19",
																"nodeType": "YulBlock",
																"src": "4072:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:19"
																			},
																			"nativeSrc": "4074:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:19"
																		},
																		"nativeSrc": "4074:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:19",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:19"
																},
																"nativeSrc": "4041:30:19",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:19"
															},
															"nativeSrc": "4038:56:19",
															"nodeType": "YulIf",
															"src": "4038:56:19"
														},
														{
															"nativeSrc": "4104:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:19"
																		},
																		"nativeSrc": "4144:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:19"
																},
																"nativeSrc": "4118:38:19",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:19"
																},
																"nativeSrc": "4203:67:19",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:19"
															},
															"nativeSrc": "4203:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:19"
														},
														{
															"nativeSrc": "4280:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:19",
																"nodeType": "YulLiteral",
																"src": "4297:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:19",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:19",
															"nodeType": "YulAssignment",
															"src": "4308:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:19",
																"nodeType": "YulLiteral",
																"src": "4321:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:19",
																		"nodeType": "YulBlock",
																		"src": "4372:611:19",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:19",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:19"
																							},
																							"nativeSrc": "4413:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:19"
																					},
																					"nativeSrc": "4401:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:19",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:19"
																					},
																					"nativeSrc": "4451:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:19",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:19",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:19",
																					"nodeType": "YulBlock",
																					"src": "4569:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:19"
																												},
																												"nativeSrc": "4608:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:19"
																										},
																										"nativeSrc": "4602:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:19"
																								},
																								"nativeSrc": "4587:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:19"
																							},
																							"nativeSrc": "4587:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:19"
																						},
																						{
																							"nativeSrc": "4646:24:19",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:19",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:19"
																								},
																								"nativeSrc": "4656:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:19",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:19",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:19"
																								},
																								"nativeSrc": "4700:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:19"
																					},
																					"nativeSrc": "4532:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:19"
																				},
																				"nativeSrc": "4524:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:19",
																					"nodeType": "YulBlock",
																					"src": "4547:21:19",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:19",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:19",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:19"
																								},
																								"nativeSrc": "4554:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:19",
																					"nodeType": "YulBlock",
																					"src": "4528:3:19",
																					"statements": []
																				},
																				"src": "4524:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:19",
																					"nodeType": "YulBlock",
																					"src": "4768:156:19",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:19"
																										},
																										"nativeSrc": "4809:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:19"
																								},
																								"nativeSrc": "4803:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:19",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:19",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:19"
																												},
																												"nativeSrc": "4891:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:19"
																										},
																										"nativeSrc": "4861:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:19"
																								},
																								"nativeSrc": "4846:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:19"
																							},
																							"nativeSrc": "4846:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:19"
																					},
																					"nativeSrc": "4748:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:19"
																				},
																				"nativeSrc": "4745:179:19",
																				"nodeType": "YulIf",
																				"src": "4745:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:19",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:19"
																									},
																									"nativeSrc": "4954:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:19",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:19"
																							},
																							"nativeSrc": "4950:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:19"
																					},
																					"nativeSrc": "4937:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:19"
																				},
																				"nativeSrc": "4937:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:19"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:19",
																	"nodeType": "YulCase",
																	"src": "4365:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:19",
																		"nodeType": "YulBlock",
																		"src": "5000:222:19",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:19",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:19",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:19",
																					"nodeType": "YulBlock",
																					"src": "5051:67:19",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:19",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:19"
																										},
																										"nativeSrc": "5084:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:19"
																								},
																								"nativeSrc": "5078:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:19"
																				},
																				"nativeSrc": "5041:77:19",
																				"nodeType": "YulIf",
																				"src": "5041:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:19"
																							},
																							"nativeSrc": "5144:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:19"
																					},
																					"nativeSrc": "5131:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:19"
																				},
																				"nativeSrc": "5131:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:19"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:19",
																	"nodeType": "YulCase",
																	"src": "4992:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:19"
																},
																"nativeSrc": "4342:14:19",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:19"
															},
															"nativeSrc": "4335:887:19",
															"nodeType": "YulSwitch",
															"src": "4335:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:19",
														"nodeType": "YulTypedName",
														"src": "3914:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:19",
														"nodeType": "YulTypedName",
														"src": "3920:3:19",
														"type": ""
													}
												],
												"src": "3833:1395:19"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250815f90816200008d919062000411565b5080600190816200009f919062000411565b5050505f60075f6101000a81548160ff021916908315150217905550620000db620000cf620000e160201b60201c565b620000e860201b60201c565b620004f5565b5f33905090565b5f600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200022957607f821691505b6020821081036200023f576200023e620001e4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000266565b620002af868362000266565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002f9620002f3620002ed84620002c7565b620002d0565b620002c7565b9050919050565b5f819050919050565b6200031483620002d9565b6200032c620003238262000300565b84845462000272565b825550505050565b5f90565b6200034262000334565b6200034f81848462000309565b505050565b5b8181101562000376576200036a5f8262000338565b60018101905062000355565b5050565b601f821115620003c5576200038f8162000245565b6200039a8462000257565b81016020851015620003aa578190505b620003c2620003b98562000257565b83018262000354565b50505b505050565b5f82821c905092915050565b5f620003e75f1984600802620003ca565b1980831691505092915050565b5f620004018383620003d6565b9150826002028217905092915050565b6200041c82620001ad565b67ffffffffffffffff811115620004385762000437620001b7565b5b62000444825462000211565b620004518282856200037a565b5f60209050601f83116001811462000487575f841562000472578287015190505b6200047e8582620003f4565b865550620004ed565b601f198416620004978662000245565b5f5b82811015620004c05784890151825560018201915060208501945060208101905062000499565b86831015620004e05784890151620004dc601f891682620003d6565b8355505b6001600288020188555050505b505050505050565b6129b380620005035f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b6578063a22cb4651161007a578063a22cb4651461034e578063b88d4fde1461036a578063c87b56dd14610386578063d204c45e146103b6578063e985e9c5146103d2578063f2fde38b1461040257610140565b806370a08231146102ce578063715018a6146102fe5780638456cb59146103085780638da5cb5b1461031257806395d89b411461033057610140565b80633f4ba83a116101085780633f4ba83a146101fa57806342842e0e146102045780634813d8a6146102205780635c975abb146102505780636352211e1461026e57806364b55bed1461029e57610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806323b872dd146101de575b5f80fd5b61015e60048036038101906101599190611d76565b61041e565b60405161016b9190611dbb565b60405180910390f35b61017c61042f565b6040516101899190611e5e565b60405180910390f35b6101ac60048036038101906101a79190611eb1565b6104be565b6040516101b99190611f1b565b60405180910390f35b6101dc60048036038101906101d79190611f5e565b6104d9565b005b6101f860048036038101906101f39190611f9c565b6104ef565b005b6102026105ee565b005b61021e60048036038101906102199190611f9c565b610600565b005b61023a60048036038101906102359190611fec565b61061f565b6040516102479190611dbb565b60405180910390f35b61025861063c565b6040516102659190611dbb565b60405180910390f35b61028860048036038101906102839190611eb1565b610651565b6040516102959190611f1b565b60405180910390f35b6102b860048036038101906102b39190611eb1565b610662565b6040516102c59190611f1b565b60405180910390f35b6102e860048036038101906102e39190611fec565b61069d565b6040516102f59190612026565b60405180910390f35b610306610753565b005b610310610766565b005b61031a610778565b6040516103279190611f1b565b60405180910390f35b6103386107a1565b6040516103459190611e5e565b60405180910390f35b61036860048036038101906103639190612069565b610831565b005b610384600480360381019061037f91906121d3565b610847565b005b6103a0600480360381019061039b9190611eb1565b610864565b6040516103ad9190611e5e565b60405180910390f35b6103d060048036038101906103cb91906122f1565b610876565b005b6103ec60048036038101906103e7919061234b565b6108fd565b6040516103f99190611dbb565b60405180910390f35b61041c60048036038101906104179190611fec565b61098b565b005b5f61042882610a0d565b9050919050565b60605f805461043d906123b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610469906123b6565b80156104b45780601f1061048b576101008083540402835291602001916104b4565b820191905f5260205f20905b81548152906001019060200180831161049757829003601f168201915b5050505050905090565b5f6104c882610a6d565b506104d282610af3565b9050919050565b6104eb82826104e6610b2c565b610b33565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105569190611f1b565b60405180910390fd5b5f610572838361056d610b2c565b610b45565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105e8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105df939291906123e6565b60405180910390fd5b50505050565b6105f6610b5a565b6105fe610bd8565b565b61061a83838360405180602001604052805f815250610847565b505050565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f60075f9054906101000a900460ff16905090565b5f61065b82610a6d565b9050919050565b600b8181548110610671575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107059190611f1b565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61075b610b5a565b6107645f610c39565b565b61076e610b5a565b610776610cfe565b565b5f600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107b0906123b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc906123b6565b80156108275780601f106107fe57610100808354040283529160200191610827565b820191905f5260205f20905b81548152906001019060200180831161080a57829003601f168201915b5050505050905090565b61084361083c610b2c565b8383610d60565b5050565b6108528484846104ef565b61085e84848484610ec9565b50505050565b606061086f8261107b565b9050919050565b5f60085f81548092919061088990612448565b9190505590506108998382611186565b6108a381836111a3565b600160095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610993610b5a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906124ff565b60405180910390fd5b610a0a81610c39565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a665750610a65826111fd565b5b9050919050565b5f80610a78836112de565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aea57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ae19190612026565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b408383836001611317565b505050565b5f610b518484846114d6565b90509392505050565b610b62610b2c565b73ffffffffffffffffffffffffffffffffffffffff16610b80610778565b73ffffffffffffffffffffffffffffffffffffffff1614610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd90612567565b60405180910390fd5b565b610be06114f3565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c22610b2c565b604051610c2f9190611f1b565b60405180910390a1565b5f600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d06611533565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d49610b2c565b604051610d569190611f1b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dc79190611f1b565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ebc9190611dbb565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611075578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f0c610b2c565b8685856040518563ffffffff1660e01b8152600401610f2e94939291906125d7565b6020604051808303815f875af1925050508015610f6957506040513d601f19601f82011682018060405250810190610f669190612635565b60015b610fea573d805f8114610f97576040519150601f19603f3d011682016040523d82523d5f602084013e610f9c565b606091505b505f815103610fe257836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fd99190611f1b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461107357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161106a9190611f1b565b60405180910390fd5b505b50505050565b606061108682610a6d565b505f60065f8481526020019081526020015f2080546110a4906123b6565b80601f01602080910402602001604051908101604052809291908181526020018280546110d0906123b6565b801561111b5780601f106110f25761010080835404028352916020019161111b565b820191905f5260205f20905b8154815290600101906020018083116110fe57829003601f168201915b505050505090505f61112b611574565b90505f81510361113f578192505050611181565b5f8251111561117357808260405160200161115b92919061269a565b60405160208183030381529060405292505050611181565b61117c8461158a565b925050505b919050565b61119f828260405180602001604052805f8152506115f0565b5050565b8060065f8481526020019081526020015f2090816111c1919061285a565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111f19190612026565b60405180910390a15050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112c757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112d757506112d68261160b565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061134f57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611481575f61135e84610a6d565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113c857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113db57506113d981846108fd565b155b1561141d57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114149190611f1b565b60405180910390fd5b811561147f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f6114df611533565b6114ea848484611674565b90509392505050565b6114fb61063c565b611531576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61153b61063c565b15611572576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060405180602001604052805f815250905090565b606061159582610a6d565b505f61159f611574565b90505f8151116115bd5760405180602001604052805f8152506115e8565b806115c78461187f565b6040516020016115d892919061269a565b6040516020818303038152906040525b915050919050565b6115fa8383611949565b6116065f848484610ec9565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061167f846112de565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116c0576116bf818486611a3c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461174b576116ff5f855f80611317565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146117ca57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60605f600161188d84611aff565b0190505f8167ffffffffffffffff8111156118ab576118aa6120af565b5b6040519080825280601f01601f1916602001820160405280156118dd5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561193e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161193357611932612929565b5b0494505f85036118ea575b819350505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119b09190611f1b565b60405180910390fd5b5f6119c583835f610b45565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a37575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a2e9190611f1b565b60405180910390fd5b505050565b611a47838383611c50565b611afa575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611abb57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ab29190612026565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611af1929190612956565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b5b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b5157611b50612929565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b98576d04ee2d6d415b85acef81000000008381611b8e57611b8d612929565b5b0492506020810190505b662386f26fc100008310611bc757662386f26fc100008381611bbd57611bbc612929565b5b0492506010810190505b6305f5e1008310611bf0576305f5e1008381611be657611be5612929565b5b0492506008810190505b6127108310611c15576127108381611c0b57611c0a612929565b5b0492506004810190505b60648310611c385760648381611c2e57611c2d612929565b5b0492506002810190505b600a8310611c47576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611d0757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611cc85750611cc784846108fd565b5b80611d0657508273ffffffffffffffffffffffffffffffffffffffff16611cee83610af3565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d5581611d21565b8114611d5f575f80fd5b50565b5f81359050611d7081611d4c565b92915050565b5f60208284031215611d8b57611d8a611d19565b5b5f611d9884828501611d62565b91505092915050565b5f8115159050919050565b611db581611da1565b82525050565b5f602082019050611dce5f830184611dac565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0b578082015181840152602081019050611df0565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3082611dd4565b611e3a8185611dde565b9350611e4a818560208601611dee565b611e5381611e16565b840191505092915050565b5f6020820190508181035f830152611e768184611e26565b905092915050565b5f819050919050565b611e9081611e7e565b8114611e9a575f80fd5b50565b5f81359050611eab81611e87565b92915050565b5f60208284031215611ec657611ec5611d19565b5b5f611ed384828501611e9d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f0582611edc565b9050919050565b611f1581611efb565b82525050565b5f602082019050611f2e5f830184611f0c565b92915050565b611f3d81611efb565b8114611f47575f80fd5b50565b5f81359050611f5881611f34565b92915050565b5f8060408385031215611f7457611f73611d19565b5b5f611f8185828601611f4a565b9250506020611f9285828601611e9d565b9150509250929050565b5f805f60608486031215611fb357611fb2611d19565b5b5f611fc086828701611f4a565b9350506020611fd186828701611f4a565b9250506040611fe286828701611e9d565b9150509250925092565b5f6020828403121561200157612000611d19565b5b5f61200e84828501611f4a565b91505092915050565b61202081611e7e565b82525050565b5f6020820190506120395f830184612017565b92915050565b61204881611da1565b8114612052575f80fd5b50565b5f813590506120638161203f565b92915050565b5f806040838503121561207f5761207e611d19565b5b5f61208c85828601611f4a565b925050602061209d85828601612055565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120e582611e16565b810181811067ffffffffffffffff82111715612104576121036120af565b5b80604052505050565b5f612116611d10565b905061212282826120dc565b919050565b5f67ffffffffffffffff821115612141576121406120af565b5b61214a82611e16565b9050602081019050919050565b828183375f83830152505050565b5f61217761217284612127565b61210d565b905082815260208101848484011115612193576121926120ab565b5b61219e848285612157565b509392505050565b5f82601f8301126121ba576121b96120a7565b5b81356121ca848260208601612165565b91505092915050565b5f805f80608085870312156121eb576121ea611d19565b5b5f6121f887828801611f4a565b945050602061220987828801611f4a565b935050604061221a87828801611e9d565b925050606085013567ffffffffffffffff81111561223b5761223a611d1d565b5b612247878288016121a6565b91505092959194509250565b5f67ffffffffffffffff82111561226d5761226c6120af565b5b61227682611e16565b9050602081019050919050565b5f61229561229084612253565b61210d565b9050828152602081018484840111156122b1576122b06120ab565b5b6122bc848285612157565b509392505050565b5f82601f8301126122d8576122d76120a7565b5b81356122e8848260208601612283565b91505092915050565b5f806040838503121561230757612306611d19565b5b5f61231485828601611f4a565b925050602083013567ffffffffffffffff81111561233557612334611d1d565b5b612341858286016122c4565b9150509250929050565b5f806040838503121561236157612360611d19565b5b5f61236e85828601611f4a565b925050602061237f85828601611f4a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123cd57607f821691505b6020821081036123e0576123df612389565b5b50919050565b5f6060820190506123f95f830186611f0c565b6124066020830185612017565b6124136040830184611f0c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61245282611e7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124845761248361241b565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6124e9602683611dde565b91506124f48261248f565b604082019050919050565b5f6020820190508181035f830152612516816124dd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612551602083611dde565b915061255c8261251d565b602082019050919050565b5f6020820190508181035f83015261257e81612545565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6125a982612585565b6125b3818561258f565b93506125c3818560208601611dee565b6125cc81611e16565b840191505092915050565b5f6080820190506125ea5f830187611f0c565b6125f76020830186611f0c565b6126046040830185612017565b8181036060830152612616818461259f565b905095945050505050565b5f8151905061262f81611d4c565b92915050565b5f6020828403121561264a57612649611d19565b5b5f61265784828501612621565b91505092915050565b5f81905092915050565b5f61267482611dd4565b61267e8185612660565b935061268e818560208601611dee565b80840191505092915050565b5f6126a5828561266a565b91506126b1828461266a565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126de565b61272386836126de565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61275e61275961275484611e7e565b61273b565b611e7e565b9050919050565b5f819050919050565b61277783612744565b61278b61278382612765565b8484546126ea565b825550505050565b5f90565b61279f612793565b6127aa81848461276e565b505050565b5b818110156127cd576127c25f82612797565b6001810190506127b0565b5050565b601f821115612812576127e3816126bd565b6127ec846126cf565b810160208510156127fb578190505b61280f612807856126cf565b8301826127af565b50505b505050565b5f82821c905092915050565b5f6128325f1984600802612817565b1980831691505092915050565b5f61284a8383612823565b9150826002028217905092915050565b61286382611dd4565b67ffffffffffffffff81111561287c5761287b6120af565b5b61288682546123b6565b6128918282856127d1565b5f60209050601f8311600181146128c2575f84156128b0578287015190505b6128ba858261283f565b865550612921565b601f1984166128d0866126bd565b5f5b828110156128f7578489015182556001820191506020850194506020810190506128d2565b868310156129145784890151612910601f891682612823565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506129695f830185611f0c565b6129766020830184612017565b939250505056fea2646970667358221220393ce21c9454a391d54c3822cfd29abb76449e80cfea5f097f1704df6f15357864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8D SWAP2 SWAP1 PUSH3 0x411 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x411 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xDB PUSH3 0xCF PUSH3 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x4F5 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x229 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x23F JUMPI PUSH3 0x23E PUSH3 0x1E4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x266 JUMP JUMPDEST PUSH3 0x2AF DUP7 DUP4 PUSH3 0x266 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2F9 PUSH3 0x2F3 PUSH3 0x2ED DUP5 PUSH3 0x2C7 JUMP JUMPDEST PUSH3 0x2D0 JUMP JUMPDEST PUSH3 0x2C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x314 DUP4 PUSH3 0x2D9 JUMP JUMPDEST PUSH3 0x32C PUSH3 0x323 DUP3 PUSH3 0x300 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x272 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x342 PUSH3 0x334 JUMP JUMPDEST PUSH3 0x34F DUP2 DUP5 DUP5 PUSH3 0x309 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x376 JUMPI PUSH3 0x36A PUSH0 DUP3 PUSH3 0x338 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x355 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3C5 JUMPI PUSH3 0x38F DUP2 PUSH3 0x245 JUMP JUMPDEST PUSH3 0x39A DUP5 PUSH3 0x257 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3AA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3C2 PUSH3 0x3B9 DUP6 PUSH3 0x257 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x354 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3E7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3CA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x401 DUP4 DUP4 PUSH3 0x3D6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x41C DUP3 PUSH3 0x1AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x438 JUMPI PUSH3 0x437 PUSH3 0x1B7 JUMP JUMPDEST JUMPDEST PUSH3 0x444 DUP3 SLOAD PUSH3 0x211 JUMP JUMPDEST PUSH3 0x451 DUP3 DUP3 DUP6 PUSH3 0x37A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x487 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x472 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x47E DUP6 DUP3 PUSH3 0x3F4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4ED JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x497 DUP7 PUSH3 0x245 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4C0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x499 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4E0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4DC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3D6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29B3 DUP1 PUSH3 0x503 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x330 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4813D8A6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x64B55BED EQ PUSH2 0x29E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x766 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x428 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4C8 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH2 0x4D2 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB DUP3 DUP3 PUSH2 0x4E6 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x572 DUP4 DUP4 PUSH2 0x56D PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xBD8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x847 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x65B DUP3 PUSH2 0xA6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x764 PUSH0 PUSH2 0xC39 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x76E PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x776 PUSH2 0xCFE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x827 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x827 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x843 PUSH2 0x83C PUSH2 0xB2C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x85E DUP5 DUP5 DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x86F DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x889 SWAP1 PUSH2 0x2448 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x899 DUP4 DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x8A3 DUP2 DUP4 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 PUSH2 0xB5A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F8 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0xC39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA66 JUMPI POP PUSH2 0xA65 DUP3 PUSH2 0x11FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA78 DUP4 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB40 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1317 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB51 DUP5 DUP5 DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB62 PUSH2 0xB2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB80 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xBE0 PUSH2 0x14F3 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xC22 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD49 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1075 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF0C PUSH2 0xB2C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF69 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFEA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFE2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1073 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1086 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x10A4 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10D0 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x111B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x111B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x112B PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x113F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1181 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1173 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x115B SWAP3 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x117C DUP5 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15F0 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x11C1 SWAP2 SWAP1 PUSH2 0x285A JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x12C7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12D7 JUMPI POP PUSH2 0x12D6 DUP3 PUSH2 0x160B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x134F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1481 JUMPI PUSH0 PUSH2 0x135E DUP5 PUSH2 0xA6D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13C8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13DB JUMPI POP PUSH2 0x13D9 DUP2 DUP5 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x141D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x147F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DF PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x14EA DUP5 DUP5 DUP5 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14FB PUSH2 0x63C JUMP JUMPDEST PUSH2 0x1531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x153B PUSH2 0x63C JUMP JUMPDEST ISZERO PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1595 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH0 PUSH2 0x159F PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH2 0x15C7 DUP5 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D8 SWAP3 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FA DUP4 DUP4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x1606 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x167F DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16C0 JUMPI PUSH2 0x16BF DUP2 DUP5 DUP7 PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x174B JUMPI PUSH2 0x16FF PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17CA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x188D DUP5 PUSH2 0x1AFF JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x193E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x18EA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19C5 DUP4 DUP4 PUSH0 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A47 DUP4 DUP4 DUP4 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1AFA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF1 SWAP3 SWAP2 SWAP1 PUSH2 0x2956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B5B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B51 JUMPI PUSH2 0x1B50 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B98 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BC7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BF0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BE6 JUMPI PUSH2 0x1BE5 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C15 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C38 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C47 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D07 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1CC8 JUMPI POP PUSH2 0x1CC7 DUP5 DUP5 PUSH2 0x8FD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1D06 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CEE DUP4 PUSH2 0xAF3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1D21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D70 DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP5 DUP3 DUP6 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DCE PUSH0 DUP4 ADD DUP5 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF0 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E30 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x1E3A DUP2 DUP6 PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP PUSH2 0x1E4A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x1E53 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E76 DUP2 DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E90 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAB DUP2 PUSH2 0x1E87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F05 DUP3 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F15 DUP2 PUSH2 0x1EFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F2E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x1EFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F58 DUP2 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F92 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FD1 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FE2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2001 JUMPI PUSH2 0x2000 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x200E DUP5 DUP3 DUP6 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2020 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2039 PUSH0 DUP4 ADD DUP5 PUSH2 0x2017 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2048 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2052 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2063 DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x209D DUP6 DUP3 DUP7 ADD PUSH2 0x2055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20E5 DUP3 PUSH2 0x1E16 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2116 PUSH2 0x1D10 JUMP JUMPDEST SWAP1 POP PUSH2 0x2122 DUP3 DUP3 PUSH2 0x20DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x214A DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2177 PUSH2 0x2172 DUP5 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2192 PUSH2 0x20AB JUMP JUMPDEST JUMPDEST PUSH2 0x219E DUP5 DUP3 DUP6 PUSH2 0x2157 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21EB JUMPI PUSH2 0x21EA PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F8 DUP8 DUP3 DUP9 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2209 DUP8 DUP3 DUP9 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x221A DUP8 DUP3 DUP9 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x223B JUMPI PUSH2 0x223A PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2247 DUP8 DUP3 DUP9 ADD PUSH2 0x21A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x2276 DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 PUSH2 0x2290 DUP5 PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x20AB JUMP JUMPDEST JUMPDEST PUSH2 0x22BC DUP5 DUP3 DUP6 PUSH2 0x2157 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22D8 JUMPI PUSH2 0x22D7 PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22E8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2283 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2306 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2314 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2341 DUP6 DUP3 DUP7 ADD PUSH2 0x22C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2361 JUMPI PUSH2 0x2360 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236E DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x237F DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E0 JUMPI PUSH2 0x23DF PUSH2 0x2389 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x2413 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F0C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2452 DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2484 JUMPI PUSH2 0x2483 PUSH2 0x241B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E9 PUSH1 0x26 DUP4 PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP PUSH2 0x24F4 DUP3 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2516 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2551 PUSH1 0x20 DUP4 PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP PUSH2 0x255C DUP3 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x257E DUP2 PUSH2 0x2545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A9 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x25B3 DUP2 DUP6 PUSH2 0x258F JUMP JUMPDEST SWAP4 POP PUSH2 0x25C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25EA PUSH0 DUP4 ADD DUP8 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x25F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2604 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2017 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP5 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x262F DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264A JUMPI PUSH2 0x2649 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2657 DUP5 DUP3 DUP6 ADD PUSH2 0x2621 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2674 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x267E DUP2 DUP6 PUSH2 0x2660 JUMP JUMPDEST SWAP4 POP PUSH2 0x268E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26A5 DUP3 DUP6 PUSH2 0x266A JUMP JUMPDEST SWAP2 POP PUSH2 0x26B1 DUP3 DUP5 PUSH2 0x266A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2719 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH2 0x2723 DUP7 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275E PUSH2 0x2759 PUSH2 0x2754 DUP5 PUSH2 0x1E7E JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST PUSH2 0x1E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2777 DUP4 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x278B PUSH2 0x2783 DUP3 PUSH2 0x2765 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26EA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x279F PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x27AA DUP2 DUP5 DUP5 PUSH2 0x276E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27CD JUMPI PUSH2 0x27C2 PUSH0 DUP3 PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2812 JUMPI PUSH2 0x27E3 DUP2 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x27EC DUP5 PUSH2 0x26CF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27FB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x280F PUSH2 0x2807 DUP6 PUSH2 0x26CF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2832 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2817 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x284A DUP4 DUP4 PUSH2 0x2823 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2863 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x2886 DUP3 SLOAD PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x2891 DUP3 DUP3 DUP6 PUSH2 0x27D1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28C2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28BA DUP6 DUP3 PUSH2 0x283F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D0 DUP7 PUSH2 0x26BD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28D2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2914 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2910 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2969 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2976 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2017 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY EXTCODECOPY 0xE2 SHR SWAP5 SLOAD LOG3 SWAP2 0xD5 0x4C CODESIZE 0x22 0xCF 0xD2 SWAP11 0xBB PUSH23 0x449E80CFEA5F097F1704DF6F15357864736F6C63430008 OR STOP CALLER ",
							"sourceMap": "326:1337:18:-:0;;;578:53;;;;;;;;;;1381:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1241:5:12;1231:7;;:15;;;;;;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;326:1337:18;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:99:19:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;326:1337:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1092": {
									"entryPoint": 2867,
									"id": 1092,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1158": {
									"entryPoint": 4887,
									"id": 1158,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_485": {
									"entryPoint": 5492,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_740": {
									"entryPoint": 6716,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1288": {
									"entryPoint": 3785,
									"id": 1288,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2906,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_667": {
									"entryPoint": 2803,
									"id": 667,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_703": {
									"entryPoint": 7248,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_896": {
									"entryPoint": 6473,
									"id": 896,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1625": {
									"entryPoint": 2860,
									"id": 1625,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_654": {
									"entryPoint": 4830,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_pause_1735": {
									"entryPoint": 3326,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1706": {
									"entryPoint": 5427,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireOwned_1224": {
									"entryPoint": 2669,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requirePaused_1719": {
									"entryPoint": 5363,
									"id": 1719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeMint_911": {
									"entryPoint": 4486,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_937": {
									"entryPoint": 5616,
									"id": 937,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1195": {
									"entryPoint": 3424,
									"id": 1195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1584": {
									"entryPoint": 4515,
									"id": 1584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3129,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1751": {
									"entryPoint": 3032,
									"id": 1751,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1458": {
									"entryPoint": 5334,
									"id": 1458,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3092": {
									"entryPoint": 2885,
									"id": 3092,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_846": {
									"entryPoint": 5748,
									"id": 846,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowedAddresses_3015": {
									"entryPoint": 1634,
									"id": 3015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_501": {
									"entryPoint": 1241,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_409": {
									"entryPoint": 1693,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_518": {
									"entryPoint": 1214,
									"id": 518,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowedToMint_3012": {
									"entryPoint": 1567,
									"id": 3012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_551": {
									"entryPoint": 2301,
									"id": 551,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2720": {
									"entryPoint": 6911,
									"id": 2720,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_431": {
									"entryPoint": 1071,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_422": {
									"entryPoint": 1617,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1912,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3032": {
									"entryPoint": 1894,
									"id": 3032,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1694": {
									"entryPoint": 1596,
									"id": 1694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1875,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3070": {
									"entryPoint": 2166,
									"id": 3070,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_615": {
									"entryPoint": 1536,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_641": {
									"entryPoint": 2119,
									"id": 641,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_534": {
									"entryPoint": 2097,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1508": {
									"entryPoint": 2573,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2004": {
									"entryPoint": 5643,
									"id": 2004,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3124": {
									"entryPoint": 1054,
									"id": 3124,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_381": {
									"entryPoint": 4605,
									"id": 381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_440": {
									"entryPoint": 1953,
									"id": 440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1811": {
									"entryPoint": 6271,
									"id": 1811,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1565": {
									"entryPoint": 4219,
									"id": 1565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3108": {
									"entryPoint": 2148,
									"id": 3108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_476": {
									"entryPoint": 5514,
									"id": 476,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_597": {
									"entryPoint": 1263,
									"id": 597,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2443,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_3041": {
									"entryPoint": 1518,
									"id": 3041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 8945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23292:19",
										"nodeType": "YulBlock",
										"src": "0:23292:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "378:105:19",
													"nodeType": "YulBlock",
													"src": "378:105:19",
													"statements": [
														{
															"nativeSrc": "388:89:19",
															"nodeType": "YulAssignment",
															"src": "388:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:19",
																		"nodeType": "YulLiteral",
																		"src": "410:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:19"
																},
																"nativeSrc": "399:78:19",
																"nodeType": "YulFunctionCall",
																"src": "399:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:19",
														"nodeType": "YulTypedName",
														"src": "360:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:19",
														"nodeType": "YulTypedName",
														"src": "370:7:19",
														"type": ""
													}
												],
												"src": "334:149:19"
											},
											{
												"body": {
													"nativeSrc": "531:78:19",
													"nodeType": "YulBlock",
													"src": "531:78:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:19",
																"nodeType": "YulBlock",
																"src": "587:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:19",
																					"nodeType": "YulLiteral",
																					"src": "596:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:19",
																					"nodeType": "YulLiteral",
																					"src": "599:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nativeSrc": "589:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:19"
																		},
																		"nativeSrc": "589:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:19",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:19"
																				},
																				"nativeSrc": "561:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:19"
																		},
																		"nativeSrc": "551:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																},
																"nativeSrc": "544:42:19",
																"nodeType": "YulFunctionCall",
																"src": "544:42:19"
															},
															"nativeSrc": "541:62:19",
															"nodeType": "YulIf",
															"src": "541:62:19"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:19",
														"nodeType": "YulTypedName",
														"src": "524:5:19",
														"type": ""
													}
												],
												"src": "489:120:19"
											},
											{
												"body": {
													"nativeSrc": "666:86:19",
													"nodeType": "YulBlock",
													"src": "666:86:19",
													"statements": [
														{
															"nativeSrc": "676:29:19",
															"nodeType": "YulAssignment",
															"src": "676:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:19"
																},
																"nativeSrc": "685:20:19",
																"nodeType": "YulFunctionCall",
																"src": "685:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:19"
																},
																"nativeSrc": "714:32:19",
																"nodeType": "YulFunctionCall",
																"src": "714:32:19"
															},
															"nativeSrc": "714:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:19",
														"nodeType": "YulTypedName",
														"src": "644:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:19",
														"nodeType": "YulTypedName",
														"src": "652:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:19",
														"nodeType": "YulTypedName",
														"src": "660:5:19",
														"type": ""
													}
												],
												"src": "615:137:19"
											},
											{
												"body": {
													"nativeSrc": "823:262:19",
													"nodeType": "YulBlock",
													"src": "823:262:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:19",
																"nodeType": "YulBlock",
																"src": "869:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:19"
																			},
																			"nativeSrc": "871:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:19"
																		},
																		"nativeSrc": "871:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:19"
																		},
																		"nativeSrc": "840:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:19",
																		"nodeType": "YulLiteral",
																		"src": "865:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:19"
																},
																"nativeSrc": "836:32:19",
																"nodeType": "YulFunctionCall",
																"src": "836:32:19"
															},
															"nativeSrc": "833:119:19",
															"nodeType": "YulIf",
															"src": "833:119:19"
														},
														{
															"nativeSrc": "962:116:19",
															"nodeType": "YulBlock",
															"src": "962:116:19",
															"statements": [
																{
																	"nativeSrc": "977:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:19",
																		"nodeType": "YulLiteral",
																		"src": "991:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:19",
																			"nodeType": "YulTypedName",
																			"src": "981:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:19",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:19"
																				},
																				"nativeSrc": "1036:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:19",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:19"
																		},
																		"nativeSrc": "1016:52:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:19",
														"nodeType": "YulTypedName",
														"src": "793:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:19",
														"nodeType": "YulTypedName",
														"src": "804:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:19",
														"nodeType": "YulTypedName",
														"src": "816:6:19",
														"type": ""
													}
												],
												"src": "758:327:19"
											},
											{
												"body": {
													"nativeSrc": "1133:48:19",
													"nodeType": "YulBlock",
													"src": "1133:48:19",
													"statements": [
														{
															"nativeSrc": "1143:32:19",
															"nodeType": "YulAssignment",
															"src": "1143:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:19"
																		},
																		"nativeSrc": "1161:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:19"
																},
																"nativeSrc": "1154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1091:90:19"
											},
											{
												"body": {
													"nativeSrc": "1246:50:19",
													"nodeType": "YulBlock",
													"src": "1246:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:19"
																		},
																		"nativeSrc": "1268:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:19"
																},
																"nativeSrc": "1256:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:19"
															},
															"nativeSrc": "1256:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:19",
														"nodeType": "YulTypedName",
														"src": "1234:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:19",
														"nodeType": "YulTypedName",
														"src": "1241:3:19",
														"type": ""
													}
												],
												"src": "1187:109:19"
											},
											{
												"body": {
													"nativeSrc": "1394:118:19",
													"nodeType": "YulBlock",
													"src": "1394:118:19",
													"statements": [
														{
															"nativeSrc": "1404:26:19",
															"nodeType": "YulAssignment",
															"src": "1404:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:19"
																},
																"nativeSrc": "1412:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:19"
																		},
																		"nativeSrc": "1487:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:19"
																},
																"nativeSrc": "1440:65:19",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:19"
															},
															"nativeSrc": "1440:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:19",
														"nodeType": "YulTypedName",
														"src": "1366:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:19",
														"nodeType": "YulTypedName",
														"src": "1378:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:19",
														"nodeType": "YulTypedName",
														"src": "1389:4:19",
														"type": ""
													}
												],
												"src": "1302:210:19"
											},
											{
												"body": {
													"nativeSrc": "1577:40:19",
													"nodeType": "YulBlock",
													"src": "1577:40:19",
													"statements": [
														{
															"nativeSrc": "1588:22:19",
															"nodeType": "YulAssignment",
															"src": "1588:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:19"
																},
																"nativeSrc": "1598:12:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:19",
														"nodeType": "YulTypedName",
														"src": "1560:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:19",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													}
												],
												"src": "1518:99:19"
											},
											{
												"body": {
													"nativeSrc": "1719:73:19",
													"nodeType": "YulBlock",
													"src": "1719:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:19"
																},
																"nativeSrc": "1729:19:19",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:19"
															},
															"nativeSrc": "1729:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:19"
														},
														{
															"nativeSrc": "1757:29:19",
															"nodeType": "YulAssignment",
															"src": "1757:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nativeSrc": "1772:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:19",
														"nodeType": "YulTypedName",
														"src": "1691:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:19",
														"nodeType": "YulTypedName",
														"src": "1696:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:19",
														"nodeType": "YulTypedName",
														"src": "1707:11:19",
														"type": ""
													}
												],
												"src": "1623:169:19"
											},
											{
												"body": {
													"nativeSrc": "1860:184:19",
													"nodeType": "YulBlock",
													"src": "1860:184:19",
													"statements": [
														{
															"nativeSrc": "1870:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:19",
																"nodeType": "YulLiteral",
																"src": "1879:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:19",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:19",
																"nodeType": "YulBlock",
																"src": "1939:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:19"
																					},
																					"nativeSrc": "1960:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:19"
																							},
																							"nativeSrc": "1979:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:19"
																					},
																					"nativeSrc": "1973:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:19"
																			},
																			"nativeSrc": "1953:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:19"
																		},
																		"nativeSrc": "1953:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:19"
																},
																"nativeSrc": "1897:13:19",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:19"
															},
															"nativeSrc": "1889:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:19",
																"nodeType": "YulBlock",
																"src": "1911:19:19",
																"statements": [
																	{
																		"nativeSrc": "1913:15:19",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:19",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:19"
																			},
																			"nativeSrc": "1918:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:19",
																"nodeType": "YulBlock",
																"src": "1893:3:19",
																"statements": []
															},
															"src": "1889:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:19"
																		},
																		"nativeSrc": "2018:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:19"
																},
																"nativeSrc": "2011:27:19",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:19"
															},
															"nativeSrc": "2011:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:19",
														"nodeType": "YulTypedName",
														"src": "1842:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:19",
														"nodeType": "YulTypedName",
														"src": "1847:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:19",
														"nodeType": "YulTypedName",
														"src": "1852:6:19",
														"type": ""
													}
												],
												"src": "1798:246:19"
											},
											{
												"body": {
													"nativeSrc": "2098:54:19",
													"nodeType": "YulBlock",
													"src": "2098:54:19",
													"statements": [
														{
															"nativeSrc": "2108:38:19",
															"nodeType": "YulAssignment",
															"src": "2108:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:19"
																		},
																		"nativeSrc": "2122:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:19"
																		},
																		"nativeSrc": "2138:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:19"
																},
																"nativeSrc": "2118:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:19",
														"nodeType": "YulTypedName",
														"src": "2081:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:19",
														"nodeType": "YulTypedName",
														"src": "2091:6:19",
														"type": ""
													}
												],
												"src": "2050:102:19"
											},
											{
												"body": {
													"nativeSrc": "2250:285:19",
													"nodeType": "YulBlock",
													"src": "2250:285:19",
													"statements": [
														{
															"nativeSrc": "2260:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:19"
																},
																"nativeSrc": "2274:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:19",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:19",
															"nodeType": "YulAssignment",
															"src": "2322:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:19"
																},
																"nativeSrc": "2329:71:19",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:19",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:19"
																		},
																		"nativeSrc": "2444:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:19"
																},
																"nativeSrc": "2409:65:19",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:19"
															},
															"nativeSrc": "2409:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:19"
														},
														{
															"nativeSrc": "2483:46:19",
															"nodeType": "YulAssignment",
															"src": "2483:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:19"
																		},
																		"nativeSrc": "2499:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:19"
																},
																"nativeSrc": "2490:39:19",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:19",
														"nodeType": "YulTypedName",
														"src": "2231:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:19",
														"nodeType": "YulTypedName",
														"src": "2238:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:19",
														"nodeType": "YulTypedName",
														"src": "2246:3:19",
														"type": ""
													}
												],
												"src": "2158:377:19"
											},
											{
												"body": {
													"nativeSrc": "2659:195:19",
													"nodeType": "YulBlock",
													"src": "2659:195:19",
													"statements": [
														{
															"nativeSrc": "2669:26:19",
															"nodeType": "YulAssignment",
															"src": "2669:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:19",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:19"
																},
																"nativeSrc": "2677:18:19",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:19",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:19"
																		},
																		"nativeSrc": "2712:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:19"
																		},
																		"nativeSrc": "2731:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:19"
																},
																"nativeSrc": "2705:47:19",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:19"
															},
															"nativeSrc": "2705:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:19"
														},
														{
															"nativeSrc": "2761:86:19",
															"nodeType": "YulAssignment",
															"src": "2761:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:19"
																},
																"nativeSrc": "2769:78:19",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:19",
														"nodeType": "YulTypedName",
														"src": "2631:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:19",
														"nodeType": "YulTypedName",
														"src": "2643:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:19",
														"nodeType": "YulTypedName",
														"src": "2654:4:19",
														"type": ""
													}
												],
												"src": "2541:313:19"
											},
											{
												"body": {
													"nativeSrc": "2905:32:19",
													"nodeType": "YulBlock",
													"src": "2905:32:19",
													"statements": [
														{
															"nativeSrc": "2915:16:19",
															"nodeType": "YulAssignment",
															"src": "2915:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:19",
																"nodeType": "YulIdentifier",
																"src": "2926:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:19",
														"nodeType": "YulTypedName",
														"src": "2887:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:19",
														"nodeType": "YulTypedName",
														"src": "2897:7:19",
														"type": ""
													}
												],
												"src": "2860:77:19"
											},
											{
												"body": {
													"nativeSrc": "2986:79:19",
													"nodeType": "YulBlock",
													"src": "2986:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:19",
																"nodeType": "YulBlock",
																"src": "3043:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:19",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:19"
																			},
																			"nativeSrc": "3045:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:19"
																		},
																		"nativeSrc": "3045:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:19"
																				},
																				"nativeSrc": "3016:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:19"
																		},
																		"nativeSrc": "3006:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:19"
																},
																"nativeSrc": "2999:43:19",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:19"
															},
															"nativeSrc": "2996:63:19",
															"nodeType": "YulIf",
															"src": "2996:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:19",
														"nodeType": "YulTypedName",
														"src": "2979:5:19",
														"type": ""
													}
												],
												"src": "2943:122:19"
											},
											{
												"body": {
													"nativeSrc": "3123:87:19",
													"nodeType": "YulBlock",
													"src": "3123:87:19",
													"statements": [
														{
															"nativeSrc": "3133:29:19",
															"nodeType": "YulAssignment",
															"src": "3133:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:19"
																},
																"nativeSrc": "3142:20:19",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:19"
																},
																"nativeSrc": "3171:33:19",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:19"
															},
															"nativeSrc": "3171:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:19",
														"nodeType": "YulTypedName",
														"src": "3101:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:19",
														"nodeType": "YulTypedName",
														"src": "3109:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:19",
														"nodeType": "YulTypedName",
														"src": "3117:5:19",
														"type": ""
													}
												],
												"src": "3071:139:19"
											},
											{
												"body": {
													"nativeSrc": "3282:263:19",
													"nodeType": "YulBlock",
													"src": "3282:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:19",
																"nodeType": "YulBlock",
																"src": "3328:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:19"
																			},
																			"nativeSrc": "3330:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:19"
																		},
																		"nativeSrc": "3330:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:19"
																		},
																		"nativeSrc": "3299:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:19",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:19"
																},
																"nativeSrc": "3295:32:19",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:19"
															},
															"nativeSrc": "3292:119:19",
															"nodeType": "YulIf",
															"src": "3292:119:19"
														},
														{
															"nativeSrc": "3421:117:19",
															"nodeType": "YulBlock",
															"src": "3421:117:19",
															"statements": [
																{
																	"nativeSrc": "3436:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:19",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:19",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:19",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:19"
																				},
																				"nativeSrc": "3496:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:19"
																		},
																		"nativeSrc": "3475:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:19",
														"nodeType": "YulTypedName",
														"src": "3252:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:19",
														"nodeType": "YulTypedName",
														"src": "3263:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:19",
														"nodeType": "YulTypedName",
														"src": "3275:6:19",
														"type": ""
													}
												],
												"src": "3216:329:19"
											},
											{
												"body": {
													"nativeSrc": "3596:81:19",
													"nodeType": "YulBlock",
													"src": "3596:81:19",
													"statements": [
														{
															"nativeSrc": "3606:65:19",
															"nodeType": "YulAssignment",
															"src": "3606:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:19",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:19"
																},
																"nativeSrc": "3617:54:19",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:19",
														"nodeType": "YulTypedName",
														"src": "3578:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:19",
														"nodeType": "YulTypedName",
														"src": "3588:7:19",
														"type": ""
													}
												],
												"src": "3551:126:19"
											},
											{
												"body": {
													"nativeSrc": "3728:51:19",
													"nodeType": "YulBlock",
													"src": "3728:51:19",
													"statements": [
														{
															"nativeSrc": "3738:35:19",
															"nodeType": "YulAssignment",
															"src": "3738:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:19"
																},
																"nativeSrc": "3749:24:19",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:19",
														"nodeType": "YulTypedName",
														"src": "3710:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:19",
														"nodeType": "YulTypedName",
														"src": "3720:7:19",
														"type": ""
													}
												],
												"src": "3683:96:19"
											},
											{
												"body": {
													"nativeSrc": "3850:53:19",
													"nodeType": "YulBlock",
													"src": "3850:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:19"
																		},
																		"nativeSrc": "3872:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:19"
																},
																"nativeSrc": "3860:37:19",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:19"
															},
															"nativeSrc": "3860:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:19",
														"nodeType": "YulTypedName",
														"src": "3838:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:19",
														"nodeType": "YulTypedName",
														"src": "3845:3:19",
														"type": ""
													}
												],
												"src": "3785:118:19"
											},
											{
												"body": {
													"nativeSrc": "4007:124:19",
													"nodeType": "YulBlock",
													"src": "4007:124:19",
													"statements": [
														{
															"nativeSrc": "4017:26:19",
															"nodeType": "YulAssignment",
															"src": "4017:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:19"
																},
																"nativeSrc": "4025:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:19"
																		},
																		"nativeSrc": "4106:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:19"
																},
																"nativeSrc": "4053:71:19",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:19"
															},
															"nativeSrc": "4053:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:19",
														"nodeType": "YulTypedName",
														"src": "3979:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:19",
														"nodeType": "YulTypedName",
														"src": "3991:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:19",
														"nodeType": "YulTypedName",
														"src": "4002:4:19",
														"type": ""
													}
												],
												"src": "3909:222:19"
											},
											{
												"body": {
													"nativeSrc": "4180:79:19",
													"nodeType": "YulBlock",
													"src": "4180:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:19",
																"nodeType": "YulBlock",
																"src": "4237:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:19"
																			},
																			"nativeSrc": "4239:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:19"
																		},
																		"nativeSrc": "4239:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:19"
																				},
																				"nativeSrc": "4210:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:19"
																		},
																		"nativeSrc": "4200:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:19"
																},
																"nativeSrc": "4193:43:19",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:19"
															},
															"nativeSrc": "4190:63:19",
															"nodeType": "YulIf",
															"src": "4190:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:19",
														"nodeType": "YulTypedName",
														"src": "4173:5:19",
														"type": ""
													}
												],
												"src": "4137:122:19"
											},
											{
												"body": {
													"nativeSrc": "4317:87:19",
													"nodeType": "YulBlock",
													"src": "4317:87:19",
													"statements": [
														{
															"nativeSrc": "4327:29:19",
															"nodeType": "YulAssignment",
															"src": "4327:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:19"
																},
																"nativeSrc": "4336:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:19"
																},
																"nativeSrc": "4365:33:19",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:19"
															},
															"nativeSrc": "4365:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:19",
														"nodeType": "YulTypedName",
														"src": "4295:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:19",
														"nodeType": "YulTypedName",
														"src": "4303:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:19",
														"nodeType": "YulTypedName",
														"src": "4311:5:19",
														"type": ""
													}
												],
												"src": "4265:139:19"
											},
											{
												"body": {
													"nativeSrc": "4493:391:19",
													"nodeType": "YulBlock",
													"src": "4493:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:19",
																"nodeType": "YulBlock",
																"src": "4539:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:19"
																			},
																			"nativeSrc": "4541:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:19"
																		},
																		"nativeSrc": "4541:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:19"
																		},
																		"nativeSrc": "4510:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:19"
																},
																"nativeSrc": "4506:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:19"
															},
															"nativeSrc": "4503:119:19",
															"nodeType": "YulIf",
															"src": "4503:119:19"
														},
														{
															"nativeSrc": "4632:117:19",
															"nodeType": "YulBlock",
															"src": "4632:117:19",
															"statements": [
																{
																	"nativeSrc": "4647:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:19",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:19"
																				},
																				"nativeSrc": "4707:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:19"
																		},
																		"nativeSrc": "4686:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:19",
															"nodeType": "YulBlock",
															"src": "4759:118:19",
															"statements": [
																{
																	"nativeSrc": "4774:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:19",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:19",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:19"
																				},
																				"nativeSrc": "4835:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:19"
																		},
																		"nativeSrc": "4814:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:19",
														"nodeType": "YulTypedName",
														"src": "4455:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:19",
														"nodeType": "YulTypedName",
														"src": "4466:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:19",
														"nodeType": "YulTypedName",
														"src": "4478:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:19",
														"nodeType": "YulTypedName",
														"src": "4486:6:19",
														"type": ""
													}
												],
												"src": "4410:474:19"
											},
											{
												"body": {
													"nativeSrc": "4990:519:19",
													"nodeType": "YulBlock",
													"src": "4990:519:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:19",
																"nodeType": "YulBlock",
																"src": "5036:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:19"
																			},
																			"nativeSrc": "5038:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:19"
																		},
																		"nativeSrc": "5038:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:19"
																		},
																		"nativeSrc": "5007:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:19"
																},
																"nativeSrc": "5003:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:19"
															},
															"nativeSrc": "5000:119:19",
															"nodeType": "YulIf",
															"src": "5000:119:19"
														},
														{
															"nativeSrc": "5129:117:19",
															"nodeType": "YulBlock",
															"src": "5129:117:19",
															"statements": [
																{
																	"nativeSrc": "5144:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:19"
																				},
																				"nativeSrc": "5204:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:19"
																		},
																		"nativeSrc": "5183:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:19",
															"nodeType": "YulBlock",
															"src": "5256:118:19",
															"statements": [
																{
																	"nativeSrc": "5271:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:19"
																				},
																				"nativeSrc": "5332:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:19"
																		},
																		"nativeSrc": "5311:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:19",
															"nodeType": "YulBlock",
															"src": "5384:118:19",
															"statements": [
																{
																	"nativeSrc": "5399:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:19"
																				},
																				"nativeSrc": "5460:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:19"
																		},
																		"nativeSrc": "5439:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:19",
														"nodeType": "YulTypedName",
														"src": "4944:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:19",
														"nodeType": "YulTypedName",
														"src": "4955:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:19",
														"nodeType": "YulTypedName",
														"src": "4967:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:19",
														"nodeType": "YulTypedName",
														"src": "4975:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:19",
														"nodeType": "YulTypedName",
														"src": "4983:6:19",
														"type": ""
													}
												],
												"src": "4890:619:19"
											},
											{
												"body": {
													"nativeSrc": "5581:263:19",
													"nodeType": "YulBlock",
													"src": "5581:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:19",
																"nodeType": "YulBlock",
																"src": "5627:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:19"
																			},
																			"nativeSrc": "5629:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:19"
																		},
																		"nativeSrc": "5629:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:19"
																		},
																		"nativeSrc": "5598:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:19"
																},
																"nativeSrc": "5594:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:19"
															},
															"nativeSrc": "5591:119:19",
															"nodeType": "YulIf",
															"src": "5591:119:19"
														},
														{
															"nativeSrc": "5720:117:19",
															"nodeType": "YulBlock",
															"src": "5720:117:19",
															"statements": [
																{
																	"nativeSrc": "5735:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:19"
																				},
																				"nativeSrc": "5795:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:19"
																		},
																		"nativeSrc": "5774:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:19",
														"nodeType": "YulTypedName",
														"src": "5551:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:19",
														"nodeType": "YulTypedName",
														"src": "5562:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:19",
														"nodeType": "YulTypedName",
														"src": "5574:6:19",
														"type": ""
													}
												],
												"src": "5515:329:19"
											},
											{
												"body": {
													"nativeSrc": "5915:53:19",
													"nodeType": "YulBlock",
													"src": "5915:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:19"
																		},
																		"nativeSrc": "5937:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:19"
																},
																"nativeSrc": "5925:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:19"
															},
															"nativeSrc": "5925:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:19",
														"nodeType": "YulTypedName",
														"src": "5903:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:19",
														"nodeType": "YulTypedName",
														"src": "5910:3:19",
														"type": ""
													}
												],
												"src": "5850:118:19"
											},
											{
												"body": {
													"nativeSrc": "6072:124:19",
													"nodeType": "YulBlock",
													"src": "6072:124:19",
													"statements": [
														{
															"nativeSrc": "6082:26:19",
															"nodeType": "YulAssignment",
															"src": "6082:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:19"
																},
																"nativeSrc": "6090:18:19",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:19"
																		},
																		"nativeSrc": "6171:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:19"
																},
																"nativeSrc": "6118:71:19",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:19"
															},
															"nativeSrc": "6118:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:19",
														"nodeType": "YulTypedName",
														"src": "6044:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:19",
														"nodeType": "YulTypedName",
														"src": "6056:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:19",
														"nodeType": "YulTypedName",
														"src": "6067:4:19",
														"type": ""
													}
												],
												"src": "5974:222:19"
											},
											{
												"body": {
													"nativeSrc": "6242:76:19",
													"nodeType": "YulBlock",
													"src": "6242:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:19",
																"nodeType": "YulBlock",
																"src": "6296:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:19"
																			},
																			"nativeSrc": "6298:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:19"
																		},
																		"nativeSrc": "6298:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:19"
																				},
																				"nativeSrc": "6272:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:19"
																		},
																		"nativeSrc": "6262:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:19"
																},
																"nativeSrc": "6255:40:19",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:19"
															},
															"nativeSrc": "6252:60:19",
															"nodeType": "YulIf",
															"src": "6252:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:19",
														"nodeType": "YulTypedName",
														"src": "6235:5:19",
														"type": ""
													}
												],
												"src": "6202:116:19"
											},
											{
												"body": {
													"nativeSrc": "6373:84:19",
													"nodeType": "YulBlock",
													"src": "6373:84:19",
													"statements": [
														{
															"nativeSrc": "6383:29:19",
															"nodeType": "YulAssignment",
															"src": "6383:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:19"
																},
																"nativeSrc": "6392:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:19"
																},
																"nativeSrc": "6421:30:19",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:19"
															},
															"nativeSrc": "6421:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:19",
														"nodeType": "YulTypedName",
														"src": "6351:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:19",
														"nodeType": "YulTypedName",
														"src": "6359:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:19",
														"nodeType": "YulTypedName",
														"src": "6367:5:19",
														"type": ""
													}
												],
												"src": "6324:133:19"
											},
											{
												"body": {
													"nativeSrc": "6543:388:19",
													"nodeType": "YulBlock",
													"src": "6543:388:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:19",
																"nodeType": "YulBlock",
																"src": "6589:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:19"
																			},
																			"nativeSrc": "6591:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:19"
																		},
																		"nativeSrc": "6591:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:19"
																		},
																		"nativeSrc": "6560:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:19"
																},
																"nativeSrc": "6556:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:19"
															},
															"nativeSrc": "6553:119:19",
															"nodeType": "YulIf",
															"src": "6553:119:19"
														},
														{
															"nativeSrc": "6682:117:19",
															"nodeType": "YulBlock",
															"src": "6682:117:19",
															"statements": [
																{
																	"nativeSrc": "6697:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:19"
																				},
																				"nativeSrc": "6757:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:19"
																		},
																		"nativeSrc": "6736:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:19",
															"nodeType": "YulBlock",
															"src": "6809:115:19",
															"statements": [
																{
																	"nativeSrc": "6824:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:19",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:19"
																				},
																				"nativeSrc": "6882:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:19"
																		},
																		"nativeSrc": "6864:50:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:19",
														"nodeType": "YulTypedName",
														"src": "6505:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:19",
														"nodeType": "YulTypedName",
														"src": "6516:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:19",
														"nodeType": "YulTypedName",
														"src": "6528:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:19",
														"nodeType": "YulTypedName",
														"src": "6536:6:19",
														"type": ""
													}
												],
												"src": "6463:468:19"
											},
											{
												"body": {
													"nativeSrc": "7026:28:19",
													"nodeType": "YulBlock",
													"src": "7026:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:19"
																},
																"nativeSrc": "7036:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:19"
															},
															"nativeSrc": "7036:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:19"
											},
											{
												"body": {
													"nativeSrc": "7149:28:19",
													"nodeType": "YulBlock",
													"src": "7149:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:19"
																},
																"nativeSrc": "7159:12:19",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:19"
															},
															"nativeSrc": "7159:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:19"
											},
											{
												"body": {
													"nativeSrc": "7211:152:19",
													"nodeType": "YulBlock",
													"src": "7211:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:19",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:19"
																},
																"nativeSrc": "7221:88:19",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:19"
															},
															"nativeSrc": "7221:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:19"
																},
																"nativeSrc": "7318:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:19"
															},
															"nativeSrc": "7318:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:19"
																},
																"nativeSrc": "7342:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:19"
															},
															"nativeSrc": "7342:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:19"
											},
											{
												"body": {
													"nativeSrc": "7412:238:19",
													"nodeType": "YulBlock",
													"src": "7412:238:19",
													"statements": [
														{
															"nativeSrc": "7422:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:19"
																		},
																		"nativeSrc": "7452:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:19"
																},
																"nativeSrc": "7440:40:19",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:19",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:19",
																"nodeType": "YulBlock",
																"src": "7591:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:19"
																			},
																			"nativeSrc": "7593:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:19"
																		},
																		"nativeSrc": "7593:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:19"
																		},
																		"nativeSrc": "7531:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:19"
																		},
																		"nativeSrc": "7567:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:19"
																},
																"nativeSrc": "7528:62:19",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:19"
															},
															"nativeSrc": "7525:88:19",
															"nodeType": "YulIf",
															"src": "7525:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:19"
																},
																"nativeSrc": "7622:22:19",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:19"
															},
															"nativeSrc": "7622:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:19",
														"nodeType": "YulTypedName",
														"src": "7398:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:19",
														"nodeType": "YulTypedName",
														"src": "7406:4:19",
														"type": ""
													}
												],
												"src": "7369:281:19"
											},
											{
												"body": {
													"nativeSrc": "7697:88:19",
													"nodeType": "YulBlock",
													"src": "7697:88:19",
													"statements": [
														{
															"nativeSrc": "7707:30:19",
															"nodeType": "YulAssignment",
															"src": "7707:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:19"
																},
																"nativeSrc": "7717:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:19"
																},
																"nativeSrc": "7746:33:19",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:19"
															},
															"nativeSrc": "7746:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:19",
														"nodeType": "YulTypedName",
														"src": "7681:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:19",
														"nodeType": "YulTypedName",
														"src": "7690:6:19",
														"type": ""
													}
												],
												"src": "7656:129:19"
											},
											{
												"body": {
													"nativeSrc": "7857:241:19",
													"nodeType": "YulBlock",
													"src": "7857:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:19",
																"nodeType": "YulBlock",
																"src": "7962:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:19"
																			},
																			"nativeSrc": "7964:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:19"
																		},
																		"nativeSrc": "7964:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:19",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:19"
																},
																"nativeSrc": "7931:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:19"
															},
															"nativeSrc": "7928:56:19",
															"nodeType": "YulIf",
															"src": "7928:56:19"
														},
														{
															"nativeSrc": "7994:37:19",
															"nodeType": "YulAssignment",
															"src": "7994:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:19"
																},
																"nativeSrc": "8002:29:19",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:19"
																}
															]
														},
														{
															"nativeSrc": "8068:23:19",
															"nodeType": "YulAssignment",
															"src": "8068:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:19"
																},
																"nativeSrc": "8076:15:19",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:19",
														"nodeType": "YulTypedName",
														"src": "7841:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:19",
														"nodeType": "YulTypedName",
														"src": "7852:4:19",
														"type": ""
													}
												],
												"src": "7791:307:19"
											},
											{
												"body": {
													"nativeSrc": "8168:82:19",
													"nodeType": "YulBlock",
													"src": "8168:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:19"
																},
																"nativeSrc": "8178:30:19",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:19"
															},
															"nativeSrc": "8178:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:19"
																		},
																		"nativeSrc": "8224:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:19"
																},
																"nativeSrc": "8217:27:19",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:19"
															},
															"nativeSrc": "8217:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:19",
														"nodeType": "YulTypedName",
														"src": "8150:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:19",
														"nodeType": "YulTypedName",
														"src": "8155:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:19",
														"nodeType": "YulTypedName",
														"src": "8160:6:19",
														"type": ""
													}
												],
												"src": "8104:146:19"
											},
											{
												"body": {
													"nativeSrc": "8339:340:19",
													"nodeType": "YulBlock",
													"src": "8339:340:19",
													"statements": [
														{
															"nativeSrc": "8349:74:19",
															"nodeType": "YulAssignment",
															"src": "8349:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:19",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:19"
																		},
																		"nativeSrc": "8374:48:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:19"
																},
																"nativeSrc": "8358:65:19",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:19"
																},
																"nativeSrc": "8432:21:19",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:19"
															},
															"nativeSrc": "8432:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:19"
														},
														{
															"nativeSrc": "8462:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:19",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:19"
																},
																"nativeSrc": "8473:16:19",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:19",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:19",
																"nodeType": "YulBlock",
																"src": "8527:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:19"
																			},
																			"nativeSrc": "8529:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:19"
																		},
																		"nativeSrc": "8529:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:19"
																		},
																		"nativeSrc": "8504:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:19"
																},
																"nativeSrc": "8501:25:19",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:19"
															},
															"nativeSrc": "8498:112:19",
															"nodeType": "YulIf",
															"src": "8498:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:19"
																},
																"nativeSrc": "8619:54:19",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:19"
															},
															"nativeSrc": "8619:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:19",
														"nodeType": "YulTypedName",
														"src": "8312:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:19",
														"nodeType": "YulTypedName",
														"src": "8317:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:19",
														"nodeType": "YulTypedName",
														"src": "8325:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:19",
														"nodeType": "YulTypedName",
														"src": "8333:5:19",
														"type": ""
													}
												],
												"src": "8256:423:19"
											},
											{
												"body": {
													"nativeSrc": "8759:277:19",
													"nodeType": "YulBlock",
													"src": "8759:277:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:19",
																"nodeType": "YulBlock",
																"src": "8808:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:19"
																			},
																			"nativeSrc": "8810:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:19"
																		},
																		"nativeSrc": "8810:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:19",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:19"
																				},
																				"nativeSrc": "8783:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:19"
																		},
																		"nativeSrc": "8779:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:19"
																},
																"nativeSrc": "8772:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:19"
															},
															"nativeSrc": "8769:122:19",
															"nodeType": "YulIf",
															"src": "8769:122:19"
														},
														{
															"nativeSrc": "8900:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:19"
																},
																"nativeSrc": "8914:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:19",
															"nodeType": "YulAssignment",
															"src": "8943:87:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:19",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:19"
																		},
																		"nativeSrc": "8999:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:19",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:19"
																},
																"nativeSrc": "8952:78:19",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:19",
														"nodeType": "YulTypedName",
														"src": "8737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:19",
														"nodeType": "YulTypedName",
														"src": "8745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:19",
														"nodeType": "YulTypedName",
														"src": "8753:5:19",
														"type": ""
													}
												],
												"src": "8698:338:19"
											},
											{
												"body": {
													"nativeSrc": "9168:817:19",
													"nodeType": "YulBlock",
													"src": "9168:817:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:19",
																"nodeType": "YulBlock",
																"src": "9215:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:19"
																			},
																			"nativeSrc": "9217:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:19"
																		},
																		"nativeSrc": "9217:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:19"
																		},
																		"nativeSrc": "9185:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:19",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:19"
																},
																"nativeSrc": "9181:33:19",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:19"
															},
															"nativeSrc": "9178:120:19",
															"nodeType": "YulIf",
															"src": "9178:120:19"
														},
														{
															"nativeSrc": "9308:117:19",
															"nodeType": "YulBlock",
															"src": "9308:117:19",
															"statements": [
																{
																	"nativeSrc": "9323:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:19"
																				},
																				"nativeSrc": "9383:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:19"
																		},
																		"nativeSrc": "9362:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:19",
															"nodeType": "YulBlock",
															"src": "9435:118:19",
															"statements": [
																{
																	"nativeSrc": "9450:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:19"
																				},
																				"nativeSrc": "9511:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:19"
																		},
																		"nativeSrc": "9490:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:19",
															"nodeType": "YulBlock",
															"src": "9563:118:19",
															"statements": [
																{
																	"nativeSrc": "9578:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:19"
																				},
																				"nativeSrc": "9639:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:19"
																		},
																		"nativeSrc": "9618:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:19",
															"nodeType": "YulBlock",
															"src": "9691:287:19",
															"statements": [
																{
																	"nativeSrc": "9706:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:19",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:19"
																				},
																				"nativeSrc": "9733:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:19"
																		},
																		"nativeSrc": "9720:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:19",
																		"nodeType": "YulBlock",
																		"src": "9799:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:19"
																					},
																					"nativeSrc": "9801:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:19"
																				},
																				"nativeSrc": "9801:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:19",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:19"
																		},
																		"nativeSrc": "9768:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:19"
																	},
																	"nativeSrc": "9765:117:19",
																	"nodeType": "YulIf",
																	"src": "9765:117:19"
																},
																{
																	"nativeSrc": "9896:72:19",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:19"
																				},
																				"nativeSrc": "9936:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:19",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:19"
																		},
																		"nativeSrc": "9906:62:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:19",
														"nodeType": "YulTypedName",
														"src": "9114:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:19",
														"nodeType": "YulTypedName",
														"src": "9125:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:19",
														"nodeType": "YulTypedName",
														"src": "9137:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:19",
														"nodeType": "YulTypedName",
														"src": "9145:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:19",
														"nodeType": "YulTypedName",
														"src": "9153:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:19",
														"nodeType": "YulTypedName",
														"src": "9161:6:19",
														"type": ""
													}
												],
												"src": "9042:943:19"
											},
											{
												"body": {
													"nativeSrc": "10058:241:19",
													"nodeType": "YulBlock",
													"src": "10058:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10163:22:19",
																"nodeType": "YulBlock",
																"src": "10163:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10165:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:19"
																			},
																			"nativeSrc": "10165:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:19"
																		},
																		"nativeSrc": "10165:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10135:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:18:19",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10132:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:19"
																},
																"nativeSrc": "10132:30:19",
																"nodeType": "YulFunctionCall",
																"src": "10132:30:19"
															},
															"nativeSrc": "10129:56:19",
															"nodeType": "YulIf",
															"src": "10129:56:19"
														},
														{
															"nativeSrc": "10195:37:19",
															"nodeType": "YulAssignment",
															"src": "10195:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10225:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10203:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:19"
																},
																"nativeSrc": "10203:29:19",
																"nodeType": "YulFunctionCall",
																"src": "10203:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10195:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:19"
																}
															]
														},
														{
															"nativeSrc": "10269:23:19",
															"nodeType": "YulAssignment",
															"src": "10269:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10281:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10287:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:19"
																},
																"nativeSrc": "10277:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10277:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10269:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "9991:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10042:6:19",
														"nodeType": "YulTypedName",
														"src": "10042:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10053:4:19",
														"nodeType": "YulTypedName",
														"src": "10053:4:19",
														"type": ""
													}
												],
												"src": "9991:308:19"
											},
											{
												"body": {
													"nativeSrc": "10389:341:19",
													"nodeType": "YulBlock",
													"src": "10389:341:19",
													"statements": [
														{
															"nativeSrc": "10399:75:19",
															"nodeType": "YulAssignment",
															"src": "10399:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10466:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10424:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:19"
																		},
																		"nativeSrc": "10424:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10408:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:19"
																},
																"nativeSrc": "10408:66:19",
																"nodeType": "YulFunctionCall",
																"src": "10408:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10399:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10490:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10483:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:19"
																},
																"nativeSrc": "10483:21:19",
																"nodeType": "YulFunctionCall",
																"src": "10483:21:19"
															},
															"nativeSrc": "10483:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:19"
														},
														{
															"nativeSrc": "10513:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10528:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10524:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:19"
																},
																"nativeSrc": "10524:16:19",
																"nodeType": "YulFunctionCall",
																"src": "10524:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10517:3:19",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10578:83:19",
																"nodeType": "YulBlock",
																"src": "10578:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10580:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:19"
																			},
																			"nativeSrc": "10580:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:19"
																		},
																		"nativeSrc": "10580:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10559:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10564:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:19"
																		},
																		"nativeSrc": "10555:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10573:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10552:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:19"
																},
																"nativeSrc": "10552:25:19",
																"nodeType": "YulFunctionCall",
																"src": "10552:25:19"
															},
															"nativeSrc": "10549:112:19",
															"nodeType": "YulIf",
															"src": "10549:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10707:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10712:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10717:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10670:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:19"
																},
																"nativeSrc": "10670:54:19",
																"nodeType": "YulFunctionCall",
																"src": "10670:54:19"
															},
															"nativeSrc": "10670:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10305:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10362:3:19",
														"nodeType": "YulTypedName",
														"src": "10362:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10367:6:19",
														"nodeType": "YulTypedName",
														"src": "10367:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10375:3:19",
														"nodeType": "YulTypedName",
														"src": "10375:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10383:5:19",
														"nodeType": "YulTypedName",
														"src": "10383:5:19",
														"type": ""
													}
												],
												"src": "10305:425:19"
											},
											{
												"body": {
													"nativeSrc": "10812:278:19",
													"nodeType": "YulBlock",
													"src": "10812:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "10861:83:19",
																"nodeType": "YulBlock",
																"src": "10861:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10863:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:19"
																			},
																			"nativeSrc": "10863:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:19"
																		},
																		"nativeSrc": "10863:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10840:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10848:4:19",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10836:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:19"
																				},
																				"nativeSrc": "10836:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10855:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10832:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:19"
																		},
																		"nativeSrc": "10832:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10825:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:19"
																},
																"nativeSrc": "10825:35:19",
																"nodeType": "YulFunctionCall",
																"src": "10825:35:19"
															},
															"nativeSrc": "10822:122:19",
															"nodeType": "YulIf",
															"src": "10822:122:19"
														},
														{
															"nativeSrc": "10953:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10980:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10967:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:19"
																},
																"nativeSrc": "10967:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10967:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10957:6:19",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10996:88:19",
															"nodeType": "YulAssignment",
															"src": "10996:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:4:19",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11053:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:19"
																		},
																		"nativeSrc": "11053:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11072:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11080:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11005:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:19"
																},
																"nativeSrc": "11005:79:19",
																"nodeType": "YulFunctionCall",
																"src": "11005:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10996:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "10750:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10790:6:19",
														"nodeType": "YulTypedName",
														"src": "10790:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10798:3:19",
														"nodeType": "YulTypedName",
														"src": "10798:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10806:5:19",
														"nodeType": "YulTypedName",
														"src": "10806:5:19",
														"type": ""
													}
												],
												"src": "10750:340:19"
											},
											{
												"body": {
													"nativeSrc": "11189:561:19",
													"nodeType": "YulBlock",
													"src": "11189:561:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11235:83:19",
																"nodeType": "YulBlock",
																"src": "11235:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11237:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11237:77:19"
																			},
																			"nativeSrc": "11237:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11237:79:19"
																		},
																		"nativeSrc": "11237:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11237:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11210:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11210:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11219:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11219:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11206:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:19"
																		},
																		"nativeSrc": "11206:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11231:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11202:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:19"
																},
																"nativeSrc": "11202:32:19",
																"nodeType": "YulFunctionCall",
																"src": "11202:32:19"
															},
															"nativeSrc": "11199:119:19",
															"nodeType": "YulIf",
															"src": "11199:119:19"
														},
														{
															"nativeSrc": "11328:117:19",
															"nodeType": "YulBlock",
															"src": "11328:117:19",
															"statements": [
																{
																	"nativeSrc": "11343:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11343:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11357:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11357:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11347:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11347:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11372:63:19",
																	"nodeType": "YulAssignment",
																	"src": "11372:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11407:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11407:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11418:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11418:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11403:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11403:3:19"
																				},
																				"nativeSrc": "11403:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11403:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11427:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11427:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11382:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "11382:20:19"
																		},
																		"nativeSrc": "11382:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11382:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11372:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11372:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11455:288:19",
															"nodeType": "YulBlock",
															"src": "11455:288:19",
															"statements": [
																{
																	"nativeSrc": "11470:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11470:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11501:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11501:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11512:2:19",
																						"nodeType": "YulLiteral",
																						"src": "11512:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11497:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11497:3:19"
																				},
																				"nativeSrc": "11497:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11497:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11484:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "11484:12:19"
																		},
																		"nativeSrc": "11484:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11484:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11474:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11474:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11563:83:19",
																		"nodeType": "YulBlock",
																		"src": "11563:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11565:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "11565:77:19"
																					},
																					"nativeSrc": "11565:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "11565:79:19"
																				},
																				"nativeSrc": "11565:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "11565:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11535:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11543:18:19",
																				"nodeType": "YulLiteral",
																				"src": "11543:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11532:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "11532:2:19"
																		},
																		"nativeSrc": "11532:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11532:30:19"
																	},
																	"nativeSrc": "11529:117:19",
																	"nodeType": "YulIf",
																	"src": "11529:117:19"
																},
																{
																	"nativeSrc": "11660:73:19",
																	"nodeType": "YulAssignment",
																	"src": "11660:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11705:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "11705:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11716:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "11716:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11701:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "11701:3:19"
																				},
																				"nativeSrc": "11701:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "11701:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11725:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11725:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11670:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "11670:30:19"
																		},
																		"nativeSrc": "11670:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11670:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11660:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "11660:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "11096:654:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11151:9:19",
														"nodeType": "YulTypedName",
														"src": "11151:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11162:7:19",
														"nodeType": "YulTypedName",
														"src": "11162:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11174:6:19",
														"nodeType": "YulTypedName",
														"src": "11174:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11182:6:19",
														"nodeType": "YulTypedName",
														"src": "11182:6:19",
														"type": ""
													}
												],
												"src": "11096:654:19"
											},
											{
												"body": {
													"nativeSrc": "11839:391:19",
													"nodeType": "YulBlock",
													"src": "11839:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "11885:83:19",
																"nodeType": "YulBlock",
																"src": "11885:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11887:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "11887:77:19"
																			},
																			"nativeSrc": "11887:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11887:79:19"
																		},
																		"nativeSrc": "11887:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11887:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11860:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "11860:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11869:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11856:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11856:3:19"
																		},
																		"nativeSrc": "11856:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11856:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11881:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11881:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11852:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:19"
																},
																"nativeSrc": "11852:32:19",
																"nodeType": "YulFunctionCall",
																"src": "11852:32:19"
															},
															"nativeSrc": "11849:119:19",
															"nodeType": "YulIf",
															"src": "11849:119:19"
														},
														{
															"nativeSrc": "11978:117:19",
															"nodeType": "YulBlock",
															"src": "11978:117:19",
															"statements": [
																{
																	"nativeSrc": "11993:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11993:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12007:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11997:6:19",
																			"nodeType": "YulTypedName",
																			"src": "11997:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12022:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12022:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12057:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12057:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12068:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12068:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12053:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12053:3:19"
																				},
																				"nativeSrc": "12053:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12053:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12077:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12077:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12032:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12032:20:19"
																		},
																		"nativeSrc": "12032:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12032:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12022:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12022:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12105:118:19",
															"nodeType": "YulBlock",
															"src": "12105:118:19",
															"statements": [
																{
																	"nativeSrc": "12120:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12120:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12134:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12134:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12124:6:19",
																			"nodeType": "YulTypedName",
																			"src": "12124:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12150:63:19",
																	"nodeType": "YulAssignment",
																	"src": "12150:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12185:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "12185:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12196:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "12196:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12181:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:19"
																				},
																				"nativeSrc": "12181:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12181:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12205:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "12205:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12160:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "12160:20:19"
																		},
																		"nativeSrc": "12160:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12160:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12150:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "12150:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11756:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11801:9:19",
														"nodeType": "YulTypedName",
														"src": "11801:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11812:7:19",
														"nodeType": "YulTypedName",
														"src": "11812:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11824:6:19",
														"nodeType": "YulTypedName",
														"src": "11824:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11832:6:19",
														"nodeType": "YulTypedName",
														"src": "11832:6:19",
														"type": ""
													}
												],
												"src": "11756:474:19"
											},
											{
												"body": {
													"nativeSrc": "12264:152:19",
													"nodeType": "YulBlock",
													"src": "12264:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12281:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12281:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12284:77:19",
																		"nodeType": "YulLiteral",
																		"src": "12284:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12274:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:19"
																},
																"nativeSrc": "12274:88:19",
																"nodeType": "YulFunctionCall",
																"src": "12274:88:19"
															},
															"nativeSrc": "12274:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "12274:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12378:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12378:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12381:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12381:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12371:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12371:6:19"
																},
																"nativeSrc": "12371:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12371:15:19"
															},
															"nativeSrc": "12371:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12371:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12402:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12402:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:4:19",
																		"nodeType": "YulLiteral",
																		"src": "12405:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12395:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:19"
																},
																"nativeSrc": "12395:15:19",
																"nodeType": "YulFunctionCall",
																"src": "12395:15:19"
															},
															"nativeSrc": "12395:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "12395:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12236:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "12236:180:19"
											},
											{
												"body": {
													"nativeSrc": "12473:269:19",
													"nodeType": "YulBlock",
													"src": "12473:269:19",
													"statements": [
														{
															"nativeSrc": "12483:22:19",
															"nodeType": "YulAssignment",
															"src": "12483:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12497:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12497:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12503:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12503:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12493:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:19"
																},
																"nativeSrc": "12493:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12493:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12483:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:19"
																}
															]
														},
														{
															"nativeSrc": "12514:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12514:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12544:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12544:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12550:1:19",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12540:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12540:3:19"
																},
																"nativeSrc": "12540:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12540:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12518:18:19",
																	"nodeType": "YulTypedName",
																	"src": "12518:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12591:51:19",
																"nodeType": "YulBlock",
																"src": "12591:51:19",
																"statements": [
																	{
																		"nativeSrc": "12605:27:19",
																		"nodeType": "YulAssignment",
																		"src": "12605:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12619:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "12619:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12627:4:19",
																					"nodeType": "YulLiteral",
																					"src": "12627:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12615:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "12615:3:19"
																			},
																			"nativeSrc": "12615:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12615:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12605:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12571:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "12571:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12564:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:19"
																},
																"nativeSrc": "12564:26:19",
																"nodeType": "YulFunctionCall",
																"src": "12564:26:19"
															},
															"nativeSrc": "12561:81:19",
															"nodeType": "YulIf",
															"src": "12561:81:19"
														},
														{
															"body": {
																"nativeSrc": "12694:42:19",
																"nodeType": "YulBlock",
																"src": "12694:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12708:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "12708:16:19"
																			},
																			"nativeSrc": "12708:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "12708:18:19"
																		},
																		"nativeSrc": "12708:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "12708:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12658:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "12658:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12681:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12681:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12689:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12678:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "12678:2:19"
																		},
																		"nativeSrc": "12678:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12655:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:19"
																},
																"nativeSrc": "12655:38:19",
																"nodeType": "YulFunctionCall",
																"src": "12655:38:19"
															},
															"nativeSrc": "12652:84:19",
															"nodeType": "YulIf",
															"src": "12652:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12422:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12457:4:19",
														"nodeType": "YulTypedName",
														"src": "12457:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12466:6:19",
														"nodeType": "YulTypedName",
														"src": "12466:6:19",
														"type": ""
													}
												],
												"src": "12422:320:19"
											},
											{
												"body": {
													"nativeSrc": "12902:288:19",
													"nodeType": "YulBlock",
													"src": "12902:288:19",
													"statements": [
														{
															"nativeSrc": "12912:26:19",
															"nodeType": "YulAssignment",
															"src": "12912:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12924:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12924:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12935:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12935:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12920:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12920:3:19"
																},
																"nativeSrc": "12920:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12920:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12912:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12912:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12992:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12992:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13005:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13005:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13016:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13016:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13001:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13001:3:19"
																		},
																		"nativeSrc": "13001:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13001:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12948:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "12948:43:19"
																},
																"nativeSrc": "12948:71:19",
																"nodeType": "YulFunctionCall",
																"src": "12948:71:19"
															},
															"nativeSrc": "12948:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "12948:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13073:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13073:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13086:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13086:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13097:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13097:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13082:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:19"
																		},
																		"nativeSrc": "13082:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13082:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13029:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13029:43:19"
																},
																"nativeSrc": "13029:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13029:72:19"
															},
															"nativeSrc": "13029:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13029:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13155:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13155:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13168:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13179:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13164:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:19"
																		},
																		"nativeSrc": "13164:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13111:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13111:43:19"
																},
																"nativeSrc": "13111:72:19",
																"nodeType": "YulFunctionCall",
																"src": "13111:72:19"
															},
															"nativeSrc": "13111:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "13111:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12748:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12858:9:19",
														"nodeType": "YulTypedName",
														"src": "12858:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12870:6:19",
														"nodeType": "YulTypedName",
														"src": "12870:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12878:6:19",
														"nodeType": "YulTypedName",
														"src": "12878:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12886:6:19",
														"nodeType": "YulTypedName",
														"src": "12886:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12897:4:19",
														"nodeType": "YulTypedName",
														"src": "12897:4:19",
														"type": ""
													}
												],
												"src": "12748:442:19"
											},
											{
												"body": {
													"nativeSrc": "13224:152:19",
													"nodeType": "YulBlock",
													"src": "13224:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13241:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13241:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13244:77:19",
																		"nodeType": "YulLiteral",
																		"src": "13244:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13234:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13234:6:19"
																},
																"nativeSrc": "13234:88:19",
																"nodeType": "YulFunctionCall",
																"src": "13234:88:19"
															},
															"nativeSrc": "13234:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "13234:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13338:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13338:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13341:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13341:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13331:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13331:6:19"
																},
																"nativeSrc": "13331:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13331:15:19"
															},
															"nativeSrc": "13331:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13331:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13362:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13362:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13365:4:19",
																		"nodeType": "YulLiteral",
																		"src": "13365:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13355:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13355:6:19"
																},
																"nativeSrc": "13355:15:19",
																"nodeType": "YulFunctionCall",
																"src": "13355:15:19"
															},
															"nativeSrc": "13355:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "13355:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13196:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "13196:180:19"
											},
											{
												"body": {
													"nativeSrc": "13425:190:19",
													"nodeType": "YulBlock",
													"src": "13425:190:19",
													"statements": [
														{
															"nativeSrc": "13435:33:19",
															"nodeType": "YulAssignment",
															"src": "13435:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13462:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13462:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13444:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "13444:17:19"
																},
																"nativeSrc": "13444:24:19",
																"nodeType": "YulFunctionCall",
																"src": "13444:24:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13435:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "13435:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13558:22:19",
																"nodeType": "YulBlock",
																"src": "13558:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13560:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "13560:16:19"
																			},
																			"nativeSrc": "13560:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13560:18:19"
																		},
																		"nativeSrc": "13560:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13560:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13483:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13483:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13490:66:19",
																		"nodeType": "YulLiteral",
																		"src": "13490:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13480:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13480:2:19"
																},
																"nativeSrc": "13480:77:19",
																"nodeType": "YulFunctionCall",
																"src": "13480:77:19"
															},
															"nativeSrc": "13477:103:19",
															"nodeType": "YulIf",
															"src": "13477:103:19"
														},
														{
															"nativeSrc": "13589:20:19",
															"nodeType": "YulAssignment",
															"src": "13589:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13600:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13600:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13607:1:19",
																		"nodeType": "YulLiteral",
																		"src": "13607:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13596:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13596:3:19"
																},
																"nativeSrc": "13596:13:19",
																"nodeType": "YulFunctionCall",
																"src": "13596:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13589:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13589:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "13382:233:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13411:5:19",
														"nodeType": "YulTypedName",
														"src": "13411:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13421:3:19",
														"nodeType": "YulTypedName",
														"src": "13421:3:19",
														"type": ""
													}
												],
												"src": "13382:233:19"
											},
											{
												"body": {
													"nativeSrc": "13727:119:19",
													"nodeType": "YulBlock",
													"src": "13727:119:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13749:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13749:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13757:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13757:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13745:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:19"
																		},
																		"nativeSrc": "13745:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13745:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "13761:34:19",
																		"nodeType": "YulLiteral",
																		"src": "13761:34:19",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13738:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:19"
																},
																"nativeSrc": "13738:58:19",
																"nodeType": "YulFunctionCall",
																"src": "13738:58:19"
															},
															"nativeSrc": "13738:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "13738:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13817:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13817:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13825:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13825:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13813:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13813:3:19"
																		},
																		"nativeSrc": "13813:15:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13813:15:19"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "13830:8:19",
																		"nodeType": "YulLiteral",
																		"src": "13830:8:19",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13806:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13806:6:19"
																},
																"nativeSrc": "13806:33:19",
																"nodeType": "YulFunctionCall",
																"src": "13806:33:19"
															},
															"nativeSrc": "13806:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "13806:33:19"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "13621:225:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13719:6:19",
														"nodeType": "YulTypedName",
														"src": "13719:6:19",
														"type": ""
													}
												],
												"src": "13621:225:19"
											},
											{
												"body": {
													"nativeSrc": "13998:220:19",
													"nodeType": "YulBlock",
													"src": "13998:220:19",
													"statements": [
														{
															"nativeSrc": "14008:74:19",
															"nodeType": "YulAssignment",
															"src": "14008:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14074:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14074:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14079:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14079:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14015:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "14015:58:19"
																},
																"nativeSrc": "14015:67:19",
																"nodeType": "YulFunctionCall",
																"src": "14015:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14008:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14008:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14180:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14180:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "14091:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "14091:88:19"
																},
																"nativeSrc": "14091:93:19",
																"nodeType": "YulFunctionCall",
																"src": "14091:93:19"
															},
															"nativeSrc": "14091:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "14091:93:19"
														},
														{
															"nativeSrc": "14193:19:19",
															"nodeType": "YulAssignment",
															"src": "14193:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14204:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14204:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14209:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14209:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14200:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14200:3:19"
																},
																"nativeSrc": "14200:12:19",
																"nodeType": "YulFunctionCall",
																"src": "14200:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14193:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14193:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13852:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13986:3:19",
														"nodeType": "YulTypedName",
														"src": "13986:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13994:3:19",
														"nodeType": "YulTypedName",
														"src": "13994:3:19",
														"type": ""
													}
												],
												"src": "13852:366:19"
											},
											{
												"body": {
													"nativeSrc": "14395:248:19",
													"nodeType": "YulBlock",
													"src": "14395:248:19",
													"statements": [
														{
															"nativeSrc": "14405:26:19",
															"nodeType": "YulAssignment",
															"src": "14405:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14417:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14417:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14428:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14428:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14413:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14413:3:19"
																},
																"nativeSrc": "14413:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14413:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14405:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14405:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14452:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14452:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14463:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14463:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14448:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14448:3:19"
																		},
																		"nativeSrc": "14448:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14448:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14471:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "14471:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14477:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14477:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14467:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14467:3:19"
																		},
																		"nativeSrc": "14467:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14467:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14441:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14441:6:19"
																},
																"nativeSrc": "14441:47:19",
																"nodeType": "YulFunctionCall",
																"src": "14441:47:19"
															},
															"nativeSrc": "14441:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "14441:47:19"
														},
														{
															"nativeSrc": "14497:139:19",
															"nodeType": "YulAssignment",
															"src": "14497:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14631:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14631:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14505:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "14505:124:19"
																},
																"nativeSrc": "14505:131:19",
																"nodeType": "YulFunctionCall",
																"src": "14505:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14497:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14497:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14224:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14375:9:19",
														"nodeType": "YulTypedName",
														"src": "14375:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14390:4:19",
														"nodeType": "YulTypedName",
														"src": "14390:4:19",
														"type": ""
													}
												],
												"src": "14224:419:19"
											},
											{
												"body": {
													"nativeSrc": "14755:76:19",
													"nodeType": "YulBlock",
													"src": "14755:76:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14777:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14777:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14785:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14785:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14773:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14773:3:19"
																		},
																		"nativeSrc": "14773:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14773:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "14789:34:19",
																		"nodeType": "YulLiteral",
																		"src": "14789:34:19",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14766:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14766:6:19"
																},
																"nativeSrc": "14766:58:19",
																"nodeType": "YulFunctionCall",
																"src": "14766:58:19"
															},
															"nativeSrc": "14766:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "14766:58:19"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "14649:182:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14747:6:19",
														"nodeType": "YulTypedName",
														"src": "14747:6:19",
														"type": ""
													}
												],
												"src": "14649:182:19"
											},
											{
												"body": {
													"nativeSrc": "14983:220:19",
													"nodeType": "YulBlock",
													"src": "14983:220:19",
													"statements": [
														{
															"nativeSrc": "14993:74:19",
															"nodeType": "YulAssignment",
															"src": "14993:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15059:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15059:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15064:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15064:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15000:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "15000:58:19"
																},
																"nativeSrc": "15000:67:19",
																"nodeType": "YulFunctionCall",
																"src": "15000:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14993:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14993:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15165:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15165:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "15076:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "15076:88:19"
																},
																"nativeSrc": "15076:93:19",
																"nodeType": "YulFunctionCall",
																"src": "15076:93:19"
															},
															"nativeSrc": "15076:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "15076:93:19"
														},
														{
															"nativeSrc": "15178:19:19",
															"nodeType": "YulAssignment",
															"src": "15178:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15189:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15189:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15194:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15194:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15185:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:19"
																},
																"nativeSrc": "15185:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15185:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15178:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15178:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14837:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14971:3:19",
														"nodeType": "YulTypedName",
														"src": "14971:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14979:3:19",
														"nodeType": "YulTypedName",
														"src": "14979:3:19",
														"type": ""
													}
												],
												"src": "14837:366:19"
											},
											{
												"body": {
													"nativeSrc": "15380:248:19",
													"nodeType": "YulBlock",
													"src": "15380:248:19",
													"statements": [
														{
															"nativeSrc": "15390:26:19",
															"nodeType": "YulAssignment",
															"src": "15390:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15402:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "15402:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15413:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15413:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15398:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15398:3:19"
																},
																"nativeSrc": "15398:18:19",
																"nodeType": "YulFunctionCall",
																"src": "15398:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15390:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15390:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15437:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15437:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15448:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15448:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15433:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15433:3:19"
																		},
																		"nativeSrc": "15433:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15433:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15456:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "15456:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15462:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15462:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15452:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:19"
																		},
																		"nativeSrc": "15452:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15452:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15426:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15426:6:19"
																},
																"nativeSrc": "15426:47:19",
																"nodeType": "YulFunctionCall",
																"src": "15426:47:19"
															},
															"nativeSrc": "15426:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "15426:47:19"
														},
														{
															"nativeSrc": "15482:139:19",
															"nodeType": "YulAssignment",
															"src": "15482:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15616:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "15616:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15490:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "15490:124:19"
																},
																"nativeSrc": "15490:131:19",
																"nodeType": "YulFunctionCall",
																"src": "15490:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15482:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "15482:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15209:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15360:9:19",
														"nodeType": "YulTypedName",
														"src": "15360:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15375:4:19",
														"nodeType": "YulTypedName",
														"src": "15375:4:19",
														"type": ""
													}
												],
												"src": "15209:419:19"
											},
											{
												"body": {
													"nativeSrc": "15692:40:19",
													"nodeType": "YulBlock",
													"src": "15692:40:19",
													"statements": [
														{
															"nativeSrc": "15703:22:19",
															"nodeType": "YulAssignment",
															"src": "15703:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15719:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15719:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15713:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15713:5:19"
																},
																"nativeSrc": "15713:12:19",
																"nodeType": "YulFunctionCall",
																"src": "15713:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15703:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15703:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "15634:98:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15675:5:19",
														"nodeType": "YulTypedName",
														"src": "15675:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15685:6:19",
														"nodeType": "YulTypedName",
														"src": "15685:6:19",
														"type": ""
													}
												],
												"src": "15634:98:19"
											},
											{
												"body": {
													"nativeSrc": "15833:73:19",
													"nodeType": "YulBlock",
													"src": "15833:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15850:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15850:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15855:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15855:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15843:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15843:6:19"
																},
																"nativeSrc": "15843:19:19",
																"nodeType": "YulFunctionCall",
																"src": "15843:19:19"
															},
															"nativeSrc": "15843:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "15843:19:19"
														},
														{
															"nativeSrc": "15871:29:19",
															"nodeType": "YulAssignment",
															"src": "15871:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15890:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15890:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15895:4:19",
																		"nodeType": "YulLiteral",
																		"src": "15895:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15886:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15886:3:19"
																},
																"nativeSrc": "15886:14:19",
																"nodeType": "YulFunctionCall",
																"src": "15886:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15871:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "15871:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15738:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15805:3:19",
														"nodeType": "YulTypedName",
														"src": "15805:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15810:6:19",
														"nodeType": "YulTypedName",
														"src": "15810:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15821:11:19",
														"nodeType": "YulTypedName",
														"src": "15821:11:19",
														"type": ""
													}
												],
												"src": "15738:168:19"
											},
											{
												"body": {
													"nativeSrc": "16002:283:19",
													"nodeType": "YulBlock",
													"src": "16002:283:19",
													"statements": [
														{
															"nativeSrc": "16012:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "16012:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16058:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "16058:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16026:31:19",
																	"nodeType": "YulIdentifier",
																	"src": "16026:31:19"
																},
																"nativeSrc": "16026:38:19",
																"nodeType": "YulFunctionCall",
																"src": "16026:38:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16016:6:19",
																	"nodeType": "YulTypedName",
																	"src": "16016:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16073:77:19",
															"nodeType": "YulAssignment",
															"src": "16073:77:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16138:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16138:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16143:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16143:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16080:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "16080:57:19"
																},
																"nativeSrc": "16080:70:19",
																"nodeType": "YulFunctionCall",
																"src": "16080:70:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16073:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16073:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16198:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "16198:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16205:4:19",
																				"nodeType": "YulLiteral",
																				"src": "16205:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16194:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16194:3:19"
																		},
																		"nativeSrc": "16194:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16194:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16212:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16212:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16217:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16217:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16159:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "16159:34:19"
																},
																"nativeSrc": "16159:65:19",
																"nodeType": "YulFunctionCall",
																"src": "16159:65:19"
															},
															"nativeSrc": "16159:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "16159:65:19"
														},
														{
															"nativeSrc": "16233:46:19",
															"nodeType": "YulAssignment",
															"src": "16233:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16244:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16244:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16271:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16271:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16249:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "16249:21:19"
																		},
																		"nativeSrc": "16249:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16249:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16240:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16240:3:19"
																},
																"nativeSrc": "16240:39:19",
																"nodeType": "YulFunctionCall",
																"src": "16240:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16233:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16233:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15912:373:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15983:5:19",
														"nodeType": "YulTypedName",
														"src": "15983:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15990:3:19",
														"nodeType": "YulTypedName",
														"src": "15990:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15998:3:19",
														"nodeType": "YulTypedName",
														"src": "15998:3:19",
														"type": ""
													}
												],
												"src": "15912:373:19"
											},
											{
												"body": {
													"nativeSrc": "16491:440:19",
													"nodeType": "YulBlock",
													"src": "16491:440:19",
													"statements": [
														{
															"nativeSrc": "16501:27:19",
															"nodeType": "YulAssignment",
															"src": "16501:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16513:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16513:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16524:3:19",
																		"nodeType": "YulLiteral",
																		"src": "16524:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16509:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16509:3:19"
																},
																"nativeSrc": "16509:19:19",
																"nodeType": "YulFunctionCall",
																"src": "16509:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16501:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16501:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16582:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16582:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16595:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16595:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16606:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16606:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16591:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16591:3:19"
																		},
																		"nativeSrc": "16591:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16591:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16538:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16538:43:19"
																},
																"nativeSrc": "16538:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16538:71:19"
															},
															"nativeSrc": "16538:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16538:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16663:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16663:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16676:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16676:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16687:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16687:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16672:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:19"
																		},
																		"nativeSrc": "16672:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16672:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16619:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16619:43:19"
																},
																"nativeSrc": "16619:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16619:72:19"
															},
															"nativeSrc": "16619:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16619:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16745:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16745:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16758:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16758:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16769:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16769:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16754:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16754:3:19"
																		},
																		"nativeSrc": "16754:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16754:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16701:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16701:43:19"
																},
																"nativeSrc": "16701:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16701:72:19"
															},
															"nativeSrc": "16701:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16701:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16794:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16794:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16805:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16805:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16790:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16790:3:19"
																		},
																		"nativeSrc": "16790:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16790:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16814:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16814:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16820:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16820:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16810:3:19"
																		},
																		"nativeSrc": "16810:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16810:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16783:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16783:6:19"
																},
																"nativeSrc": "16783:48:19",
																"nodeType": "YulFunctionCall",
																"src": "16783:48:19"
															},
															"nativeSrc": "16783:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "16783:48:19"
														},
														{
															"nativeSrc": "16840:84:19",
															"nodeType": "YulAssignment",
															"src": "16840:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16910:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16910:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16919:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16919:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16848:61:19",
																	"nodeType": "YulIdentifier",
																	"src": "16848:61:19"
																},
																"nativeSrc": "16848:76:19",
																"nodeType": "YulFunctionCall",
																"src": "16848:76:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16840:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16840:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "16291:640:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16439:9:19",
														"nodeType": "YulTypedName",
														"src": "16439:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16451:6:19",
														"nodeType": "YulTypedName",
														"src": "16451:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16459:6:19",
														"nodeType": "YulTypedName",
														"src": "16459:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16467:6:19",
														"nodeType": "YulTypedName",
														"src": "16467:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16475:6:19",
														"nodeType": "YulTypedName",
														"src": "16475:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16486:4:19",
														"nodeType": "YulTypedName",
														"src": "16486:4:19",
														"type": ""
													}
												],
												"src": "16291:640:19"
											},
											{
												"body": {
													"nativeSrc": "16999:79:19",
													"nodeType": "YulBlock",
													"src": "16999:79:19",
													"statements": [
														{
															"nativeSrc": "17009:22:19",
															"nodeType": "YulAssignment",
															"src": "17009:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17024:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17024:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17018:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17018:5:19"
																},
																"nativeSrc": "17018:13:19",
																"nodeType": "YulFunctionCall",
																"src": "17018:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17009:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17009:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17066:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "17066:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "17040:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "17040:25:19"
																},
																"nativeSrc": "17040:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17040:32:19"
															},
															"nativeSrc": "17040:32:19",
															"nodeType": "YulExpressionStatement",
															"src": "17040:32:19"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "16937:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16977:6:19",
														"nodeType": "YulTypedName",
														"src": "16977:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16985:3:19",
														"nodeType": "YulTypedName",
														"src": "16985:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16993:5:19",
														"nodeType": "YulTypedName",
														"src": "16993:5:19",
														"type": ""
													}
												],
												"src": "16937:141:19"
											},
											{
												"body": {
													"nativeSrc": "17160:273:19",
													"nodeType": "YulBlock",
													"src": "17160:273:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "17206:83:19",
																"nodeType": "YulBlock",
																"src": "17206:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17208:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "17208:77:19"
																			},
																			"nativeSrc": "17208:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "17208:79:19"
																		},
																		"nativeSrc": "17208:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "17208:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17181:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17181:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17190:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17190:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17177:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17177:3:19"
																		},
																		"nativeSrc": "17177:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17177:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17202:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17202:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17173:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17173:3:19"
																},
																"nativeSrc": "17173:32:19",
																"nodeType": "YulFunctionCall",
																"src": "17173:32:19"
															},
															"nativeSrc": "17170:119:19",
															"nodeType": "YulIf",
															"src": "17170:119:19"
														},
														{
															"nativeSrc": "17299:127:19",
															"nodeType": "YulBlock",
															"src": "17299:127:19",
															"statements": [
																{
																	"nativeSrc": "17314:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17314:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17328:1:19",
																		"nodeType": "YulLiteral",
																		"src": "17328:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17318:6:19",
																			"nodeType": "YulTypedName",
																			"src": "17318:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17343:73:19",
																	"nodeType": "YulAssignment",
																	"src": "17343:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17388:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "17388:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17399:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "17399:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17384:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "17384:3:19"
																				},
																				"nativeSrc": "17384:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "17384:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17408:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "17408:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "17353:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "17353:30:19"
																		},
																		"nativeSrc": "17353:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17353:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17343:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "17343:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "17084:349:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17130:9:19",
														"nodeType": "YulTypedName",
														"src": "17130:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17141:7:19",
														"nodeType": "YulTypedName",
														"src": "17141:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17153:6:19",
														"nodeType": "YulTypedName",
														"src": "17153:6:19",
														"type": ""
													}
												],
												"src": "17084:349:19"
											},
											{
												"body": {
													"nativeSrc": "17553:34:19",
													"nodeType": "YulBlock",
													"src": "17553:34:19",
													"statements": [
														{
															"nativeSrc": "17563:18:19",
															"nodeType": "YulAssignment",
															"src": "17563:18:19",
															"value": {
																"name": "pos",
																"nativeSrc": "17578:3:19",
																"nodeType": "YulIdentifier",
																"src": "17578:3:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17563:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "17563:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17439:148:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17525:3:19",
														"nodeType": "YulTypedName",
														"src": "17525:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17530:6:19",
														"nodeType": "YulTypedName",
														"src": "17530:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17541:11:19",
														"nodeType": "YulTypedName",
														"src": "17541:11:19",
														"type": ""
													}
												],
												"src": "17439:148:19"
											},
											{
												"body": {
													"nativeSrc": "17703:280:19",
													"nodeType": "YulBlock",
													"src": "17703:280:19",
													"statements": [
														{
															"nativeSrc": "17713:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "17713:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17760:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "17760:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17727:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "17727:32:19"
																},
																"nativeSrc": "17727:39:19",
																"nodeType": "YulFunctionCall",
																"src": "17727:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17717:6:19",
																	"nodeType": "YulTypedName",
																	"src": "17717:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17775:96:19",
															"nodeType": "YulAssignment",
															"src": "17775:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17859:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17859:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17864:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17864:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17782:76:19",
																	"nodeType": "YulIdentifier",
																	"src": "17782:76:19"
																},
																"nativeSrc": "17782:89:19",
																"nodeType": "YulFunctionCall",
																"src": "17782:89:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17775:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17775:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17919:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "17919:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17926:4:19",
																				"nodeType": "YulLiteral",
																				"src": "17926:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17915:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17915:3:19"
																		},
																		"nativeSrc": "17915:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17915:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17933:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17933:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17938:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17938:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17880:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "17880:34:19"
																},
																"nativeSrc": "17880:65:19",
																"nodeType": "YulFunctionCall",
																"src": "17880:65:19"
															},
															"nativeSrc": "17880:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "17880:65:19"
														},
														{
															"nativeSrc": "17954:23:19",
															"nodeType": "YulAssignment",
															"src": "17954:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17965:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17965:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17970:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17970:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17961:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17961:3:19"
																},
																"nativeSrc": "17961:16:19",
																"nodeType": "YulFunctionCall",
																"src": "17961:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17954:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17954:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17593:390:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17684:5:19",
														"nodeType": "YulTypedName",
														"src": "17684:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17691:3:19",
														"nodeType": "YulTypedName",
														"src": "17691:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17699:3:19",
														"nodeType": "YulTypedName",
														"src": "17699:3:19",
														"type": ""
													}
												],
												"src": "17593:390:19"
											},
											{
												"body": {
													"nativeSrc": "18173:251:19",
													"nodeType": "YulBlock",
													"src": "18173:251:19",
													"statements": [
														{
															"nativeSrc": "18184:102:19",
															"nodeType": "YulAssignment",
															"src": "18184:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18273:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18273:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18282:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18282:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18191:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "18191:81:19"
																},
																"nativeSrc": "18191:95:19",
																"nodeType": "YulFunctionCall",
																"src": "18191:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18184:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18184:3:19"
																}
															]
														},
														{
															"nativeSrc": "18296:102:19",
															"nodeType": "YulAssignment",
															"src": "18296:102:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18385:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "18385:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18394:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18394:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18303:81:19",
																	"nodeType": "YulIdentifier",
																	"src": "18303:81:19"
																},
																"nativeSrc": "18303:95:19",
																"nodeType": "YulFunctionCall",
																"src": "18303:95:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18296:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18296:3:19"
																}
															]
														},
														{
															"nativeSrc": "18408:10:19",
															"nodeType": "YulAssignment",
															"src": "18408:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "18415:3:19",
																"nodeType": "YulIdentifier",
																"src": "18415:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18408:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18408:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17989:435:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18144:3:19",
														"nodeType": "YulTypedName",
														"src": "18144:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18150:6:19",
														"nodeType": "YulTypedName",
														"src": "18150:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18158:6:19",
														"nodeType": "YulTypedName",
														"src": "18158:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18169:3:19",
														"nodeType": "YulTypedName",
														"src": "18169:3:19",
														"type": ""
													}
												],
												"src": "17989:435:19"
											},
											{
												"body": {
													"nativeSrc": "18484:87:19",
													"nodeType": "YulBlock",
													"src": "18484:87:19",
													"statements": [
														{
															"nativeSrc": "18494:11:19",
															"nodeType": "YulAssignment",
															"src": "18494:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "18502:3:19",
																"nodeType": "YulIdentifier",
																"src": "18502:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18494:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18494:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18522:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18522:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18525:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18525:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18515:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18515:6:19"
																},
																"nativeSrc": "18515:14:19",
																"nodeType": "YulFunctionCall",
																"src": "18515:14:19"
															},
															"nativeSrc": "18515:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "18515:14:19"
														},
														{
															"nativeSrc": "18538:26:19",
															"nodeType": "YulAssignment",
															"src": "18538:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18556:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18556:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18559:4:19",
																		"nodeType": "YulLiteral",
																		"src": "18559:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18546:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "18546:9:19"
																},
																"nativeSrc": "18546:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18546:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18538:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "18538:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "18430:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18471:3:19",
														"nodeType": "YulTypedName",
														"src": "18471:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18479:4:19",
														"nodeType": "YulTypedName",
														"src": "18479:4:19",
														"type": ""
													}
												],
												"src": "18430:141:19"
											},
											{
												"body": {
													"nativeSrc": "18621:49:19",
													"nodeType": "YulBlock",
													"src": "18621:49:19",
													"statements": [
														{
															"nativeSrc": "18631:33:19",
															"nodeType": "YulAssignment",
															"src": "18631:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18649:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "18649:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18656:2:19",
																				"nodeType": "YulLiteral",
																				"src": "18656:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18645:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18645:3:19"
																		},
																		"nativeSrc": "18645:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18645:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18661:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18661:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18641:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18641:3:19"
																},
																"nativeSrc": "18641:23:19",
																"nodeType": "YulFunctionCall",
																"src": "18641:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18631:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18631:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18577:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18604:5:19",
														"nodeType": "YulTypedName",
														"src": "18604:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18614:6:19",
														"nodeType": "YulTypedName",
														"src": "18614:6:19",
														"type": ""
													}
												],
												"src": "18577:93:19"
											},
											{
												"body": {
													"nativeSrc": "18729:54:19",
													"nodeType": "YulBlock",
													"src": "18729:54:19",
													"statements": [
														{
															"nativeSrc": "18739:37:19",
															"nodeType": "YulAssignment",
															"src": "18739:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18764:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "18764:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18770:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "18770:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18760:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18760:3:19"
																},
																"nativeSrc": "18760:16:19",
																"nodeType": "YulFunctionCall",
																"src": "18760:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18739:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "18739:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18676:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18704:4:19",
														"nodeType": "YulTypedName",
														"src": "18704:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18710:5:19",
														"nodeType": "YulTypedName",
														"src": "18710:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18720:8:19",
														"nodeType": "YulTypedName",
														"src": "18720:8:19",
														"type": ""
													}
												],
												"src": "18676:107:19"
											},
											{
												"body": {
													"nativeSrc": "18865:317:19",
													"nodeType": "YulBlock",
													"src": "18865:317:19",
													"statements": [
														{
															"nativeSrc": "18875:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "18875:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "18896:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "18896:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18908:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18908:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18892:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18892:3:19"
																},
																"nativeSrc": "18892:18:19",
																"nodeType": "YulFunctionCall",
																"src": "18892:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "18879:9:19",
																	"nodeType": "YulTypedName",
																	"src": "18879:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18919:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "18919:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "18950:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "18950:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18961:66:19",
																		"nodeType": "YulLiteral",
																		"src": "18961:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "18931:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "18931:18:19"
																},
																"nativeSrc": "18931:97:19",
																"nodeType": "YulFunctionCall",
																"src": "18931:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18923:4:19",
																	"nodeType": "YulTypedName",
																	"src": "18923:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19037:51:19",
															"nodeType": "YulAssignment",
															"src": "19037:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19068:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19068:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "19079:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "19079:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19049:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "19049:18:19"
																},
																"nativeSrc": "19049:39:19",
																"nodeType": "YulFunctionCall",
																"src": "19049:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19037:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "19037:8:19"
																}
															]
														},
														{
															"nativeSrc": "19097:30:19",
															"nodeType": "YulAssignment",
															"src": "19097:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19110:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19110:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "19121:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19121:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19117:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19117:3:19"
																		},
																		"nativeSrc": "19117:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19117:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19106:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19106:3:19"
																},
																"nativeSrc": "19106:21:19",
																"nodeType": "YulFunctionCall",
																"src": "19106:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19097:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "19097:5:19"
																}
															]
														},
														{
															"nativeSrc": "19136:40:19",
															"nodeType": "YulAssignment",
															"src": "19136:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19149:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "19149:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "19160:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "19160:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "19170:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19170:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19156:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19156:3:19"
																		},
																		"nativeSrc": "19156:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19156:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19146:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "19146:2:19"
																},
																"nativeSrc": "19146:30:19",
																"nodeType": "YulFunctionCall",
																"src": "19146:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19136:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19136:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "18789:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18826:5:19",
														"nodeType": "YulTypedName",
														"src": "18826:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "18833:10:19",
														"nodeType": "YulTypedName",
														"src": "18833:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "18845:8:19",
														"nodeType": "YulTypedName",
														"src": "18845:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18858:6:19",
														"nodeType": "YulTypedName",
														"src": "18858:6:19",
														"type": ""
													}
												],
												"src": "18789:393:19"
											},
											{
												"body": {
													"nativeSrc": "19220:28:19",
													"nodeType": "YulBlock",
													"src": "19220:28:19",
													"statements": [
														{
															"nativeSrc": "19230:12:19",
															"nodeType": "YulAssignment",
															"src": "19230:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "19237:5:19",
																"nodeType": "YulIdentifier",
																"src": "19237:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19230:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19230:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "19188:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19206:5:19",
														"nodeType": "YulTypedName",
														"src": "19206:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19216:3:19",
														"nodeType": "YulTypedName",
														"src": "19216:3:19",
														"type": ""
													}
												],
												"src": "19188:60:19"
											},
											{
												"body": {
													"nativeSrc": "19314:82:19",
													"nodeType": "YulBlock",
													"src": "19314:82:19",
													"statements": [
														{
															"nativeSrc": "19324:66:19",
															"nodeType": "YulAssignment",
															"src": "19324:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19382:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "19382:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "19364:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "19364:17:19"
																				},
																				"nativeSrc": "19364:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "19364:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19355:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "19355:8:19"
																		},
																		"nativeSrc": "19355:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19355:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19337:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "19337:17:19"
																},
																"nativeSrc": "19337:53:19",
																"nodeType": "YulFunctionCall",
																"src": "19337:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19324:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "19324:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "19254:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19294:5:19",
														"nodeType": "YulTypedName",
														"src": "19294:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19304:9:19",
														"nodeType": "YulTypedName",
														"src": "19304:9:19",
														"type": ""
													}
												],
												"src": "19254:142:19"
											},
											{
												"body": {
													"nativeSrc": "19449:28:19",
													"nodeType": "YulBlock",
													"src": "19449:28:19",
													"statements": [
														{
															"nativeSrc": "19459:12:19",
															"nodeType": "YulAssignment",
															"src": "19459:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "19466:5:19",
																"nodeType": "YulIdentifier",
																"src": "19466:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19459:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19459:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "19402:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19435:5:19",
														"nodeType": "YulTypedName",
														"src": "19435:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19445:3:19",
														"nodeType": "YulTypedName",
														"src": "19445:3:19",
														"type": ""
													}
												],
												"src": "19402:75:19"
											},
											{
												"body": {
													"nativeSrc": "19559:193:19",
													"nodeType": "YulBlock",
													"src": "19559:193:19",
													"statements": [
														{
															"nativeSrc": "19569:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "19569:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "19624:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "19624:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "19593:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "19593:30:19"
																},
																"nativeSrc": "19593:39:19",
																"nodeType": "YulFunctionCall",
																"src": "19593:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "19573:16:19",
																	"nodeType": "YulTypedName",
																	"src": "19573:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19648:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19648:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19688:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "19688:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19682:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "19682:5:19"
																				},
																				"nativeSrc": "19682:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "19682:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "19695:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "19695:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "19727:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "19727:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "19703:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "19703:23:19"
																				},
																				"nativeSrc": "19703:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "19703:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19654:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "19654:27:19"
																		},
																		"nativeSrc": "19654:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19654:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19641:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19641:6:19"
																},
																"nativeSrc": "19641:105:19",
																"nodeType": "YulFunctionCall",
																"src": "19641:105:19"
															},
															"nativeSrc": "19641:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "19641:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "19483:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19536:4:19",
														"nodeType": "YulTypedName",
														"src": "19536:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19542:6:19",
														"nodeType": "YulTypedName",
														"src": "19542:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "19550:7:19",
														"nodeType": "YulTypedName",
														"src": "19550:7:19",
														"type": ""
													}
												],
												"src": "19483:269:19"
											},
											{
												"body": {
													"nativeSrc": "19807:24:19",
													"nodeType": "YulBlock",
													"src": "19807:24:19",
													"statements": [
														{
															"nativeSrc": "19817:8:19",
															"nodeType": "YulAssignment",
															"src": "19817:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "19824:1:19",
																"nodeType": "YulLiteral",
																"src": "19824:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19817:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19817:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "19758:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19803:3:19",
														"nodeType": "YulTypedName",
														"src": "19803:3:19",
														"type": ""
													}
												],
												"src": "19758:73:19"
											},
											{
												"body": {
													"nativeSrc": "19890:136:19",
													"nodeType": "YulBlock",
													"src": "19890:136:19",
													"statements": [
														{
															"nativeSrc": "19900:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "19900:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "19914:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "19914:30:19"
																},
																"nativeSrc": "19914:32:19",
																"nodeType": "YulFunctionCall",
																"src": "19914:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "19904:6:19",
																	"nodeType": "YulTypedName",
																	"src": "19904:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19999:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19999:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20005:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20005:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20013:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "20013:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "19955:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "19955:43:19"
																},
																"nativeSrc": "19955:65:19",
																"nodeType": "YulFunctionCall",
																"src": "19955:65:19"
															},
															"nativeSrc": "19955:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "19955:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "19837:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19876:4:19",
														"nodeType": "YulTypedName",
														"src": "19876:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19882:6:19",
														"nodeType": "YulTypedName",
														"src": "19882:6:19",
														"type": ""
													}
												],
												"src": "19837:189:19"
											},
											{
												"body": {
													"nativeSrc": "20082:136:19",
													"nodeType": "YulBlock",
													"src": "20082:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "20149:63:19",
																"nodeType": "YulBlock",
																"src": "20149:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20193:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "20193:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20200:1:19",
																					"nodeType": "YulLiteral",
																					"src": "20200:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "20163:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "20163:29:19"
																			},
																			"nativeSrc": "20163:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20163:39:19"
																		},
																		"nativeSrc": "20163:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20163:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20102:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20102:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20109:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20109:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20099:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "20099:2:19"
																},
																"nativeSrc": "20099:14:19",
																"nodeType": "YulFunctionCall",
																"src": "20099:14:19"
															},
															"nativeSrc": "20092:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20114:26:19",
																"nodeType": "YulBlock",
																"src": "20114:26:19",
																"statements": [
																	{
																		"nativeSrc": "20116:22:19",
																		"nodeType": "YulAssignment",
																		"src": "20116:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20129:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "20129:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20136:1:19",
																					"nodeType": "YulLiteral",
																					"src": "20136:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20125:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "20125:3:19"
																			},
																			"nativeSrc": "20125:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20125:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20116:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "20116:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20096:2:19",
																"nodeType": "YulBlock",
																"src": "20096:2:19",
																"statements": []
															},
															"src": "20092:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20032:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20070:5:19",
														"nodeType": "YulTypedName",
														"src": "20070:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20077:3:19",
														"nodeType": "YulTypedName",
														"src": "20077:3:19",
														"type": ""
													}
												],
												"src": "20032:186:19"
											},
											{
												"body": {
													"nativeSrc": "20303:464:19",
													"nodeType": "YulBlock",
													"src": "20303:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "20329:431:19",
																"nodeType": "YulBlock",
																"src": "20329:431:19",
																"statements": [
																	{
																		"nativeSrc": "20343:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20343:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "20391:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "20391:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "20359:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "20359:31:19"
																			},
																			"nativeSrc": "20359:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20359:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "20347:8:19",
																				"nodeType": "YulTypedName",
																				"src": "20347:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "20410:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20410:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "20433:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "20433:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "20461:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "20461:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "20443:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "20443:17:19"
																					},
																					"nativeSrc": "20443:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "20443:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20429:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "20429:3:19"
																			},
																			"nativeSrc": "20429:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20429:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "20414:11:19",
																				"nodeType": "YulTypedName",
																				"src": "20414:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20630:27:19",
																			"nodeType": "YulBlock",
																			"src": "20630:27:19",
																			"statements": [
																				{
																					"nativeSrc": "20632:23:19",
																					"nodeType": "YulAssignment",
																					"src": "20632:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20647:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "20647:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20632:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "20632:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "20614:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "20614:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20626:2:19",
																					"nodeType": "YulLiteral",
																					"src": "20626:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "20611:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "20611:2:19"
																			},
																			"nativeSrc": "20611:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20611:18:19"
																		},
																		"nativeSrc": "20608:49:19",
																		"nodeType": "YulIf",
																		"src": "20608:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "20699:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "20699:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "20716:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "20716:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "20744:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "20744:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "20726:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "20726:17:19"
																							},
																							"nativeSrc": "20726:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "20726:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20712:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "20712:3:19"
																					},
																					"nativeSrc": "20712:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "20712:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20670:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "20670:28:19"
																			},
																			"nativeSrc": "20670:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20670:80:19"
																		},
																		"nativeSrc": "20670:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20670:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20320:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "20320:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20325:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20325:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20317:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "20317:2:19"
																},
																"nativeSrc": "20317:11:19",
																"nodeType": "YulFunctionCall",
																"src": "20317:11:19"
															},
															"nativeSrc": "20314:446:19",
															"nodeType": "YulIf",
															"src": "20314:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "20224:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20279:5:19",
														"nodeType": "YulTypedName",
														"src": "20279:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20286:3:19",
														"nodeType": "YulTypedName",
														"src": "20286:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20291:10:19",
														"nodeType": "YulTypedName",
														"src": "20291:10:19",
														"type": ""
													}
												],
												"src": "20224:543:19"
											},
											{
												"body": {
													"nativeSrc": "20836:54:19",
													"nodeType": "YulBlock",
													"src": "20836:54:19",
													"statements": [
														{
															"nativeSrc": "20846:37:19",
															"nodeType": "YulAssignment",
															"src": "20846:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20871:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "20871:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20877:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "20877:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "20867:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20867:3:19"
																},
																"nativeSrc": "20867:16:19",
																"nodeType": "YulFunctionCall",
																"src": "20867:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20846:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "20846:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "20773:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20811:4:19",
														"nodeType": "YulTypedName",
														"src": "20811:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20817:5:19",
														"nodeType": "YulTypedName",
														"src": "20817:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20827:8:19",
														"nodeType": "YulTypedName",
														"src": "20827:8:19",
														"type": ""
													}
												],
												"src": "20773:117:19"
											},
											{
												"body": {
													"nativeSrc": "20947:118:19",
													"nodeType": "YulBlock",
													"src": "20947:118:19",
													"statements": [
														{
															"nativeSrc": "20957:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20957:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21006:1:19",
																						"nodeType": "YulLiteral",
																						"src": "21006:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21009:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "21009:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21002:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "21002:3:19"
																				},
																				"nativeSrc": "21002:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21002:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21021:1:19",
																						"nodeType": "YulLiteral",
																						"src": "21021:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21017:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "21017:3:19"
																				},
																				"nativeSrc": "21017:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "21017:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "20973:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "20973:28:19"
																		},
																		"nativeSrc": "20973:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20973:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "20969:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20969:3:19"
																},
																"nativeSrc": "20969:56:19",
																"nodeType": "YulFunctionCall",
																"src": "20969:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20961:4:19",
																	"nodeType": "YulTypedName",
																	"src": "20961:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21034:25:19",
															"nodeType": "YulAssignment",
															"src": "21034:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21048:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21048:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21054:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21054:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21044:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21044:3:19"
																},
																"nativeSrc": "21044:15:19",
																"nodeType": "YulFunctionCall",
																"src": "21044:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21034:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21034:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "20896:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20924:4:19",
														"nodeType": "YulTypedName",
														"src": "20924:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "20930:5:19",
														"nodeType": "YulTypedName",
														"src": "20930:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20940:6:19",
														"nodeType": "YulTypedName",
														"src": "20940:6:19",
														"type": ""
													}
												],
												"src": "20896:169:19"
											},
											{
												"body": {
													"nativeSrc": "21151:214:19",
													"nodeType": "YulBlock",
													"src": "21151:214:19",
													"statements": [
														{
															"nativeSrc": "21284:37:19",
															"nodeType": "YulAssignment",
															"src": "21284:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21311:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21311:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21317:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21317:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21292:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "21292:18:19"
																},
																"nativeSrc": "21292:29:19",
																"nodeType": "YulFunctionCall",
																"src": "21292:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21284:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21284:4:19"
																}
															]
														},
														{
															"nativeSrc": "21330:29:19",
															"nodeType": "YulAssignment",
															"src": "21330:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21341:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21341:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21351:1:19",
																				"nodeType": "YulLiteral",
																				"src": "21351:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "21354:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "21354:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21347:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21347:3:19"
																		},
																		"nativeSrc": "21347:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21347:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21338:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21338:2:19"
																},
																"nativeSrc": "21338:21:19",
																"nodeType": "YulFunctionCall",
																"src": "21338:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21330:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21330:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21070:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21132:4:19",
														"nodeType": "YulTypedName",
														"src": "21132:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21138:3:19",
														"nodeType": "YulTypedName",
														"src": "21138:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "21146:4:19",
														"nodeType": "YulTypedName",
														"src": "21146:4:19",
														"type": ""
													}
												],
												"src": "21070:295:19"
											},
											{
												"body": {
													"nativeSrc": "21462:1303:19",
													"nodeType": "YulBlock",
													"src": "21462:1303:19",
													"statements": [
														{
															"nativeSrc": "21473:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21473:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21520:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21520:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21487:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "21487:32:19"
																},
																"nativeSrc": "21487:37:19",
																"nodeType": "YulFunctionCall",
																"src": "21487:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "21477:6:19",
																	"nodeType": "YulTypedName",
																	"src": "21477:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21609:22:19",
																"nodeType": "YulBlock",
																"src": "21609:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "21611:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "21611:16:19"
																			},
																			"nativeSrc": "21611:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "21611:18:19"
																		},
																		"nativeSrc": "21611:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "21611:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21581:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21581:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21589:18:19",
																		"nodeType": "YulLiteral",
																		"src": "21589:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21578:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21578:2:19"
																},
																"nativeSrc": "21578:30:19",
																"nodeType": "YulFunctionCall",
																"src": "21578:30:19"
															},
															"nativeSrc": "21575:56:19",
															"nodeType": "YulIf",
															"src": "21575:56:19"
														},
														{
															"nativeSrc": "21641:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21641:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "21687:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "21687:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "21681:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "21681:5:19"
																		},
																		"nativeSrc": "21681:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21681:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21655:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "21655:25:19"
																},
																"nativeSrc": "21655:38:19",
																"nodeType": "YulFunctionCall",
																"src": "21655:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21645:6:19",
																	"nodeType": "YulTypedName",
																	"src": "21645:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21786:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "21786:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "21792:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21792:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "21800:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21800:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "21740:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "21740:45:19"
																},
																"nativeSrc": "21740:67:19",
																"nodeType": "YulFunctionCall",
																"src": "21740:67:19"
															},
															"nativeSrc": "21740:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "21740:67:19"
														},
														{
															"nativeSrc": "21817:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "21817:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "21834:1:19",
																"nodeType": "YulLiteral",
																"src": "21834:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21821:9:19",
																	"nodeType": "YulTypedName",
																	"src": "21821:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21845:17:19",
															"nodeType": "YulAssignment",
															"src": "21845:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "21858:4:19",
																"nodeType": "YulLiteral",
																"src": "21858:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21845:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "21845:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "21909:611:19",
																		"nodeType": "YulBlock",
																		"src": "21909:611:19",
																		"statements": [
																			{
																				"nativeSrc": "21923:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21923:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "21942:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "21942:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "21954:4:19",
																									"nodeType": "YulLiteral",
																									"src": "21954:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "21950:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "21950:3:19"
																							},
																							"nativeSrc": "21950:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "21950:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "21938:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "21938:3:19"
																					},
																					"nativeSrc": "21938:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "21938:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "21927:7:19",
																						"nodeType": "YulTypedName",
																						"src": "21927:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21974:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21974:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22020:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "22020:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21988:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "21988:31:19"
																					},
																					"nativeSrc": "21988:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "21988:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "21978:6:19",
																						"nodeType": "YulTypedName",
																						"src": "21978:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22038:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22038:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22047:1:19",
																					"nodeType": "YulLiteral",
																					"src": "22047:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22042:1:19",
																						"nodeType": "YulTypedName",
																						"src": "22042:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22106:163:19",
																					"nodeType": "YulBlock",
																					"src": "22106:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22131:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "22131:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "22149:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "22149:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "22154:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "22154:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "22145:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "22145:3:19"
																												},
																												"nativeSrc": "22145:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "22145:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "22139:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "22139:5:19"
																										},
																										"nativeSrc": "22139:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "22139:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22124:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "22124:6:19"
																								},
																								"nativeSrc": "22124:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22124:42:19"
																							},
																							"nativeSrc": "22124:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "22124:42:19"
																						},
																						{
																							"nativeSrc": "22183:24:19",
																							"nodeType": "YulAssignment",
																							"src": "22183:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22197:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "22197:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22205:1:19",
																										"nodeType": "YulLiteral",
																										"src": "22205:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22193:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "22193:3:19"
																								},
																								"nativeSrc": "22193:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22193:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "22183:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "22183:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "22224:31:19",
																							"nodeType": "YulAssignment",
																							"src": "22224:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "22241:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "22241:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22252:2:19",
																										"nodeType": "YulLiteral",
																										"src": "22252:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22237:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "22237:3:19"
																								},
																								"nativeSrc": "22237:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22237:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "22224:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "22224:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22072:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "22072:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22075:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "22075:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22069:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "22069:2:19"
																					},
																					"nativeSrc": "22069:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22069:14:19"
																				},
																				"nativeSrc": "22061:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22084:21:19",
																					"nodeType": "YulBlock",
																					"src": "22084:21:19",
																					"statements": [
																						{
																							"nativeSrc": "22086:17:19",
																							"nodeType": "YulAssignment",
																							"src": "22086:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22095:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "22095:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22098:4:19",
																										"nodeType": "YulLiteral",
																										"src": "22098:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22091:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "22091:3:19"
																								},
																								"nativeSrc": "22091:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22091:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22086:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "22086:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22065:3:19",
																					"nodeType": "YulBlock",
																					"src": "22065:3:19",
																					"statements": []
																				},
																				"src": "22061:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "22305:156:19",
																					"nodeType": "YulBlock",
																					"src": "22305:156:19",
																					"statements": [
																						{
																							"nativeSrc": "22323:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22323:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22350:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "22350:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22355:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "22355:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22346:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "22346:3:19"
																										},
																										"nativeSrc": "22346:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "22346:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22340:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "22340:5:19"
																								},
																								"nativeSrc": "22340:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22340:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22327:9:19",
																									"nodeType": "YulTypedName",
																									"src": "22327:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22390:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "22390:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "22417:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "22417:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "22432:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "22432:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "22440:4:19",
																														"nodeType": "YulLiteral",
																														"src": "22440:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "22428:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "22428:3:19"
																												},
																												"nativeSrc": "22428:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "22428:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "22398:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "22398:18:19"
																										},
																										"nativeSrc": "22398:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "22398:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22383:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "22383:6:19"
																								},
																								"nativeSrc": "22383:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22383:64:19"
																							},
																							"nativeSrc": "22383:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "22383:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22288:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "22288:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22297:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "22297:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22285:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "22285:2:19"
																					},
																					"nativeSrc": "22285:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22285:19:19"
																				},
																				"nativeSrc": "22282:179:19",
																				"nodeType": "YulIf",
																				"src": "22282:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22481:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "22481:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "22495:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "22495:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "22503:1:19",
																											"nodeType": "YulLiteral",
																											"src": "22503:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "22491:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "22491:3:19"
																									},
																									"nativeSrc": "22491:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "22491:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "22507:1:19",
																									"nodeType": "YulLiteral",
																									"src": "22507:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "22487:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "22487:3:19"
																							},
																							"nativeSrc": "22487:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "22487:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22474:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "22474:6:19"
																					},
																					"nativeSrc": "22474:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22474:36:19"
																				},
																				"nativeSrc": "22474:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "22474:36:19"
																			}
																		]
																	},
																	"nativeSrc": "21902:618:19",
																	"nodeType": "YulCase",
																	"src": "21902:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21907:1:19",
																		"nodeType": "YulLiteral",
																		"src": "21907:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22537:222:19",
																		"nodeType": "YulBlock",
																		"src": "22537:222:19",
																		"statements": [
																			{
																				"nativeSrc": "22551:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22551:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22564:1:19",
																					"nodeType": "YulLiteral",
																					"src": "22564:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "22555:5:19",
																						"nodeType": "YulTypedName",
																						"src": "22555:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22588:67:19",
																					"nodeType": "YulBlock",
																					"src": "22588:67:19",
																					"statements": [
																						{
																							"nativeSrc": "22606:35:19",
																							"nodeType": "YulAssignment",
																							"src": "22606:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22625:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "22625:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22630:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "22630:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22621:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "22621:3:19"
																										},
																										"nativeSrc": "22621:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "22621:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22615:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "22615:5:19"
																								},
																								"nativeSrc": "22615:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "22615:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "22606:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "22606:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "22581:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "22581:6:19"
																				},
																				"nativeSrc": "22578:77:19",
																				"nodeType": "YulIf",
																				"src": "22578:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22675:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "22675:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22734:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "22734:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22741:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "22741:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "22681:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "22681:52:19"
																							},
																							"nativeSrc": "22681:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "22681:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22668:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "22668:6:19"
																					},
																					"nativeSrc": "22668:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "22668:81:19"
																				},
																				"nativeSrc": "22668:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "22668:81:19"
																			}
																		]
																	},
																	"nativeSrc": "22529:230:19",
																	"nodeType": "YulCase",
																	"src": "22529:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21882:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21882:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21890:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21890:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21879:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "21879:2:19"
																},
																"nativeSrc": "21879:14:19",
																"nodeType": "YulFunctionCall",
																"src": "21879:14:19"
															},
															"nativeSrc": "21872:887:19",
															"nodeType": "YulSwitch",
															"src": "21872:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "21370:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21451:4:19",
														"nodeType": "YulTypedName",
														"src": "21451:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "21457:3:19",
														"nodeType": "YulTypedName",
														"src": "21457:3:19",
														"type": ""
													}
												],
												"src": "21370:1395:19"
											},
											{
												"body": {
													"nativeSrc": "22799:152:19",
													"nodeType": "YulBlock",
													"src": "22799:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22816:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22816:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22819:77:19",
																		"nodeType": "YulLiteral",
																		"src": "22819:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22809:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22809:6:19"
																},
																"nativeSrc": "22809:88:19",
																"nodeType": "YulFunctionCall",
																"src": "22809:88:19"
															},
															"nativeSrc": "22809:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "22809:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22913:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22913:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22916:4:19",
																		"nodeType": "YulLiteral",
																		"src": "22916:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22906:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22906:6:19"
																},
																"nativeSrc": "22906:15:19",
																"nodeType": "YulFunctionCall",
																"src": "22906:15:19"
															},
															"nativeSrc": "22906:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "22906:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22937:1:19",
																		"nodeType": "YulLiteral",
																		"src": "22937:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22940:4:19",
																		"nodeType": "YulLiteral",
																		"src": "22940:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22930:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22930:6:19"
																},
																"nativeSrc": "22930:15:19",
																"nodeType": "YulFunctionCall",
																"src": "22930:15:19"
															},
															"nativeSrc": "22930:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "22930:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22771:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "22771:180:19"
											},
											{
												"body": {
													"nativeSrc": "23083:206:19",
													"nodeType": "YulBlock",
													"src": "23083:206:19",
													"statements": [
														{
															"nativeSrc": "23093:26:19",
															"nodeType": "YulAssignment",
															"src": "23093:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23105:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "23105:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23116:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23116:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23101:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23101:3:19"
																},
																"nativeSrc": "23101:18:19",
																"nodeType": "YulFunctionCall",
																"src": "23101:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23093:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23093:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23173:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23173:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23186:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23186:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23197:1:19",
																				"nodeType": "YulLiteral",
																				"src": "23197:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23182:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23182:3:19"
																		},
																		"nativeSrc": "23182:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23182:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23129:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23129:43:19"
																},
																"nativeSrc": "23129:71:19",
																"nodeType": "YulFunctionCall",
																"src": "23129:71:19"
															},
															"nativeSrc": "23129:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "23129:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23254:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23254:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23267:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23267:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23278:2:19",
																				"nodeType": "YulLiteral",
																				"src": "23278:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23263:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23263:3:19"
																		},
																		"nativeSrc": "23263:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23263:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23210:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23210:43:19"
																},
																"nativeSrc": "23210:72:19",
																"nodeType": "YulFunctionCall",
																"src": "23210:72:19"
															},
															"nativeSrc": "23210:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "23210:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22957:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23047:9:19",
														"nodeType": "YulTypedName",
														"src": "23047:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23059:6:19",
														"nodeType": "YulTypedName",
														"src": "23059:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23067:6:19",
														"nodeType": "YulTypedName",
														"src": "23067:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23078:4:19",
														"nodeType": "YulTypedName",
														"src": "23078:4:19",
														"type": ""
													}
												],
												"src": "22957:332:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b6578063a22cb4651161007a578063a22cb4651461034e578063b88d4fde1461036a578063c87b56dd14610386578063d204c45e146103b6578063e985e9c5146103d2578063f2fde38b1461040257610140565b806370a08231146102ce578063715018a6146102fe5780638456cb59146103085780638da5cb5b1461031257806395d89b411461033057610140565b80633f4ba83a116101085780633f4ba83a146101fa57806342842e0e146102045780634813d8a6146102205780635c975abb146102505780636352211e1461026e57806364b55bed1461029e57610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806323b872dd146101de575b5f80fd5b61015e60048036038101906101599190611d76565b61041e565b60405161016b9190611dbb565b60405180910390f35b61017c61042f565b6040516101899190611e5e565b60405180910390f35b6101ac60048036038101906101a79190611eb1565b6104be565b6040516101b99190611f1b565b60405180910390f35b6101dc60048036038101906101d79190611f5e565b6104d9565b005b6101f860048036038101906101f39190611f9c565b6104ef565b005b6102026105ee565b005b61021e60048036038101906102199190611f9c565b610600565b005b61023a60048036038101906102359190611fec565b61061f565b6040516102479190611dbb565b60405180910390f35b61025861063c565b6040516102659190611dbb565b60405180910390f35b61028860048036038101906102839190611eb1565b610651565b6040516102959190611f1b565b60405180910390f35b6102b860048036038101906102b39190611eb1565b610662565b6040516102c59190611f1b565b60405180910390f35b6102e860048036038101906102e39190611fec565b61069d565b6040516102f59190612026565b60405180910390f35b610306610753565b005b610310610766565b005b61031a610778565b6040516103279190611f1b565b60405180910390f35b6103386107a1565b6040516103459190611e5e565b60405180910390f35b61036860048036038101906103639190612069565b610831565b005b610384600480360381019061037f91906121d3565b610847565b005b6103a0600480360381019061039b9190611eb1565b610864565b6040516103ad9190611e5e565b60405180910390f35b6103d060048036038101906103cb91906122f1565b610876565b005b6103ec60048036038101906103e7919061234b565b6108fd565b6040516103f99190611dbb565b60405180910390f35b61041c60048036038101906104179190611fec565b61098b565b005b5f61042882610a0d565b9050919050565b60605f805461043d906123b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610469906123b6565b80156104b45780601f1061048b576101008083540402835291602001916104b4565b820191905f5260205f20905b81548152906001019060200180831161049757829003601f168201915b5050505050905090565b5f6104c882610a6d565b506104d282610af3565b9050919050565b6104eb82826104e6610b2c565b610b33565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105569190611f1b565b60405180910390fd5b5f610572838361056d610b2c565b610b45565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105e8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105df939291906123e6565b60405180910390fd5b50505050565b6105f6610b5a565b6105fe610bd8565b565b61061a83838360405180602001604052805f815250610847565b505050565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f60075f9054906101000a900460ff16905090565b5f61065b82610a6d565b9050919050565b600b8181548110610671575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107059190611f1b565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61075b610b5a565b6107645f610c39565b565b61076e610b5a565b610776610cfe565b565b5f600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107b0906123b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107dc906123b6565b80156108275780601f106107fe57610100808354040283529160200191610827565b820191905f5260205f20905b81548152906001019060200180831161080a57829003601f168201915b5050505050905090565b61084361083c610b2c565b8383610d60565b5050565b6108528484846104ef565b61085e84848484610ec9565b50505050565b606061086f8261107b565b9050919050565b5f60085f81548092919061088990612448565b9190505590506108998382611186565b6108a381836111a3565b600160095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610993610b5a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906124ff565b60405180910390fd5b610a0a81610c39565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a665750610a65826111fd565b5b9050919050565b5f80610a78836112de565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aea57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ae19190612026565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b408383836001611317565b505050565b5f610b518484846114d6565b90509392505050565b610b62610b2c565b73ffffffffffffffffffffffffffffffffffffffff16610b80610778565b73ffffffffffffffffffffffffffffffffffffffff1614610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd90612567565b60405180910390fd5b565b610be06114f3565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c22610b2c565b604051610c2f9190611f1b565b60405180910390a1565b5f600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d06611533565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d49610b2c565b604051610d569190611f1b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dc79190611f1b565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ebc9190611dbb565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611075578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f0c610b2c565b8685856040518563ffffffff1660e01b8152600401610f2e94939291906125d7565b6020604051808303815f875af1925050508015610f6957506040513d601f19601f82011682018060405250810190610f669190612635565b60015b610fea573d805f8114610f97576040519150601f19603f3d011682016040523d82523d5f602084013e610f9c565b606091505b505f815103610fe257836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fd99190611f1b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461107357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161106a9190611f1b565b60405180910390fd5b505b50505050565b606061108682610a6d565b505f60065f8481526020019081526020015f2080546110a4906123b6565b80601f01602080910402602001604051908101604052809291908181526020018280546110d0906123b6565b801561111b5780601f106110f25761010080835404028352916020019161111b565b820191905f5260205f20905b8154815290600101906020018083116110fe57829003601f168201915b505050505090505f61112b611574565b90505f81510361113f578192505050611181565b5f8251111561117357808260405160200161115b92919061269a565b60405160208183030381529060405292505050611181565b61117c8461158a565b925050505b919050565b61119f828260405180602001604052805f8152506115f0565b5050565b8060065f8481526020019081526020015f2090816111c1919061285a565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111f19190612026565b60405180910390a15050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112c757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112d757506112d68261160b565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061134f57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611481575f61135e84610a6d565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113c857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113db57506113d981846108fd565b155b1561141d57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114149190611f1b565b60405180910390fd5b811561147f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f6114df611533565b6114ea848484611674565b90509392505050565b6114fb61063c565b611531576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61153b61063c565b15611572576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060405180602001604052805f815250905090565b606061159582610a6d565b505f61159f611574565b90505f8151116115bd5760405180602001604052805f8152506115e8565b806115c78461187f565b6040516020016115d892919061269a565b6040516020818303038152906040525b915050919050565b6115fa8383611949565b6116065f848484610ec9565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061167f846112de565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146116c0576116bf818486611a3c565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461174b576116ff5f855f80611317565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146117ca57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60605f600161188d84611aff565b0190505f8167ffffffffffffffff8111156118ab576118aa6120af565b5b6040519080825280601f01601f1916602001820160405280156118dd5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561193e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161193357611932612929565b5b0494505f85036118ea575b819350505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119b09190611f1b565b60405180910390fd5b5f6119c583835f610b45565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a37575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a2e9190611f1b565b60405180910390fd5b505050565b611a47838383611c50565b611afa575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611abb57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ab29190612026565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611af1929190612956565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b5b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b5157611b50612929565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b98576d04ee2d6d415b85acef81000000008381611b8e57611b8d612929565b5b0492506020810190505b662386f26fc100008310611bc757662386f26fc100008381611bbd57611bbc612929565b5b0492506010810190505b6305f5e1008310611bf0576305f5e1008381611be657611be5612929565b5b0492506008810190505b6127108310611c15576127108381611c0b57611c0a612929565b5b0492506004810190505b60648310611c385760648381611c2e57611c2d612929565b5b0492506002810190505b600a8310611c47576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611d0757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611cc85750611cc784846108fd565b5b80611d0657508273ffffffffffffffffffffffffffffffffffffffff16611cee83610af3565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d5581611d21565b8114611d5f575f80fd5b50565b5f81359050611d7081611d4c565b92915050565b5f60208284031215611d8b57611d8a611d19565b5b5f611d9884828501611d62565b91505092915050565b5f8115159050919050565b611db581611da1565b82525050565b5f602082019050611dce5f830184611dac565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0b578082015181840152602081019050611df0565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3082611dd4565b611e3a8185611dde565b9350611e4a818560208601611dee565b611e5381611e16565b840191505092915050565b5f6020820190508181035f830152611e768184611e26565b905092915050565b5f819050919050565b611e9081611e7e565b8114611e9a575f80fd5b50565b5f81359050611eab81611e87565b92915050565b5f60208284031215611ec657611ec5611d19565b5b5f611ed384828501611e9d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f0582611edc565b9050919050565b611f1581611efb565b82525050565b5f602082019050611f2e5f830184611f0c565b92915050565b611f3d81611efb565b8114611f47575f80fd5b50565b5f81359050611f5881611f34565b92915050565b5f8060408385031215611f7457611f73611d19565b5b5f611f8185828601611f4a565b9250506020611f9285828601611e9d565b9150509250929050565b5f805f60608486031215611fb357611fb2611d19565b5b5f611fc086828701611f4a565b9350506020611fd186828701611f4a565b9250506040611fe286828701611e9d565b9150509250925092565b5f6020828403121561200157612000611d19565b5b5f61200e84828501611f4a565b91505092915050565b61202081611e7e565b82525050565b5f6020820190506120395f830184612017565b92915050565b61204881611da1565b8114612052575f80fd5b50565b5f813590506120638161203f565b92915050565b5f806040838503121561207f5761207e611d19565b5b5f61208c85828601611f4a565b925050602061209d85828601612055565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120e582611e16565b810181811067ffffffffffffffff82111715612104576121036120af565b5b80604052505050565b5f612116611d10565b905061212282826120dc565b919050565b5f67ffffffffffffffff821115612141576121406120af565b5b61214a82611e16565b9050602081019050919050565b828183375f83830152505050565b5f61217761217284612127565b61210d565b905082815260208101848484011115612193576121926120ab565b5b61219e848285612157565b509392505050565b5f82601f8301126121ba576121b96120a7565b5b81356121ca848260208601612165565b91505092915050565b5f805f80608085870312156121eb576121ea611d19565b5b5f6121f887828801611f4a565b945050602061220987828801611f4a565b935050604061221a87828801611e9d565b925050606085013567ffffffffffffffff81111561223b5761223a611d1d565b5b612247878288016121a6565b91505092959194509250565b5f67ffffffffffffffff82111561226d5761226c6120af565b5b61227682611e16565b9050602081019050919050565b5f61229561229084612253565b61210d565b9050828152602081018484840111156122b1576122b06120ab565b5b6122bc848285612157565b509392505050565b5f82601f8301126122d8576122d76120a7565b5b81356122e8848260208601612283565b91505092915050565b5f806040838503121561230757612306611d19565b5b5f61231485828601611f4a565b925050602083013567ffffffffffffffff81111561233557612334611d1d565b5b612341858286016122c4565b9150509250929050565b5f806040838503121561236157612360611d19565b5b5f61236e85828601611f4a565b925050602061237f85828601611f4a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123cd57607f821691505b6020821081036123e0576123df612389565b5b50919050565b5f6060820190506123f95f830186611f0c565b6124066020830185612017565b6124136040830184611f0c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61245282611e7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124845761248361241b565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6124e9602683611dde565b91506124f48261248f565b604082019050919050565b5f6020820190508181035f830152612516816124dd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612551602083611dde565b915061255c8261251d565b602082019050919050565b5f6020820190508181035f83015261257e81612545565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6125a982612585565b6125b3818561258f565b93506125c3818560208601611dee565b6125cc81611e16565b840191505092915050565b5f6080820190506125ea5f830187611f0c565b6125f76020830186611f0c565b6126046040830185612017565b8181036060830152612616818461259f565b905095945050505050565b5f8151905061262f81611d4c565b92915050565b5f6020828403121561264a57612649611d19565b5b5f61265784828501612621565b91505092915050565b5f81905092915050565b5f61267482611dd4565b61267e8185612660565b935061268e818560208601611dee565b80840191505092915050565b5f6126a5828561266a565b91506126b1828461266a565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126de565b61272386836126de565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61275e61275961275484611e7e565b61273b565b611e7e565b9050919050565b5f819050919050565b61277783612744565b61278b61278382612765565b8484546126ea565b825550505050565b5f90565b61279f612793565b6127aa81848461276e565b505050565b5b818110156127cd576127c25f82612797565b6001810190506127b0565b5050565b601f821115612812576127e3816126bd565b6127ec846126cf565b810160208510156127fb578190505b61280f612807856126cf565b8301826127af565b50505b505050565b5f82821c905092915050565b5f6128325f1984600802612817565b1980831691505092915050565b5f61284a8383612823565b9150826002028217905092915050565b61286382611dd4565b67ffffffffffffffff81111561287c5761287b6120af565b5b61288682546123b6565b6128918282856127d1565b5f60209050601f8311600181146128c2575f84156128b0578287015190505b6128ba858261283f565b865550612921565b601f1984166128d0866126bd565b5f5b828110156128f7578489015182556001820191506020850194506020810190506128d2565b868310156129145784890151612910601f891682612823565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506129695f830185611f0c565b6129766020830184612017565b939250505056fea2646970667358221220393ce21c9454a391d54c3822cfd29abb76449e80cfea5f097f1704df6f15357864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x330 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x4813D8A6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x64B55BED EQ PUSH2 0x29E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x766 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x428 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x43D SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x497 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4C8 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH2 0x4D2 DUP3 PUSH2 0xAF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB DUP3 DUP3 PUSH2 0x4E6 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x572 DUP4 DUP4 PUSH2 0x56D PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xBD8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x847 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x65B DUP3 PUSH2 0xA6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x671 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75B PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x764 PUSH0 PUSH2 0xC39 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x76E PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x776 PUSH2 0xCFE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x827 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x827 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x843 PUSH2 0x83C PUSH2 0xB2C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x852 DUP5 DUP5 DUP5 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x85E DUP5 DUP5 DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x86F DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x889 SWAP1 PUSH2 0x2448 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x899 DUP4 DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x8A3 DUP2 DUP4 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 PUSH2 0xB5A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F8 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0xC39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA66 JUMPI POP PUSH2 0xA65 DUP3 PUSH2 0x11FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA78 DUP4 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB40 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1317 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB51 DUP5 DUP5 DUP5 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB62 PUSH2 0xB2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB80 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xBE0 PUSH2 0x14F3 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xC22 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD49 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD56 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1075 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF0C PUSH2 0xB2C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF69 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFEA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFE2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1073 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1086 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x10A4 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10D0 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x111B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x111B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x112B PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x113F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1181 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1173 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x115B SWAP3 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x117C DUP5 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15F0 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x11C1 SWAP2 SWAP1 PUSH2 0x285A JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x12C7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12D7 JUMPI POP PUSH2 0x12D6 DUP3 PUSH2 0x160B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x134F JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1481 JUMPI PUSH0 PUSH2 0x135E DUP5 PUSH2 0xA6D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13C8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13DB JUMPI POP PUSH2 0x13D9 DUP2 DUP5 PUSH2 0x8FD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x141D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x147F JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DF PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x14EA DUP5 DUP5 DUP5 PUSH2 0x1674 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14FB PUSH2 0x63C JUMP JUMPDEST PUSH2 0x1531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x153B PUSH2 0x63C JUMP JUMPDEST ISZERO PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1595 DUP3 PUSH2 0xA6D JUMP JUMPDEST POP PUSH0 PUSH2 0x159F PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15E8 JUMP JUMPDEST DUP1 PUSH2 0x15C7 DUP5 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D8 SWAP3 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FA DUP4 DUP4 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x1606 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x167F DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16C0 JUMPI PUSH2 0x16BF DUP2 DUP5 DUP7 PUSH2 0x1A3C JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x174B JUMPI PUSH2 0x16FF PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17CA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x188D DUP5 PUSH2 0x1AFF JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x193E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x18EA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x19C5 DUP4 DUP4 PUSH0 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A47 DUP4 DUP4 DUP4 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1AFA JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF1 SWAP3 SWAP2 SWAP1 PUSH2 0x2956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B5B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B51 JUMPI PUSH2 0x1B50 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1B98 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BC7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1BF0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1BE6 JUMPI PUSH2 0x1BE5 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C15 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C38 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x2929 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C47 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1D07 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1CC8 JUMPI POP PUSH2 0x1CC7 DUP5 DUP5 PUSH2 0x8FD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1D06 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CEE DUP4 PUSH2 0xAF3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1D21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D70 DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP5 DUP3 DUP6 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DCE PUSH0 DUP4 ADD DUP5 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF0 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E30 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x1E3A DUP2 DUP6 PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP PUSH2 0x1E4A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x1E53 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E76 DUP2 DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E90 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAB DUP2 PUSH2 0x1E87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F05 DUP3 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F15 DUP2 PUSH2 0x1EFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F2E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x1EFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F58 DUP2 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F92 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FD1 DUP7 DUP3 DUP8 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FE2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2001 JUMPI PUSH2 0x2000 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x200E DUP5 DUP3 DUP6 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2020 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2039 PUSH0 DUP4 ADD DUP5 PUSH2 0x2017 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2048 DUP2 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2052 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2063 DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x209D DUP6 DUP3 DUP7 ADD PUSH2 0x2055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20E5 DUP3 PUSH2 0x1E16 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2116 PUSH2 0x1D10 JUMP JUMPDEST SWAP1 POP PUSH2 0x2122 DUP3 DUP3 PUSH2 0x20DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x214A DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2177 PUSH2 0x2172 DUP5 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2193 JUMPI PUSH2 0x2192 PUSH2 0x20AB JUMP JUMPDEST JUMPDEST PUSH2 0x219E DUP5 DUP3 DUP6 PUSH2 0x2157 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2165 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21EB JUMPI PUSH2 0x21EA PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F8 DUP8 DUP3 DUP9 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2209 DUP8 DUP3 DUP9 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x221A DUP8 DUP3 DUP9 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x223B JUMPI PUSH2 0x223A PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2247 DUP8 DUP3 DUP9 ADD PUSH2 0x21A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x2276 DUP3 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2295 PUSH2 0x2290 DUP5 PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x20AB JUMP JUMPDEST JUMPDEST PUSH2 0x22BC DUP5 DUP3 DUP6 PUSH2 0x2157 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22D8 JUMPI PUSH2 0x22D7 PUSH2 0x20A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22E8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2283 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2306 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2314 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST PUSH2 0x2341 DUP6 DUP3 DUP7 ADD PUSH2 0x22C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2361 JUMPI PUSH2 0x2360 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236E DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x237F DUP6 DUP3 DUP7 ADD PUSH2 0x1F4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E0 JUMPI PUSH2 0x23DF PUSH2 0x2389 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2406 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x2413 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F0C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2452 DUP3 PUSH2 0x1E7E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2484 JUMPI PUSH2 0x2483 PUSH2 0x241B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E9 PUSH1 0x26 DUP4 PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP PUSH2 0x24F4 DUP3 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2516 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2551 PUSH1 0x20 DUP4 PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP PUSH2 0x255C DUP3 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x257E DUP2 PUSH2 0x2545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A9 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x25B3 DUP2 DUP6 PUSH2 0x258F JUMP JUMPDEST SWAP4 POP PUSH2 0x25C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25EA PUSH0 DUP4 ADD DUP8 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x25F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2604 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2017 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP5 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x262F DUP2 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264A JUMPI PUSH2 0x2649 PUSH2 0x1D19 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2657 DUP5 DUP3 DUP6 ADD PUSH2 0x2621 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2674 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x267E DUP2 DUP6 PUSH2 0x2660 JUMP JUMPDEST SWAP4 POP PUSH2 0x268E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26A5 DUP3 DUP6 PUSH2 0x266A JUMP JUMPDEST SWAP2 POP PUSH2 0x26B1 DUP3 DUP5 PUSH2 0x266A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2719 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH2 0x2723 DUP7 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275E PUSH2 0x2759 PUSH2 0x2754 DUP5 PUSH2 0x1E7E JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST PUSH2 0x1E7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2777 DUP4 PUSH2 0x2744 JUMP JUMPDEST PUSH2 0x278B PUSH2 0x2783 DUP3 PUSH2 0x2765 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26EA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x279F PUSH2 0x2793 JUMP JUMPDEST PUSH2 0x27AA DUP2 DUP5 DUP5 PUSH2 0x276E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27CD JUMPI PUSH2 0x27C2 PUSH0 DUP3 PUSH2 0x2797 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2812 JUMPI PUSH2 0x27E3 DUP2 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x27EC DUP5 PUSH2 0x26CF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27FB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x280F PUSH2 0x2807 DUP6 PUSH2 0x26CF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2832 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2817 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x284A DUP4 DUP4 PUSH2 0x2823 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2863 DUP3 PUSH2 0x1DD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x2886 DUP3 SLOAD PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x2891 DUP3 DUP3 DUP6 PUSH2 0x27D1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28C2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28BA DUP6 DUP3 PUSH2 0x283F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D0 DUP7 PUSH2 0x26BD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28D2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2914 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2910 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2969 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x2976 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2017 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY EXTCODECOPY 0xE2 SHR SWAP5 SLOAD LOG3 SWAP2 0xD5 0x4C CODESIZE 0x22 0xCF 0xD2 SWAP11 0xBB PUSH23 0x449E80CFEA5F097F1704DF6F15357864736F6C63430008 OR STOP CALLER ",
							"sourceMap": "326:1337:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;702:63:18;;;:::i;:::-;;4787:132:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;485:47:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:84:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:33:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;637:59:18;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1261:189:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;771:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1456:205:18;1591:4;1618:36;1642:11;1618:23;:36::i;:::-;1611:43;;1456:205;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;702:63:18:-;1094:13:0;:11;:13::i;:::-;748:10:18::1;:8;:10::i;:::-;702:63::o:0;4787:132:5:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;485:47:18:-;;;;;;;;;;;;;;;;;;;;;;:::o;1850:84:12:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;538:33:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1920:208:5:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;637:59:18:-;1094:13:0;:11;:13::i;:::-;681:8:18::1;:6;:8::i;:::-;637:59::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1261:189:18:-;1384:13;1420:23;1435:7;1420:14;:23::i;:::-;1413:30;;1261:189;;;:::o;771:205::-;838:15;856:12;;:14;;;;;;;;;:::i;:::-;;;;;838:32;;880:22;890:2;894:7;880:9;:22::i;:::-;912:26;925:7;934:3;912:12;:26::i;:::-;965:4;948:10;:14;959:2;948:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;827:149;771:205;;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;937:207:9:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:5:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;1051:204:18:-;1186:7;1216:32;1230:2;1234:7;1243:4;1216:13;:32::i;:::-;1209:39;;1051:204;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2710:117:12:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;2463:115:12:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;10633:100:5:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:9:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;1561:300:5:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;1120:204:8:-;1259:7;1474:19:12;:17;:19::i;:::-;1285:32:8::1;1299:2;1303:7;1312:4;1285:13;:32::i;:::-;1278:39;;1120:204:::0;;;;;:::o;2202:126:12:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;3174:92:5:-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;8838:795:5:-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;447:696:13:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;9955:327:5:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10139:916:16:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:654::-;11174:6;11182;11231:2;11219:9;11210:7;11206:23;11202:32;11199:119;;;11237:79;;:::i;:::-;11199:119;11357:1;11382:53;11427:7;11418:6;11407:9;11403:22;11382:53;:::i;:::-;11372:63;;11328:117;11512:2;11501:9;11497:18;11484:32;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:63;11725:7;11716:6;11705:9;11701:22;11670:63;:::i;:::-;11660:73;;11455:288;11096:654;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:442::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;13029:72;13097:2;13086:9;13082:18;13073:6;13029:72;:::i;:::-;13111;13179:2;13168:9;13164:18;13155:6;13111:72;:::i;:::-;12748:442;;;;;;:::o;13196:180::-;13244:77;13241:1;13234:88;13341:4;13338:1;13331:15;13365:4;13362:1;13355:15;13382:233;13421:3;13444:24;13462:5;13444:24;:::i;:::-;13435:33;;13490:66;13483:5;13480:77;13477:103;;13560:18;;:::i;:::-;13477:103;13607:1;13600:5;13596:13;13589:20;;13382:233;;;:::o;13621:225::-;13761:34;13757:1;13749:6;13745:14;13738:58;13830:8;13825:2;13817:6;13813:15;13806:33;13621:225;:::o;13852:366::-;13994:3;14015:67;14079:2;14074:3;14015:67;:::i;:::-;14008:74;;14091:93;14180:3;14091:93;:::i;:::-;14209:2;14204:3;14200:12;14193:19;;13852:366;;;:::o;14224:419::-;14390:4;14428:2;14417:9;14413:18;14405:26;;14477:9;14471:4;14467:20;14463:1;14452:9;14448:17;14441:47;14505:131;14631:4;14505:131;:::i;:::-;14497:139;;14224:419;;;:::o;14649:182::-;14789:34;14785:1;14777:6;14773:14;14766:58;14649:182;:::o;14837:366::-;14979:3;15000:67;15064:2;15059:3;15000:67;:::i;:::-;14993:74;;15076:93;15165:3;15076:93;:::i;:::-;15194:2;15189:3;15185:12;15178:19;;14837:366;;;:::o;15209:419::-;15375:4;15413:2;15402:9;15398:18;15390:26;;15462:9;15456:4;15452:20;15448:1;15437:9;15433:17;15426:47;15490:131;15616:4;15490:131;:::i;:::-;15482:139;;15209:419;;;:::o;15634:98::-;15685:6;15719:5;15713:12;15703:22;;15634:98;;;:::o;15738:168::-;15821:11;15855:6;15850:3;15843:19;15895:4;15890:3;15886:14;15871:29;;15738:168;;;;:::o;15912:373::-;15998:3;16026:38;16058:5;16026:38;:::i;:::-;16080:70;16143:6;16138:3;16080:70;:::i;:::-;16073:77;;16159:65;16217:6;16212:3;16205:4;16198:5;16194:16;16159:65;:::i;:::-;16249:29;16271:6;16249:29;:::i;:::-;16244:3;16240:39;16233:46;;16002:283;15912:373;;;;:::o;16291:640::-;16486:4;16524:3;16513:9;16509:19;16501:27;;16538:71;16606:1;16595:9;16591:17;16582:6;16538:71;:::i;:::-;16619:72;16687:2;16676:9;16672:18;16663:6;16619:72;:::i;:::-;16701;16769:2;16758:9;16754:18;16745:6;16701:72;:::i;:::-;16820:9;16814:4;16810:20;16805:2;16794:9;16790:18;16783:48;16848:76;16919:4;16910:6;16848:76;:::i;:::-;16840:84;;16291:640;;;;;;;:::o;16937:141::-;16993:5;17024:6;17018:13;17009:22;;17040:32;17066:5;17040:32;:::i;:::-;16937:141;;;;:::o;17084:349::-;17153:6;17202:2;17190:9;17181:7;17177:23;17173:32;17170:119;;;17208:79;;:::i;:::-;17170:119;17328:1;17353:63;17408:7;17399:6;17388:9;17384:22;17353:63;:::i;:::-;17343:73;;17299:127;17084:349;;;;:::o;17439:148::-;17541:11;17578:3;17563:18;;17439:148;;;;:::o;17593:390::-;17699:3;17727:39;17760:5;17727:39;:::i;:::-;17782:89;17864:6;17859:3;17782:89;:::i;:::-;17775:96;;17880:65;17938:6;17933:3;17926:4;17919:5;17915:16;17880:65;:::i;:::-;17970:6;17965:3;17961:16;17954:23;;17703:280;17593:390;;;;:::o;17989:435::-;18169:3;18191:95;18282:3;18273:6;18191:95;:::i;:::-;18184:102;;18303:95;18394:3;18385:6;18303:95;:::i;:::-;18296:102;;18415:3;18408:10;;17989:435;;;;;:::o;18430:141::-;18479:4;18502:3;18494:11;;18525:3;18522:1;18515:14;18559:4;18556:1;18546:18;18538:26;;18430:141;;;:::o;18577:93::-;18614:6;18661:2;18656;18649:5;18645:14;18641:23;18631:33;;18577:93;;;:::o;18676:107::-;18720:8;18770:5;18764:4;18760:16;18739:37;;18676:107;;;;:::o;18789:393::-;18858:6;18908:1;18896:10;18892:18;18931:97;18961:66;18950:9;18931:97;:::i;:::-;19049:39;19079:8;19068:9;19049:39;:::i;:::-;19037:51;;19121:4;19117:9;19110:5;19106:21;19097:30;;19170:4;19160:8;19156:19;19149:5;19146:30;19136:40;;18865:317;;18789:393;;;;;:::o;19188:60::-;19216:3;19237:5;19230:12;;19188:60;;;:::o;19254:142::-;19304:9;19337:53;19355:34;19364:24;19382:5;19364:24;:::i;:::-;19355:34;:::i;:::-;19337:53;:::i;:::-;19324:66;;19254:142;;;:::o;19402:75::-;19445:3;19466:5;19459:12;;19402:75;;;:::o;19483:269::-;19593:39;19624:7;19593:39;:::i;:::-;19654:91;19703:41;19727:16;19703:41;:::i;:::-;19695:6;19688:4;19682:11;19654:91;:::i;:::-;19648:4;19641:105;19559:193;19483:269;;;:::o;19758:73::-;19803:3;19758:73;:::o;19837:189::-;19914:32;;:::i;:::-;19955:65;20013:6;20005;19999:4;19955:65;:::i;:::-;19890:136;19837:189;;:::o;20032:186::-;20092:120;20109:3;20102:5;20099:14;20092:120;;;20163:39;20200:1;20193:5;20163:39;:::i;:::-;20136:1;20129:5;20125:13;20116:22;;20092:120;;;20032:186;;:::o;20224:543::-;20325:2;20320:3;20317:11;20314:446;;;20359:38;20391:5;20359:38;:::i;:::-;20443:29;20461:10;20443:29;:::i;:::-;20433:8;20429:44;20626:2;20614:10;20611:18;20608:49;;;20647:8;20632:23;;20608:49;20670:80;20726:22;20744:3;20726:22;:::i;:::-;20716:8;20712:37;20699:11;20670:80;:::i;:::-;20329:431;;20314:446;20224:543;;;:::o;20773:117::-;20827:8;20877:5;20871:4;20867:16;20846:37;;20773:117;;;;:::o;20896:169::-;20940:6;20973:51;21021:1;21017:6;21009:5;21006:1;21002:13;20973:51;:::i;:::-;20969:56;21054:4;21048;21044:15;21034:25;;20947:118;20896:169;;;;:::o;21070:295::-;21146:4;21292:29;21317:3;21311:4;21292:29;:::i;:::-;21284:37;;21354:3;21351:1;21347:11;21341:4;21338:21;21330:29;;21070:295;;;;:::o;21370:1395::-;21487:37;21520:3;21487:37;:::i;:::-;21589:18;21581:6;21578:30;21575:56;;;21611:18;;:::i;:::-;21575:56;21655:38;21687:4;21681:11;21655:38;:::i;:::-;21740:67;21800:6;21792;21786:4;21740:67;:::i;:::-;21834:1;21858:4;21845:17;;21890:2;21882:6;21879:14;21907:1;21902:618;;;;22564:1;22581:6;22578:77;;;22630:9;22625:3;22621:19;22615:26;22606:35;;22578:77;22681:67;22741:6;22734:5;22681:67;:::i;:::-;22675:4;22668:81;22537:222;21872:887;;21902:618;21954:4;21950:9;21942:6;21938:22;21988:37;22020:4;21988:37;:::i;:::-;22047:1;22061:208;22075:7;22072:1;22069:14;22061:208;;;22154:9;22149:3;22145:19;22139:26;22131:6;22124:42;22205:1;22197:6;22193:14;22183:24;;22252:2;22241:9;22237:18;22224:31;;22098:4;22095:1;22091:12;22086:17;;22061:208;;;22297:6;22288:7;22285:19;22282:179;;;22355:9;22350:3;22346:19;22340:26;22398:48;22440:4;22432:6;22428:17;22417:9;22398:48;:::i;:::-;22390:6;22383:64;22305:156;22282:179;22507:1;22503;22495:6;22491:14;22487:22;22481:4;22474:36;21909:611;;;21872:887;;21462:1303;;;21370:1395;;:::o;22771:180::-;22819:77;22816:1;22809:88;22916:4;22913:1;22906:15;22940:4;22937:1;22930:15;22957:332;23078:4;23116:2;23105:9;23101:18;23093:26;;23129:71;23197:1;23186:9;23182:17;23173:6;23129:71;:::i;:::-;23210:72;23278:2;23267:9;23263:18;23254:6;23210:72;:::i;:::-;22957:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2135000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowedAddresses(uint256)": "5077",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isAllowedToMint(address)": "2900",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2655",
								"ownerOf(uint256)": "infinite",
								"pause()": "infinite",
								"paused()": "2562",
								"renounceOwnership()": "30588",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "31016",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 631,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 631,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 631,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 578,
									"end": 631,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 19,
									"value": "47"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 19
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "30"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "33"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 19,
									"value": "67"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 19,
									"value": "76"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 19,
									"value": "77"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 19,
									"value": "79"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 19,
									"value": "83"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 19,
									"value": "85"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 19,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 19,
									"value": "87"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 19,
									"value": "89"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 19,
									"value": "88"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 19,
									"value": "90"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 19,
									"value": "91"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 19,
									"value": "94"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "95"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 19,
									"value": "95"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 19,
									"value": "93"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 19
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 19,
									"value": "96"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "97"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 19,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 19,
									"value": "101"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 19
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 19,
									"value": "92"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 1663,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220393ce21c9454a391d54c3822cfd29abb76449e80cfea5f097f1704df6f15357864736f6c63430008170033",
									".code": [
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "A22CB465"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "B88D4FDE"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "C87B56DD"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "D204C45E"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "8456CB59"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "95D89B41"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "3F4BA83A"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "3F4BA83A"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "42842E0E"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "4813D8A6"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "5C975ABB"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "64B55BED"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "1FFC9A7"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "6FDDE03"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "81812FC"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 326,
											"end": 1663,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1456,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1456,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1456,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 702,
											"end": 765,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 702,
											"end": 765,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 702,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 702,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 702,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 702,
											"end": 765,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 702,
											"end": 765,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 702,
											"end": 765,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 485,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 485,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 485,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 538,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 538,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 696,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 637,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 637,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 637,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 637,
											"end": 696,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 637,
											"end": 696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 637,
											"end": 696,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1261,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 1261,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 771,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 771,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 1618,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1618,
											"end": 1654,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 1618,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1456,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 702,
											"end": 765,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 702,
											"end": 765,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 748,
											"end": 756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 748,
											"end": 758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 748,
											"end": 758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 748,
											"end": 758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 702,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 485,
											"end": 532,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 485,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 538,
											"end": 571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 696,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 637,
											"end": 696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 681,
											"end": 687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 681,
											"end": 689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 681,
											"end": 689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 681,
											"end": 689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 637,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1384,
											"end": 1397,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1420,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 1420,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1413,
											"end": 1443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1413,
											"end": 1443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1261,
											"end": 1450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 771,
											"end": 976,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 838,
											"end": 853,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 868,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 856,
											"end": 868,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 870,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 856,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 856,
											"end": 870,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 856,
											"end": 870,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 838,
											"end": 870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 838,
											"end": 870,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 880,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 890,
											"end": 892,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 894,
											"end": 901,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 880,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 880,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 880,
											"end": 902,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 880,
											"end": 902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 912,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 925,
											"end": 932,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 934,
											"end": 937,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 912,
											"end": 938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 912,
											"end": 938,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 912,
											"end": 938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 965,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 948,
											"end": 958,
											"name": "PUSH",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 948,
											"end": 969,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 948,
											"end": 969,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 948,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 827,
											"end": 976,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 771,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1243,
											"end": 1247,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 1216,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "tag",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1209,
											"end": 1248,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1209,
											"end": 1248,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1285,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1299,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1316,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1285,
											"end": 1317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1285,
											"end": 1317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 12,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 12,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 16,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 16,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 16,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 16,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 19,
											"value": "463"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 19,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 19,
											"value": "474"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 19,
											"value": "511"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 19,
											"value": "90"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 19,
											"value": "550"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 19,
											"value": "563"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 19,
											"value": "562"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 19,
											"value": "571"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 19,
											"value": "573"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 19,
											"value": "574"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "tag",
											"source": 19,
											"value": "102"
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11210,
											"end": 11217,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11206,
											"end": 11229,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11202,
											"end": 11234,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 11237,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "tag",
											"source": 19,
											"value": "580"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 11427,
											"end": 11434,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11418,
											"end": 11424,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11407,
											"end": 11416,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11403,
											"end": 11425,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 11382,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "tag",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11328,
											"end": 11445,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11512,
											"end": 11514,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11484,
											"end": 11516,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11562,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 11565,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "tag",
											"source": 19,
											"value": "583"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 11725,
											"end": 11732,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11701,
											"end": 11723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 11670,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "tag",
											"source": 19,
											"value": "585"
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11455,
											"end": 11743,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11881,
											"end": 11883,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11878,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11856,
											"end": 11879,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11852,
											"end": 11884,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 11887,
											"end": 11966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "tag",
											"source": 19,
											"value": "587"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12057,
											"end": 12066,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12053,
											"end": 12075,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 12032,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "tag",
											"source": 19,
											"value": "589"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11978,
											"end": 12095,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12196,
											"end": 12202,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12181,
											"end": 12203,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 12160,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "tag",
											"source": 19,
											"value": "590"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12105,
											"end": 12223,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12284,
											"end": 12361,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12274,
											"end": 12362,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 12371,
											"end": 12386,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12466,
											"end": 12472,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12504,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12493,
											"end": 12505,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12552,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12615,
											"end": 12632,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "tag",
											"source": 19,
											"value": "593"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12687,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12678,
											"end": 12692,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 12708,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "tag",
											"source": 19,
											"value": "594"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12473,
											"end": 12742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12422,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "tag",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12924,
											"end": 12933,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 13016,
											"end": 13017,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13014,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13001,
											"end": 13018,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 12948,
											"end": 13019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13086,
											"end": 13095,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13073,
											"end": 13079,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 13029,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "tag",
											"source": 19,
											"value": "598"
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 13179,
											"end": 13181,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13155,
											"end": 13161,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 13111,
											"end": 13183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12748,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13196,
											"end": 13376,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 13196,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13244,
											"end": 13321,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13241,
											"end": 13242,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13322,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13341,
											"end": 13345,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 13338,
											"end": 13339,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 13331,
											"end": 13346,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13365,
											"end": 13369,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13362,
											"end": 13363,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13370,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13421,
											"end": 13424,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 13462,
											"end": 13467,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 13444,
											"end": 13468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "tag",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13435,
											"end": 13468,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13435,
											"end": 13468,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13490,
											"end": 13556,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13480,
											"end": 13557,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 13560,
											"end": 13578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "tag",
											"source": 19,
											"value": "604"
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "tag",
											"source": 19,
											"value": "603"
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 13600,
											"end": 13605,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13596,
											"end": 13609,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13589,
											"end": 13609,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13589,
											"end": 13609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13382,
											"end": 13615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 13846,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 13621,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13761,
											"end": 13795,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13755,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13745,
											"end": 13759,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13738,
											"end": 13796,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13830,
											"end": 13838,
											"name": "PUSH",
											"source": 19,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13825,
											"end": 13827,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13817,
											"end": 13823,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13813,
											"end": 13828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13806,
											"end": 13839,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 13846,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 13846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13852,
											"end": 14218,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 13852,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13994,
											"end": 13997,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14015,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 14079,
											"end": 14081,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 14074,
											"end": 14077,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14015,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 14015,
											"end": 14082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14015,
											"end": 14082,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 14015,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14008,
											"end": 14082,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14008,
											"end": 14082,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14091,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 14180,
											"end": 14183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14091,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 14091,
											"end": 14184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14091,
											"end": 14184,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 14091,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14204,
											"end": 14207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14200,
											"end": 14212,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14193,
											"end": 14212,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14193,
											"end": 14212,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13852,
											"end": 14218,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13852,
											"end": 14218,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13852,
											"end": 14218,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13852,
											"end": 14218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14224,
											"end": 14643,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 14224,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14390,
											"end": 14394,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14428,
											"end": 14430,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14405,
											"end": 14431,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14405,
											"end": 14431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14477,
											"end": 14486,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14471,
											"end": 14475,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14467,
											"end": 14487,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14463,
											"end": 14464,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14461,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14448,
											"end": 14465,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14441,
											"end": 14488,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14505,
											"end": 14636,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 14631,
											"end": 14635,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14505,
											"end": 14636,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 14505,
											"end": 14636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14505,
											"end": 14636,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 14505,
											"end": 14636,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14636,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14636,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14224,
											"end": 14643,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14224,
											"end": 14643,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14224,
											"end": 14643,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14224,
											"end": 14643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14649,
											"end": 14831,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 14649,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14789,
											"end": 14823,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14785,
											"end": 14786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14777,
											"end": 14783,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14773,
											"end": 14787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14766,
											"end": 14824,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14649,
											"end": 14831,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14649,
											"end": 14831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14979,
											"end": 14982,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 15064,
											"end": 15066,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 15000,
											"end": 15067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 15000,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14993,
											"end": 15067,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14993,
											"end": 15067,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 15165,
											"end": 15168,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 15076,
											"end": 15169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 15076,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15196,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15189,
											"end": 15192,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15185,
											"end": 15197,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15178,
											"end": 15197,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15178,
											"end": 15197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14837,
											"end": 15203,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14837,
											"end": 15203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15375,
											"end": 15379,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15415,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15402,
											"end": 15411,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15398,
											"end": 15416,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15390,
											"end": 15416,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15390,
											"end": 15416,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15462,
											"end": 15471,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15456,
											"end": 15460,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15452,
											"end": 15472,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15448,
											"end": 15449,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15437,
											"end": 15446,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15433,
											"end": 15450,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15426,
											"end": 15473,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 15616,
											"end": 15620,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 15490,
											"end": 15621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "tag",
											"source": 19,
											"value": "616"
										},
										{
											"begin": 15490,
											"end": 15621,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15482,
											"end": 15621,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15482,
											"end": 15621,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15209,
											"end": 15628,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15209,
											"end": 15628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15634,
											"end": 15732,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 15634,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15685,
											"end": 15691,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15719,
											"end": 15724,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15713,
											"end": 15725,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15703,
											"end": 15725,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15703,
											"end": 15725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15634,
											"end": 15732,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15634,
											"end": 15732,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15634,
											"end": 15732,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15634,
											"end": 15732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15821,
											"end": 15832,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15861,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15850,
											"end": 15853,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15895,
											"end": 15899,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15890,
											"end": 15893,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15886,
											"end": 15900,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15871,
											"end": 15900,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15871,
											"end": 15900,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15738,
											"end": 15906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "tag",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15998,
											"end": 16001,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16026,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 16058,
											"end": 16063,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16026,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 16026,
											"end": 16064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16026,
											"end": 16064,
											"name": "tag",
											"source": 19,
											"value": "620"
										},
										{
											"begin": 16026,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16080,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 16143,
											"end": 16149,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16138,
											"end": 16141,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16080,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 16080,
											"end": 16150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16080,
											"end": 16150,
											"name": "tag",
											"source": 19,
											"value": "621"
										},
										{
											"begin": 16080,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16073,
											"end": 16150,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16073,
											"end": 16150,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16159,
											"end": 16224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 16217,
											"end": 16223,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16212,
											"end": 16215,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16205,
											"end": 16209,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16198,
											"end": 16203,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16194,
											"end": 16210,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16159,
											"end": 16224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 16159,
											"end": 16224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16159,
											"end": 16224,
											"name": "tag",
											"source": 19,
											"value": "622"
										},
										{
											"begin": 16159,
											"end": 16224,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16249,
											"end": 16278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 16271,
											"end": 16277,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16249,
											"end": 16278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 16249,
											"end": 16278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16249,
											"end": 16278,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 16249,
											"end": 16278,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16244,
											"end": 16247,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16240,
											"end": 16279,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16233,
											"end": 16279,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16233,
											"end": 16279,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16002,
											"end": 16285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15912,
											"end": 16285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "tag",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16486,
											"end": 16490,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16524,
											"end": 16527,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 16513,
											"end": 16522,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16509,
											"end": 16528,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16501,
											"end": 16528,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16501,
											"end": 16528,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16538,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 16606,
											"end": 16607,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16595,
											"end": 16604,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16591,
											"end": 16608,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16582,
											"end": 16588,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 16538,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 16538,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16538,
											"end": 16609,
											"name": "tag",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 16538,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16676,
											"end": 16685,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16663,
											"end": 16669,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 16619,
											"end": 16691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16691,
											"name": "tag",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 16619,
											"end": 16691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16701,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 16769,
											"end": 16771,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16758,
											"end": 16767,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16754,
											"end": 16772,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16701,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 16701,
											"end": 16773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16701,
											"end": 16773,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 16701,
											"end": 16773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16820,
											"end": 16829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16814,
											"end": 16818,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16810,
											"end": 16830,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16805,
											"end": 16807,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16794,
											"end": 16803,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16790,
											"end": 16808,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16783,
											"end": 16831,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16848,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 16919,
											"end": 16923,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16910,
											"end": 16916,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16848,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "428"
										},
										{
											"begin": 16848,
											"end": 16924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16848,
											"end": 16924,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 16848,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16840,
											"end": 16924,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16840,
											"end": 16924,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16291,
											"end": 16931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16993,
											"end": 16998,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17024,
											"end": 17030,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17018,
											"end": 17031,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17009,
											"end": 17031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17009,
											"end": 17031,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17040,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 17066,
											"end": 17071,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17040,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 17040,
											"end": 17072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17040,
											"end": 17072,
											"name": "tag",
											"source": 19,
											"value": "630"
										},
										{
											"begin": 17040,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 17078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "tag",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17153,
											"end": 17159,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17202,
											"end": 17204,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17199,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17181,
											"end": 17188,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17177,
											"end": 17200,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17173,
											"end": 17205,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 17170,
											"end": 17289,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17170,
											"end": 17289,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 17170,
											"end": 17289,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17208,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 17208,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 17208,
											"end": 17287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17208,
											"end": 17287,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 17208,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17170,
											"end": 17289,
											"name": "tag",
											"source": 19,
											"value": "632"
										},
										{
											"begin": 17170,
											"end": 17289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17328,
											"end": 17329,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17353,
											"end": 17416,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 17408,
											"end": 17415,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17399,
											"end": 17405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17388,
											"end": 17397,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17384,
											"end": 17406,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17353,
											"end": 17416,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 17353,
											"end": 17416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17353,
											"end": 17416,
											"name": "tag",
											"source": 19,
											"value": "634"
										},
										{
											"begin": 17353,
											"end": 17416,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17343,
											"end": 17416,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17343,
											"end": 17416,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17299,
											"end": 17426,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17084,
											"end": 17433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17541,
											"end": 17552,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17581,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17563,
											"end": 17581,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17563,
											"end": 17581,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17439,
											"end": 17587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17699,
											"end": 17702,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 17760,
											"end": 17765,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17727,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 17727,
											"end": 17766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17727,
											"end": 17766,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 17727,
											"end": 17766,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17782,
											"end": 17871,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 17864,
											"end": 17870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17859,
											"end": 17862,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17782,
											"end": 17871,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 17782,
											"end": 17871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17782,
											"end": 17871,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 17782,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17775,
											"end": 17871,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 17775,
											"end": 17871,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17880,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 17938,
											"end": 17944,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17933,
											"end": 17936,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 17926,
											"end": 17930,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17919,
											"end": 17924,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 17915,
											"end": 17931,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17880,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 17880,
											"end": 17945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17880,
											"end": 17945,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 17880,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17970,
											"end": 17976,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17965,
											"end": 17968,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17961,
											"end": 17977,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17954,
											"end": 17977,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17954,
											"end": 17977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17703,
											"end": 17983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18169,
											"end": 18172,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18191,
											"end": 18286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 18282,
											"end": 18285,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18273,
											"end": 18279,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18191,
											"end": 18286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 18191,
											"end": 18286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18191,
											"end": 18286,
											"name": "tag",
											"source": 19,
											"value": "641"
										},
										{
											"begin": 18191,
											"end": 18286,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18184,
											"end": 18286,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18184,
											"end": 18286,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18303,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 18394,
											"end": 18397,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18385,
											"end": 18391,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18303,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 18303,
											"end": 18398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18303,
											"end": 18398,
											"name": "tag",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 18303,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18296,
											"end": 18398,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18296,
											"end": 18398,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18415,
											"end": 18418,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18408,
											"end": 18418,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18408,
											"end": 18418,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18430,
											"end": 18571,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 18430,
											"end": 18571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18479,
											"end": 18483,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18502,
											"end": 18505,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18494,
											"end": 18505,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18494,
											"end": 18505,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18525,
											"end": 18528,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18523,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18515,
											"end": 18529,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18559,
											"end": 18563,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18556,
											"end": 18557,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18546,
											"end": 18564,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 18538,
											"end": 18564,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18538,
											"end": 18564,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18430,
											"end": 18571,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18430,
											"end": 18571,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18430,
											"end": 18571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18430,
											"end": 18571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18577,
											"end": 18670,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 18577,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18614,
											"end": 18620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18663,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18656,
											"end": 18658,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 18649,
											"end": 18654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18645,
											"end": 18659,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18641,
											"end": 18664,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18664,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18631,
											"end": 18664,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18577,
											"end": 18670,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18577,
											"end": 18670,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18577,
											"end": 18670,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18577,
											"end": 18670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18720,
											"end": 18728,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18770,
											"end": 18775,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18764,
											"end": 18768,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18760,
											"end": 18776,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 18739,
											"end": 18776,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18739,
											"end": 18776,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18676,
											"end": 18783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18858,
											"end": 18864,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18908,
											"end": 18909,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 18896,
											"end": 18906,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18892,
											"end": 18910,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 18931,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 18961,
											"end": 19027,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18950,
											"end": 18959,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18931,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 18931,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18931,
											"end": 19028,
											"name": "tag",
											"source": 19,
											"value": "647"
										},
										{
											"begin": 18931,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19049,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 19079,
											"end": 19087,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19068,
											"end": 19077,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19049,
											"end": 19088,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 19049,
											"end": 19088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19049,
											"end": 19088,
											"name": "tag",
											"source": 19,
											"value": "648"
										},
										{
											"begin": 19049,
											"end": 19088,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19037,
											"end": 19088,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 19037,
											"end": 19088,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19121,
											"end": 19125,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19117,
											"end": 19126,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 19110,
											"end": 19115,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19106,
											"end": 19127,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19127,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 19097,
											"end": 19127,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19170,
											"end": 19174,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19160,
											"end": 19168,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 19156,
											"end": 19175,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19149,
											"end": 19154,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19146,
											"end": 19176,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 19136,
											"end": 19176,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19136,
											"end": 19176,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18865,
											"end": 19182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18865,
											"end": 19182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18789,
											"end": 19182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19188,
											"end": 19248,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 19188,
											"end": 19248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19216,
											"end": 19219,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19237,
											"end": 19242,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19188,
											"end": 19248,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19188,
											"end": 19248,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19188,
											"end": 19248,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19188,
											"end": 19248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19254,
											"end": 19396,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 19254,
											"end": 19396,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19304,
											"end": 19313,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19337,
											"end": 19390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 19355,
											"end": 19389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 19364,
											"end": 19388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 19382,
											"end": 19387,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19364,
											"end": 19388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 19364,
											"end": 19388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19364,
											"end": 19388,
											"name": "tag",
											"source": 19,
											"value": "653"
										},
										{
											"begin": 19364,
											"end": 19388,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19355,
											"end": 19389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 19355,
											"end": 19389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19355,
											"end": 19389,
											"name": "tag",
											"source": 19,
											"value": "652"
										},
										{
											"begin": 19355,
											"end": 19389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19337,
											"end": 19390,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 19337,
											"end": 19390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19337,
											"end": 19390,
											"name": "tag",
											"source": 19,
											"value": "651"
										},
										{
											"begin": 19337,
											"end": 19390,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19324,
											"end": 19390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19324,
											"end": 19390,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19254,
											"end": 19396,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19254,
											"end": 19396,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19254,
											"end": 19396,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19254,
											"end": 19396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19402,
											"end": 19477,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 19402,
											"end": 19477,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19445,
											"end": 19448,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19466,
											"end": 19471,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19459,
											"end": 19471,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19459,
											"end": 19471,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19402,
											"end": 19477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19402,
											"end": 19477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19402,
											"end": 19477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19402,
											"end": 19477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19483,
											"end": 19752,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 19483,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19593,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 19624,
											"end": 19631,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19593,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 19593,
											"end": 19632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19593,
											"end": 19632,
											"name": "tag",
											"source": 19,
											"value": "656"
										},
										{
											"begin": 19593,
											"end": 19632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19654,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "657"
										},
										{
											"begin": 19703,
											"end": 19744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 19727,
											"end": 19743,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19703,
											"end": 19744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 19703,
											"end": 19744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19703,
											"end": 19744,
											"name": "tag",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 19703,
											"end": 19744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19695,
											"end": 19701,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19688,
											"end": 19692,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19682,
											"end": 19693,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 19654,
											"end": 19745,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 19654,
											"end": 19745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19654,
											"end": 19745,
											"name": "tag",
											"source": 19,
											"value": "657"
										},
										{
											"begin": 19654,
											"end": 19745,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19648,
											"end": 19652,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19641,
											"end": 19746,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 19559,
											"end": 19752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19483,
											"end": 19752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19483,
											"end": 19752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19483,
											"end": 19752,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19483,
											"end": 19752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19758,
											"end": 19831,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 19758,
											"end": 19831,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19803,
											"end": 19806,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19758,
											"end": 19831,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19758,
											"end": 19831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19837,
											"end": 20026,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 19837,
											"end": 20026,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19914,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 19914,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 19914,
											"end": 19946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19914,
											"end": 19946,
											"name": "tag",
											"source": 19,
											"value": "661"
										},
										{
											"begin": 19914,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19955,
											"end": 20020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 20013,
											"end": 20019,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20005,
											"end": 20011,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19999,
											"end": 20003,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19955,
											"end": 20020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 19955,
											"end": 20020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19955,
											"end": 20020,
											"name": "tag",
											"source": 19,
											"value": "662"
										},
										{
											"begin": 19955,
											"end": 20020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19890,
											"end": 20026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19837,
											"end": 20026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19837,
											"end": 20026,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19837,
											"end": 20026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20032,
											"end": 20218,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 20032,
											"end": 20218,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "tag",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20109,
											"end": 20112,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20102,
											"end": 20107,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20099,
											"end": 20113,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20163,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 20200,
											"end": 20201,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20193,
											"end": 20198,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20163,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 20163,
											"end": 20202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20163,
											"end": 20202,
											"name": "tag",
											"source": 19,
											"value": "667"
										},
										{
											"begin": 20163,
											"end": 20202,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20136,
											"end": 20137,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 20129,
											"end": 20134,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20116,
											"end": 20138,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20116,
											"end": 20138,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "664"
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "tag",
											"source": 19,
											"value": "666"
										},
										{
											"begin": 20092,
											"end": 20212,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20032,
											"end": 20218,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20032,
											"end": 20218,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20032,
											"end": 20218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20224,
											"end": 20767,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 20224,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20325,
											"end": 20327,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 20320,
											"end": 20323,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20317,
											"end": 20328,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 20314,
											"end": 20760,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20314,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 20314,
											"end": 20760,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20359,
											"end": 20397,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 20391,
											"end": 20396,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20359,
											"end": 20397,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 20359,
											"end": 20397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20359,
											"end": 20397,
											"name": "tag",
											"source": 19,
											"value": "670"
										},
										{
											"begin": 20359,
											"end": 20397,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20443,
											"end": 20472,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 20461,
											"end": 20471,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20443,
											"end": 20472,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 20443,
											"end": 20472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20443,
											"end": 20472,
											"name": "tag",
											"source": 19,
											"value": "671"
										},
										{
											"begin": 20443,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20433,
											"end": 20441,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20429,
											"end": 20473,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20626,
											"end": 20628,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20614,
											"end": 20624,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20611,
											"end": 20629,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 20657,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 20657,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 20608,
											"end": 20657,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20647,
											"end": 20655,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20608,
											"end": 20657,
											"name": "tag",
											"source": 19,
											"value": "672"
										},
										{
											"begin": 20608,
											"end": 20657,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20670,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 20726,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 20744,
											"end": 20747,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 20726,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 20726,
											"end": 20748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20726,
											"end": 20748,
											"name": "tag",
											"source": 19,
											"value": "674"
										},
										{
											"begin": 20726,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20716,
											"end": 20724,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20712,
											"end": 20749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20699,
											"end": 20710,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20670,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 20670,
											"end": 20750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20670,
											"end": 20750,
											"name": "tag",
											"source": 19,
											"value": "673"
										},
										{
											"begin": 20670,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20329,
											"end": 20760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20329,
											"end": 20760,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20314,
											"end": 20760,
											"name": "tag",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 20314,
											"end": 20760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20224,
											"end": 20767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20224,
											"end": 20767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20224,
											"end": 20767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20224,
											"end": 20767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20827,
											"end": 20835,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20877,
											"end": 20882,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20871,
											"end": 20875,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20867,
											"end": 20883,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 20846,
											"end": 20883,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20846,
											"end": 20883,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20773,
											"end": 20890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20940,
											"end": 20946,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20973,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 21021,
											"end": 21022,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21017,
											"end": 21023,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 21009,
											"end": 21014,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21006,
											"end": 21007,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 21002,
											"end": 21015,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 20973,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 20973,
											"end": 21024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20973,
											"end": 21024,
											"name": "tag",
											"source": 19,
											"value": "677"
										},
										{
											"begin": 20973,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20969,
											"end": 21025,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 21054,
											"end": 21058,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21048,
											"end": 21052,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21044,
											"end": 21059,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21034,
											"end": 21059,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21034,
											"end": 21059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20947,
											"end": 21065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20896,
											"end": 21065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21146,
											"end": 21150,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21292,
											"end": 21321,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 21317,
											"end": 21320,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21311,
											"end": 21315,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21292,
											"end": 21321,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 21292,
											"end": 21321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21292,
											"end": 21321,
											"name": "tag",
											"source": 19,
											"value": "679"
										},
										{
											"begin": 21292,
											"end": 21321,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21321,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21321,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21354,
											"end": 21357,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21351,
											"end": 21352,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 21347,
											"end": 21358,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 21341,
											"end": 21345,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21338,
											"end": 21359,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 21330,
											"end": 21359,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21330,
											"end": 21359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21070,
											"end": 21365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21370,
											"end": 22765,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 21370,
											"end": 22765,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 21520,
											"end": 21523,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 21487,
											"end": 21524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "tag",
											"source": 19,
											"value": "681"
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21589,
											"end": 21607,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21581,
											"end": 21587,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21578,
											"end": 21608,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 21575,
											"end": 21631,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21575,
											"end": 21631,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 21575,
											"end": 21631,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21611,
											"end": 21629,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 21611,
											"end": 21629,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 21611,
											"end": 21629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21611,
											"end": 21629,
											"name": "tag",
											"source": 19,
											"value": "683"
										},
										{
											"begin": 21611,
											"end": 21629,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21575,
											"end": 21631,
											"name": "tag",
											"source": 19,
											"value": "682"
										},
										{
											"begin": 21575,
											"end": 21631,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21655,
											"end": 21693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 21687,
											"end": 21691,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21681,
											"end": 21692,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 21655,
											"end": 21693,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 21655,
											"end": 21693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21655,
											"end": 21693,
											"name": "tag",
											"source": 19,
											"value": "684"
										},
										{
											"begin": 21655,
											"end": 21693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21740,
											"end": 21807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "685"
										},
										{
											"begin": 21800,
											"end": 21806,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21792,
											"end": 21798,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21786,
											"end": 21790,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 21740,
											"end": 21807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 21740,
											"end": 21807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21740,
											"end": 21807,
											"name": "tag",
											"source": 19,
											"value": "685"
										},
										{
											"begin": 21740,
											"end": 21807,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21834,
											"end": 21835,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21858,
											"end": 21862,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 21862,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21845,
											"end": 21862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21890,
											"end": 21892,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 21882,
											"end": 21888,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21879,
											"end": 21893,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 21907,
											"end": 21908,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22564,
											"end": 22565,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22581,
											"end": 22587,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22578,
											"end": 22655,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22578,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 22578,
											"end": 22655,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22630,
											"end": 22639,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22625,
											"end": 22628,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 22621,
											"end": 22640,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22615,
											"end": 22641,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22606,
											"end": 22641,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22606,
											"end": 22641,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22578,
											"end": 22655,
											"name": "tag",
											"source": 19,
											"value": "688"
										},
										{
											"begin": 22578,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22681,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "689"
										},
										{
											"begin": 22741,
											"end": 22747,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22734,
											"end": 22739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22681,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 22681,
											"end": 22748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22681,
											"end": 22748,
											"name": "tag",
											"source": 19,
											"value": "689"
										},
										{
											"begin": 22681,
											"end": 22748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22675,
											"end": 22679,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 22668,
											"end": 22749,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 22537,
											"end": 22759,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21872,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 21872,
											"end": 22759,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "tag",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 21902,
											"end": 22520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21954,
											"end": 21958,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 21950,
											"end": 21959,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 21942,
											"end": 21948,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21938,
											"end": 21960,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21988,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 22020,
											"end": 22024,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21988,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 21988,
											"end": 22025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21988,
											"end": 22025,
											"name": "tag",
											"source": 19,
											"value": "690"
										},
										{
											"begin": 21988,
											"end": 22025,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22047,
											"end": 22048,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "tag",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22075,
											"end": 22082,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22072,
											"end": 22073,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22069,
											"end": 22083,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "693"
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22154,
											"end": 22163,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22152,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 22145,
											"end": 22164,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22139,
											"end": 22165,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22131,
											"end": 22137,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22124,
											"end": 22166,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 22205,
											"end": 22206,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 22197,
											"end": 22203,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22193,
											"end": 22207,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22183,
											"end": 22207,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22183,
											"end": 22207,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22252,
											"end": 22254,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22241,
											"end": 22250,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22237,
											"end": 22255,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22224,
											"end": 22255,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 22224,
											"end": 22255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22098,
											"end": 22102,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22095,
											"end": 22096,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22091,
											"end": 22103,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22086,
											"end": 22103,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22086,
											"end": 22103,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "691"
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "tag",
											"source": 19,
											"value": "693"
										},
										{
											"begin": 22061,
											"end": 22269,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22297,
											"end": 22303,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 22288,
											"end": 22295,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22285,
											"end": 22304,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 22282,
											"end": 22461,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22282,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 22282,
											"end": 22461,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22355,
											"end": 22364,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22350,
											"end": 22353,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 22346,
											"end": 22365,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22340,
											"end": 22366,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22398,
											"end": 22446,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "695"
										},
										{
											"begin": 22440,
											"end": 22444,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 22432,
											"end": 22438,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 22428,
											"end": 22445,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 22417,
											"end": 22426,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22398,
											"end": 22446,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 22398,
											"end": 22446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22398,
											"end": 22446,
											"name": "tag",
											"source": 19,
											"value": "695"
										},
										{
											"begin": 22398,
											"end": 22446,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22390,
											"end": 22396,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22383,
											"end": 22447,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 22305,
											"end": 22461,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22282,
											"end": 22461,
											"name": "tag",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 22282,
											"end": 22461,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22507,
											"end": 22508,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 22503,
											"end": 22504,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 22495,
											"end": 22501,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 22491,
											"end": 22505,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 22487,
											"end": 22509,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22481,
											"end": 22485,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 22474,
											"end": 22510,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 21909,
											"end": 22520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21909,
											"end": 22520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21909,
											"end": 22520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21872,
											"end": 22759,
											"name": "tag",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 21872,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21872,
											"end": 22759,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21462,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21462,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21462,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21370,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21370,
											"end": 22765,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21370,
											"end": 22765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22771,
											"end": 22951,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 22771,
											"end": 22951,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22819,
											"end": 22896,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22816,
											"end": 22817,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22809,
											"end": 22897,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 22913,
											"end": 22914,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 22906,
											"end": 22921,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22940,
											"end": 22944,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22937,
											"end": 22938,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22930,
											"end": 22945,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23078,
											"end": 23082,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23116,
											"end": 23118,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23105,
											"end": 23114,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23101,
											"end": 23119,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23093,
											"end": 23119,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23093,
											"end": 23119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23129,
											"end": 23200,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 23197,
											"end": 23198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23186,
											"end": 23195,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23182,
											"end": 23199,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23173,
											"end": 23179,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23129,
											"end": 23200,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 23129,
											"end": 23200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23129,
											"end": 23200,
											"name": "tag",
											"source": 19,
											"value": "698"
										},
										{
											"begin": 23129,
											"end": 23200,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23210,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 23278,
											"end": 23280,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23267,
											"end": 23276,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23263,
											"end": 23281,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23254,
											"end": 23260,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23210,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 23210,
											"end": 23282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23210,
											"end": 23282,
											"name": "tag",
											"source": 19,
											"value": "699"
										},
										{
											"begin": 23210,
											"end": 23282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 23289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"telefonica/centenario2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowedAddresses(uint256)": "64b55bed",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isAllowedToMint(address)": "4813d8a6",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAllowedToMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"telefonica/centenario2.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"telefonica/centenario2.sol\":{\"keccak256\":\"0x176305c60431a4012bb6dc9b23ce26177c03976b92f7b4853053526ea8533473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2733e69c5a5fe5050b9847b82dee0f17c9a4a117bd6327b744b68e5260e8039\",\"dweb:/ipfs/QmZysN7RNqCJZy13GayaEdonuz635pgxEfomf2edtbvGnX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 315,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 323,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 327,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 333,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1487,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 1644,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_owner",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3004,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3008,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "_hasMinted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3012,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "isAllowedToMint",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3015,
								"contract": "telefonica/centenario2.sol:MyToken",
								"label": "allowedAddresses",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1635
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1636,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1635
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2017
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 2018,
							"src": "116:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "91:70:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2017
						],
						"IERC4906": [
							139
						],
						"IERC721": [
							1406
						]
					},
					"id": 140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 140,
							"sourceUnit": 116,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2017,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 140,
							"sourceUnit": 144,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1406,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 123,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2017,
										"src": "279:7:2"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 125,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1406,
										"src": "288:7:2"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 139,
							"linearizedBaseContracts": [
								139,
								1406,
								2017
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 131,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 138,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 140,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								131,
								138,
								1305,
								1314,
								1323
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1406
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 144,
							"sourceUnit": 1407,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 142,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1406,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							280
						],
						"IERC20Errors": [
							185
						],
						"IERC721Errors": [
							233
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 146,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 155,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 160,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 165,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 174,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 179,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 184,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 281,
							"src": "278:1764:4",
							"usedErrors": [
								155,
								160,
								165,
								174,
								179,
								184
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 191,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 196,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 205,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 210,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 215,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 222,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 227,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 232,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 281,
							"src": "2186:2092:4",
							"usedErrors": [
								191,
								196,
								205,
								210,
								215,
								222,
								227,
								232
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 234,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 245,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 250,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 255,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 262,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 267,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 272,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 279,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 281,
							"src": "4424:2107:4",
							"usedErrors": [
								245,
								250,
								255,
								262,
								267,
								272,
								279
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1635
						],
						"ERC165": [
							2005
						],
						"ERC721": [
							1289
						],
						"IERC165": [
							2017
						],
						"IERC721": [
							1406
						],
						"IERC721Errors": [
							233
						],
						"IERC721Metadata": [
							1613
						],
						"IERC721Receiver": [
							1424
						],
						"Strings": [
							1981
						]
					},
					"id": 1290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1407,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1406,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1425,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 285,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1424,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1614,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1613,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1636,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1635,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 1982,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1981,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 2006,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2017,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 294,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2005,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 281,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 296,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 233,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 299,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "804:7:5"
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 301,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2005,
										"src": "813:6:5"
									},
									"id": 302,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 303,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1406,
										"src": "821:7:5"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 305,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1613,
										"src": "830:15:5"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "847:13:5"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1289,
							"linearizedBaseContracts": [
								1289,
								233,
								1613,
								1406,
								2005,
								2017,
								1635
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 311,
									"libraryName": {
										"id": 309,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 310,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 312,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 314,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 318,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 316,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 317,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 322,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 320,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 326,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 324,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 332,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 328,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 331,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 329,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 330,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 350,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1289,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2004,
										2016
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 361,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 363,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1406_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1406_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 362,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1406",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 369,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1613_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1613_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 368,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1613",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 376,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 374,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1289_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2004,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 360,
												"id": 379,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 357,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 355,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2005,
												"src": "1637:6:5"
											},
											{
												"id": 356,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2017,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 352,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1289,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1331
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 389,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 390,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 396,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 395,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 404,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 406,
													"indexExpression": {
														"id": 405,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 388,
												"id": 407,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1289,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 416,
												"id": 420,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1289,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 428,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1289,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1604
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1289,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 448,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 452,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 454,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 459,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 457,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 467,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 468,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1811,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 464,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 447,
												"id": 474,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1289,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1289,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1379
									],
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 496,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 493,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1092,
															1158
														],
														"referencedDeclaration": 1092,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1289,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1395
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 508,
												"id": 516,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1289,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 527,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 526,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1289,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 544,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 546,
														"indexExpression": {
															"id": 545,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 548,
													"indexExpression": {
														"id": 547,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 543,
												"id": 549,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1289,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1371
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 561,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 562,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 568,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 567,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 573,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"arguments": [
														{
															"id": 579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 581,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 578,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 586,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 590,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 591,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1289,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1361
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 607,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															615,
															641
														],
														"referencedDeclaration": 641,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1289,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1351
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 637,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 633,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1289,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 649,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 651,
													"indexExpression": {
														"id": 650,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 648,
												"id": 652,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1289,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 662,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 664,
													"indexExpression": {
														"id": 663,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 661,
												"id": 665,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1289,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 679,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 685,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 670,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 686,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 689,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 690,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 688,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 694,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 693,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 696,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 699,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 678,
												"id": 701,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1289,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 714,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 715,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 716,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 713,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 719,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 731,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 732,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 710,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 730,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 734,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 729,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 726,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 710,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 725,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 728,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1289,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 754,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 748,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"id": 749,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 751,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 744,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1289,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 768,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [
														{
															"id": 771,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 775,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 782,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 783,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 780,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 799,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 800,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 794,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1092,
																		1158
																	],
																	"referencedDeclaration": 1158,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 806,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 813,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 807,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 323,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 809,
																			"indexExpression": {
																				"id": 808,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 769,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 812,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 817,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 828,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 822,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 323,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 824,
																			"indexExpression": {
																				"id": 823,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 831,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 833,
														"indexExpression": {
															"id": 832,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 834,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 838,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 837,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 843,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 767,
												"id": 844,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1289,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 854,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 861,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 860,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"id": 872,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 871,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 880,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 887,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 892,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1289,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 904,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															911,
															937
														],
														"referencedDeclaration": 937,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1289,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 933,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 926,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1289,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 943,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 946,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 945,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 964,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 963,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 966,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1289,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 995,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"arguments": [
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1007,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1027,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1026,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1021,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1022,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1023,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1020,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1025,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1013,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1012,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1015,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1289,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1040,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1048,
															1074
														],
														"referencedDeclaration": 1074,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1289,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1070,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1066,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1289,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1087,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1084,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1092,
															1158
														],
														"referencedDeclaration": 1158,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1289,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1105,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1106,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1113
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1113,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1149,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1115,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1114,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1118,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1119,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1124,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1125,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1129,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1130,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1128,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1139,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1138,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1135,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1134,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1137,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1140,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1148,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1147,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1142,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1143,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1144,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1141,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1314,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1146,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1151,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1153,
														"indexExpression": {
															"id": 1152,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1154,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1289,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1169,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1178,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1175,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1174,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1177,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1180,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1183,
															"indexExpression": {
																"id": 1181,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1182,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1189,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1188,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1289,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1203,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"arguments": [
														{
															"id": 1206,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1205,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1210,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1216,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1215,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1218,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1221,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1204,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1222,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1289,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1236,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1265,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1254,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1255,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1424,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1424_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1423,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1264,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1263,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1260,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1229,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1259,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 215,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1261,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1262,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1266,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1253,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1252,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1266,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1251,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1282,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1270,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1268,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1280,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1268,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1268,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1279,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1281,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1278,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1275,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1229,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1274,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 215,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1276,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1277,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1283,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1269,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1268,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1283,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1267,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1249,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1242,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1241,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1424_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1424",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1423,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1284,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1289,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1290,
							"src": "776:16926:5",
							"usedErrors": [
								191,
								196,
								205,
								210,
								215,
								222,
								227,
								232
							],
							"usedEvents": [
								1305,
								1314,
								1323
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2017
						],
						"IERC721": [
							1406
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1291,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 2018,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1292,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2017,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1295,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2017,
										"src": "287:7:6"
									},
									"id": 1296,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1294,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406,
								2017
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1305,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1314,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1323,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1406,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1406,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1406,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1406,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1406,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1406,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1406,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1406,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1406,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1305,
								1314,
								1323
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1424
						]
					},
					"id": 1425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1424,
							"linearizedBaseContracts": [
								1424
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "859:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "885:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "907:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "932:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "976:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:7"
									},
									"scope": 1424,
									"src": "824:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1425,
							"src": "294:692:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
					"exportedSymbols": {
						"ERC721": [
							1289
						],
						"ERC721Pausable": [
							1459
						],
						"Pausable": [
							1752
						]
					},
					"id": 1460,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1460,
							"sourceUnit": 1290,
							"src": "152:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1427,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1289,
										"src": "160:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1460,
							"sourceUnit": 1753,
							"src": "190:53:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1429,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1752,
										"src": "198:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1432,
										"name": "ERC721",
										"nameLocations": [
											"970:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1289,
										"src": "970:6:8"
									},
									"id": 1433,
									"nodeType": "InheritanceSpecifier",
									"src": "970:6:8"
								},
								{
									"baseName": {
										"id": 1434,
										"name": "Pausable",
										"nameLocations": [
											"978:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "978:8:8"
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "978:8:8"
								}
							],
							"canonicalName": "ERC721Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1431,
								"nodeType": "StructuredDocumentation",
								"src": "245:688:8",
								"text": " @dev ERC721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1459,
							"linearizedBaseContracts": [
								1459,
								1752,
								1289,
								233,
								1613,
								1406,
								2005,
								2017,
								1635
							],
							"name": "ERC721Pausable",
							"nameLocation": "952:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										846
									],
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1268:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "1299:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "1303:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1454,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1312:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1450,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1285:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$1459_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1291:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "1285:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1449,
												"id": 1456,
												"nodeType": "Return",
												"src": "1278:39:8"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "993:122:8",
										"text": " @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "whenNotPaused",
												"nameLocations": [
													"1236:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1677,
												"src": "1236:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1236:13:8"
										}
									],
									"name": "_update",
									"nameLocation": "1129:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1444,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1227:8:8"
									},
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1154:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1146:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1174:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1166:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "1199:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1191:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:73:8"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1259:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:9:8"
									},
									"scope": 1459,
									"src": "1120:204:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1460,
							"src": "934:392:8",
							"usedErrors": [
								191,
								196,
								205,
								210,
								215,
								222,
								227,
								232,
								1657,
								1660
							],
							"usedEvents": [
								1305,
								1314,
								1323,
								1649,
								1654
							]
						}
					],
					"src": "126:1201:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1289
						],
						"ERC721URIStorage": [
							1585
						],
						"IERC165": [
							2017
						],
						"IERC4906": [
							139
						],
						"Strings": [
							1981
						]
					},
					"id": 1586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1461,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 1290,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1462,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1289,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 1982,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1464,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1981,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 140,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1466,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 139,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 116,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1468,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2017,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1471,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 139,
										"src": "469:8:9"
									},
									"id": 1472,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1473,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1289,
										"src": "479:6:9"
									},
									"id": 1474,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1470,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1585,
							"linearizedBaseContracts": [
								1585,
								1289,
								233,
								1613,
								139,
								1406,
								2005,
								2017,
								1635
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1477,
									"libraryName": {
										"id": 1475,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1483,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1585,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1478,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1481,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1480,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1479,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1487,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1585,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1486,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1484,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1485,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										381,
										2016
									],
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1498,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1499,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1503,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1501,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1585_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 381,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1506,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1494,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1492,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1289,
												"src": "1013:6:9"
											},
											{
												"id": 1493,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2017,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1585,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										476
									],
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1517,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1564,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1521,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"baseExpression": {
														"id": 1523,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1525,
													"indexExpression": {
														"id": 1524,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1564,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1527,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1529,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1534,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1532,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1516,
															"id": 1540,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1545,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1543,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1558,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1557,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1553,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1554,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1550,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1516,
															"id": 1556,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1561,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1559,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1585_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1563,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1585,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1573,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1575,
														"indexExpression": {
															"id": 1574,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1576,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1580,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1579,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1585,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1586,
							"src": "431:1660:9",
							"usedErrors": [
								191,
								196,
								205,
								210,
								215,
								222,
								227,
								232
							],
							"usedEvents": [
								131,
								138,
								1305,
								1314,
								1323
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1406
						],
						"IERC721Metadata": [
							1613
						]
					},
					"id": 1614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1589,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1614,
							"sourceUnit": 1407,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1588,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1406,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1591,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1406,
										"src": "357:7:10"
									},
									"id": 1592,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1590,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613,
								1406,
								2017
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1613,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1613,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1609,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1613,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1614,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1305,
								1314,
								1323
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1635
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1616,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1635,
							"linearizedBaseContracts": [
								1635
							],
							"name": "Context",
							"nameLocation": "626:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "702:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1621,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1623,
												"nodeType": "Return",
												"src": "712:17:11"
											}
										]
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:11"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "693:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:11"
									},
									"scope": 1635,
									"src": "640:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "809:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1630,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1632,
												"nodeType": "Return",
												"src": "819:15:11"
											}
										]
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:11"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "793:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:11"
									},
									"scope": 1635,
									"src": "742:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1636,
							"src": "608:235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1635
						],
						"Pausable": [
							1752
						]
					},
					"id": 1753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1637,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1753,
							"sourceUnit": 1636,
							"src": "128:45:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1638,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1635,
										"src": "136:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1641,
										"name": "Context",
										"nameLocations": [
											"645:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "645:7:12"
									},
									"id": 1642,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:12"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:12",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752,
								1635
							],
							"name": "Pausable",
							"nameLocation": "633:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1644,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 1752,
									"src": "659:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1643,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:12",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1649,
									"name": "Paused",
									"nameLocation": "770:6:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "777:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:12"
									},
									"src": "764:30:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:12",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1654,
									"name": "Unpaused",
									"nameLocation": "881:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "890:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:12"
									},
									"src": "875:32:12"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:12",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1657,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:12"
									},
									"src": "994:22:12"
								},
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:12",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1660,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:12"
									},
									"src": "1107:22:12"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1221:32:12",
										"statements": [
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1664,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "1231:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:12"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:12",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1669,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:12"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:12"
									},
									"scope": 1752,
									"src": "1207:46:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "1464:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1672,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "1474:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:12"
											},
											{
												"id": 1675,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:12"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:12",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1677,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:12"
									},
									"src": "1439:72:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "1711:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1680,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "1721:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:12"
											},
											{
												"id": 1683,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:12"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:12",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1685,
									"name": "whenPaused",
									"nameLocation": "1698:10:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:12"
									},
									"src": "1689:66:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "1903:31:12",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "1920:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1692,
												"nodeType": "Return",
												"src": "1913:14:12"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:12",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1897:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:12"
									},
									"scope": 1752,
									"src": "1850:84:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "2053:77:12",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1698,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "2067:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "2063:61:12",
												"trueBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "2077:47:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1700,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "2098:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1702,
															"nodeType": "RevertStatement",
															"src": "2091:22:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:12",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:12"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:12"
									},
									"scope": 1752,
									"src": "2002:128:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "2250:78:12",
										"statements": [
											{
												"condition": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:12",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1710,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "2265:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1717,
												"nodeType": "IfStatement",
												"src": "2260:62:12",
												"trueBody": {
													"id": 1716,
													"nodeType": "Block",
													"src": "2275:47:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1713,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "2296:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1715,
															"nodeType": "RevertStatement",
															"src": "2289:22:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:12",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:12"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:12"
									},
									"scope": 1752,
									"src": "2202:126:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "2512:66:12",
										"statements": [
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "2522:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1730,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2558:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1729,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "2551:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "EmitStatement",
												"src": "2546:25:12"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:12",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1723,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1722,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1677,
												"src": "2498:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:12"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:12"
									},
									"scope": 1752,
									"src": "2463:115:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "2758:69:12",
										"statements": [
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1741,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "2768:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2807:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1745,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "2798:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "EmitStatement",
												"src": "2793:27:12"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:12",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1738,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1685,
												"src": "2747:10:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:12"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:12"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:12"
									},
									"scope": 1752,
									"src": "2710:117:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1753,
							"src": "615:2214:12",
							"usedErrors": [
								1657,
								1660
							],
							"usedEvents": [
								1649,
								1654
							]
						}
					],
					"src": "102:2728:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2883
						],
						"SignedMath": [
							2988
						],
						"Strings": [
							1981
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1982,
							"sourceUnit": 2884,
							"src": "126:25:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1982,
							"sourceUnit": 2989,
							"src": "152:31:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1757,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1981,
							"linearizedBaseContracts": [
								1981
							],
							"name": "Strings",
							"nameLocation": "228:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1760,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 1981,
									"src": "242:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1758,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1759,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1763,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 1981,
									"src": "302:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1761,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "518:625:13",
										"statements": [
											{
												"id": 1809,
												"nodeType": "UncheckedBlock",
												"src": "528:609:13",
												"statements": [
													{
														"assignments": [
															1772
														],
														"declarations": [
															{
																"constant": false,
																"id": 1772,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1809,
																"src": "552:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1779,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1775,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "580:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1773,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2883,
																		"src": "569:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2883_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2720,
																	"src": "569:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:13"
													},
													{
														"assignments": [
															1781
														],
														"declarations": [
															{
																"constant": false,
																"id": 1781,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1809,
																"src": "604:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1780,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1786,
														"initialValue": {
															"arguments": [
																{
																	"id": 1784,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "638:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1782,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:13"
													},
													{
														"assignments": [
															1788
														],
														"declarations": [
															{
																"constant": false,
																"id": 1788,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1809,
																"src": "659:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1787,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1789,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:13"
													},
													{
														"AST": {
															"nativeSrc": "740:67:13",
															"nodeType": "YulBlock",
															"src": "740:67:13",
															"statements": [
																{
																	"nativeSrc": "758:35:13",
																	"nodeType": "YulAssignment",
																	"src": "758:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:13",
																						"nodeType": "YulLiteral",
																						"src": "781:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:13"
																				},
																				"nativeSrc": "777:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:13"
																		},
																		"nativeSrc": "765:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1781,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1772,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:13",
																"valueSize": 1
															}
														],
														"id": 1790,
														"nodeType": "InlineAssembly",
														"src": "731:76:13"
													},
													{
														"body": {
															"id": 1805,
															"nodeType": "Block",
															"src": "833:267:13",
															"statements": [
																{
																	"expression": {
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:13",
																		"subExpression": {
																			"id": 1792,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "851:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1794,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:13",
																		"nodeType": "YulBlock",
																		"src": "934:84:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:13",
																											"nodeType": "YulLiteral",
																											"src": "985:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:13"
																									},
																									"nativeSrc": "974:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:13"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:13",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:13"
																							},
																							"nativeSrc": "969:30:13",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:13"
																					},
																					"nativeSrc": "956:44:13",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:13"
																				},
																				"nativeSrc": "956:44:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1760,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1788,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1766,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1795,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:13"
																},
																{
																	"expression": {
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1796,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "1035:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1799,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1800,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "1068:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1804,
																	"nodeType": "IfStatement",
																	"src": "1064:21:13",
																	"trueBody": {
																		"id": 1803,
																		"nodeType": "Break",
																		"src": "1080:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1806,
														"nodeType": "WhileStatement",
														"src": "820:280:13"
													},
													{
														"expression": {
															"id": 1807,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "1120:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1770,
														"id": 1808,
														"nodeType": "Return",
														"src": "1113:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "465:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:13"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "503:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:13"
									},
									"scope": 1981,
									"src": "447:696:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "1313:103:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1823,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "1354:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:13",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1832,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1814,
																					"src": "1400:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1830,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "1385:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2988_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:13",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2987,
																				"src": "1385:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1829,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1811,
																			1839
																		],
																		"referencedDeclaration": 1811,
																		"src": "1376:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1821,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1819,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1837,
												"nodeType": "Return",
												"src": "1323:86:13"
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "1261:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1813,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:13"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "1298:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:13"
									},
									"scope": 1981,
									"src": "1243:173:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "1595:100:13",
										"statements": [
											{
												"id": 1857,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "1648:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1851,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1842,
																				"src": "1667:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1849,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "1655:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2883_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2843,
																			"src": "1655:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1847,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1859,
																	1935,
																	1955
																],
																"referencedDeclaration": 1935,
																"src": "1636:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1846,
														"id": 1856,
														"nodeType": "Return",
														"src": "1629:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1542:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:13"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1580:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:13"
									},
									"scope": 1981,
									"src": "1521:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "1908:347:13",
										"statements": [
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "1918:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1869,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1874,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "1954:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1871,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:13"
											},
											{
												"expression": {
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1880,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "1975:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1882,
														"indexExpression": {
															"hexValue": "30",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:13"
											},
											{
												"expression": {
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1886,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2000:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1888,
														"indexExpression": {
															"hexValue": "31",
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:13"
											},
											{
												"body": {
													"id": 1920,
													"nodeType": "Block",
													"src": "2070:83:13",
													"statements": [
														{
															"expression": {
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1906,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "2084:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"indexExpression": {
																		"id": 1907,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "2091:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1909,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2096:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1913,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1910,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1862,
																			"src": "2105:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1915,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:13"
														},
														{
															"expression": {
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1916,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "2131:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1919,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "2058:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1921,
												"initializationExpression": {
													"assignments": [
														1893
													],
													"declarations": [
														{
															"constant": false,
															"id": 1893,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1921,
															"src": "2030:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1892,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1899,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1895,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "2046:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:13",
														"subExpression": {
															"id": 1903,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "2067:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1905,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1923,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "2170:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1931,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2241:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1929,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1933,
												"nodeType": "Return",
												"src": "2227:21:13"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "1839:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "1854:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:13"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "1893:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:13"
									},
									"scope": 1981,
									"src": "1818:437:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "2480:76:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1948,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "2525:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1946,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1944,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1951,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "2533:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1943,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1859,
															1935,
															1955
														],
														"referencedDeclaration": 1935,
														"src": "2497:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1953,
												"nodeType": "Return",
												"src": "2490:59:13"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2428:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:13"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2465:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1940,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:13"
									},
									"scope": 1981,
									"src": "2407:149:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "2711:66:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1968,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "2744:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1966,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1965,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1974,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "2767:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1972,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1971,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1978,
												"nodeType": "Return",
												"src": "2721:49:13"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "2648:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "2665:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:13"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "2705:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:13"
									},
									"scope": 1981,
									"src": "2633:144:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1982,
							"src": "220:2559:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2005
						],
						"IERC165": [
							2017
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1983,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 2018,
							"src": "124:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1986,
										"name": "IERC165",
										"nameLocations": [
											"754:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2017,
										"src": "754:7:14"
									},
									"id": 1987,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1985,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2005,
							"linearizedBaseContracts": [
								2005,
								2017
							],
							"name": "ERC165",
							"nameLocation": "744:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2016
									],
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "920:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1996,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "937:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1998,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "957:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2017_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2017_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1997,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2017",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2002,
												"nodeType": "Return",
												"src": "930:47:14"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1992,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:14"
									},
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "856:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1989,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:14"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "914:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:14"
									},
									"scope": 2005,
									"src": "829:155:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2006,
							"src": "726:260:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2017
						]
					},
					"id": 2018,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2008,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2017,
							"linearizedBaseContracts": [
								2017
							],
							"name": "IERC165",
							"nameLocation": "415:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "801:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2010,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:15"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "844:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:15"
									},
									"scope": 2017,
									"src": "774:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2018,
							"src": "405:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2883
						]
					},
					"id": 2884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2019,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2020,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2883,
							"linearizedBaseContracts": [
								2883
							],
							"name": "Math",
							"nameLocation": "210:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2024,
									"members": [
										{
											"id": 2021,
											"name": "Down",
											"nameLocation": "245:4:16",
											"nodeType": "EnumValue",
											"src": "245:4:16"
										},
										{
											"id": 2022,
											"name": "Up",
											"nameLocation": "287:2:16",
											"nodeType": "EnumValue",
											"src": "287:2:16"
										},
										{
											"id": 2023,
											"name": "Zero",
											"nameLocation": "318:4:16",
											"nodeType": "EnumValue",
											"src": "318:4:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:16",
									"nodeType": "EnumDefinition",
									"src": "221:122:16"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "480:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2034,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "497:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2035,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "501:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2038,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "509:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:16",
													"trueExpression": {
														"id": 2037,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "505:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2033,
												"id": 2040,
												"nodeType": "Return",
												"src": "490:20:16"
											}
										]
									},
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "426:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "437:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:16"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "471:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:16"
									},
									"scope": 2883,
									"src": "413:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "655:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2052,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "672:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2053,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "676:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2056,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "684:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:16",
													"trueExpression": {
														"id": 2055,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "680:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2051,
												"id": 2058,
												"nodeType": "Return",
												"src": "665:20:16"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "646:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:16"
									},
									"scope": 2883,
									"src": "588:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "876:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2070,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2071,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "935:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2073,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2074,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "941:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2075,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "945:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2077,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2069,
												"id": 2081,
												"nodeType": "Return",
												"src": "923:28:16"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "822:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "833:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:16"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "867:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:16"
									},
									"scope": 2883,
									"src": "805:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "1228:123:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2093,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "1316:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2097,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2086,
																			"src": "1330:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2088,
																"src": "1339:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2106,
												"nodeType": "Return",
												"src": "1309:35:16"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1174:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1185:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:16"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1219:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:16"
									},
									"scope": 2883,
									"src": "1157:194:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "1765:4115:16",
										"statements": [
											{
												"id": 2229,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:16",
												"statements": [
													{
														"assignments": [
															2121
														],
														"declarations": [
															{
																"constant": false,
																"id": 2121,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "2096:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2120,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2122,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:16"
													},
													{
														"assignments": [
															2124
														],
														"declarations": [
															{
																"constant": false,
																"id": 2124,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "2168:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2123,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2125,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:16"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:16",
															"nodeType": "YulBlock",
															"src": "2248:157:16",
															"statements": [
																{
																	"nativeSrc": "2266:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:16"
																				},
																				"nativeSrc": "2289:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:16"
																		},
																		"nativeSrc": "2276:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:16",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:16",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:16"
																		},
																		"nativeSrc": "2322:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:16",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:16"
																				},
																				"nativeSrc": "2361:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:16"
																				},
																				"nativeSrc": "2377:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:16"
																		},
																		"nativeSrc": "2357:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2111,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2111,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2113,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2113,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:16",
																"valueSize": 1
															}
														],
														"id": 2126,
														"nodeType": "InlineAssembly",
														"src": "2239:166:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2127,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2124,
																"src": "2486:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2135,
														"nodeType": "IfStatement",
														"src": "2482:368:16",
														"trueBody": {
															"id": 2134,
															"nodeType": "Block",
															"src": "2498:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2130,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "2816:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2131,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "2824:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2119,
																	"id": 2133,
																	"nodeType": "Return",
																	"src": "2809:26:16"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2137,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "2960:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2138,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "2974:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 2136,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2142,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:16"
													},
													{
														"assignments": [
															2144
														],
														"declarations": [
															{
																"constant": false,
																"id": 2144,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "3261:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2143,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2145,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:16"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:16",
															"nodeType": "YulBlock",
															"src": "3301:291:16",
															"statements": [
																{
																	"nativeSrc": "3370:38:16",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:16"
																		},
																		"nativeSrc": "3383:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:16",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:16"
																				},
																				"nativeSrc": "3510:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:16"
																		},
																		"nativeSrc": "3499:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:16",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:16"
																		},
																		"nativeSrc": "3557:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2124,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2111,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2113,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:16",
																"valueSize": 1
															}
														],
														"id": 2146,
														"nodeType": "InlineAssembly",
														"src": "3292:300:16"
													},
													{
														"assignments": [
															2148
														],
														"declarations": [
															{
																"constant": false,
																"id": 2148,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "3899:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2156,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2149,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "3914:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:16",
																			"subExpression": {
																				"id": 2150,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2115,
																				"src": "3930:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2154,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:16"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:16",
															"nodeType": "YulBlock",
															"src": "3969:362:16",
															"statements": [
																{
																	"nativeSrc": "4034:37:16",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:16"
																		},
																		"nativeSrc": "4049:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:16",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:16"
																		},
																		"nativeSrc": "4147:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:16",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:16"
																						},
																						"nativeSrc": "4294:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:16"
																				},
																				"nativeSrc": "4290:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:16"
																		},
																		"nativeSrc": "4286:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:16",
																"valueSize": 1
															}
														],
														"id": 2157,
														"nodeType": "InlineAssembly",
														"src": "3960:371:16"
													},
													{
														"expression": {
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2158,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "4397:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2159,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "4406:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2160,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "4414:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2163,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:16"
													},
													{
														"assignments": [
															2165
														],
														"declarations": [
															{
																"constant": false,
																"id": 2165,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2229,
																"src": "4736:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2164,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2172,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2167,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "4759:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:16"
													},
													{
														"expression": {
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2173,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "4992:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2175,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5007:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2176,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5021:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2180,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:16"
													},
													{
														"expression": {
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2181,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "5061:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5076:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2184,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5090:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2188,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:16"
													},
													{
														"expression": {
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2189,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "5131:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2191,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5146:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2192,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5160:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2196,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:16"
													},
													{
														"expression": {
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2197,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "5201:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2199,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5216:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2200,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5230:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2204,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:16"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "5271:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5286:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5300:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:16"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "5342:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "5357:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "5371:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:16"
													},
													{
														"expression": {
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "5812:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2222,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "5821:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2223,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "5829:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2226,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:16"
													},
													{
														"expression": {
															"id": 2227,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "5857:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2119,
														"id": 2228,
														"nodeType": "Return",
														"src": "5850:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1683:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1694:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1705:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:16"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1749:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:16"
									},
									"scope": 2883,
									"src": "1667:4213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "6122:189:16",
										"statements": [
											{
												"assignments": [
													2247
												],
												"declarations": [
													{
														"constant": false,
														"id": 2247,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "6132:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2253,
												"initialValue": {
													"arguments": [
														{
															"id": 2249,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "6156:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2250,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "6159:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2251,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "6162:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2248,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2231,
															2275
														],
														"referencedDeclaration": 2231,
														"src": "6149:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2024",
															"typeString": "enum Math.Rounding"
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2254,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "6188:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2024",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2255,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "6200:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2024_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:16",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2022,
															"src": "6200:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2024",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2259,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "6222:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2260,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "6225:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2261,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "6228:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2258,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2271,
												"nodeType": "IfStatement",
												"src": "6184:98:16",
												"trueBody": {
													"id": 2270,
													"nodeType": "Block",
													"src": "6246:36:16",
													"statements": [
														{
															"expression": {
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2266,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "6260:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2269,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2272,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2247,
													"src": "6298:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2273,
												"nodeType": "Return",
												"src": "6291:13:16"
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "6028:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "6039:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "6050:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "6071:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2024",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2239,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2024,
														"src": "6071:8:16"
													},
													"referencedDeclaration": 2024,
													"src": "6071:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2024",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:16"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "6113:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:16"
									},
									"scope": 2883,
									"src": "6012:299:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "6587:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2283,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "6601:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2289,
												"nodeType": "IfStatement",
												"src": "6597:45:16",
												"trueBody": {
													"id": 2288,
													"nodeType": "Block",
													"src": "6609:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2282,
															"id": 2287,
															"nodeType": "Return",
															"src": "6623:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2291
												],
												"declarations": [
													{
														"constant": false,
														"id": 2291,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2386,
														"src": "7321:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2300,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2294,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "7349:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2293,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2555,
																			2591
																		],
																		"referencedDeclaration": 2555,
																		"src": "7344:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2298,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:16"
											},
											{
												"id": 2385,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:16",
												"statements": [
													{
														"expression": {
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2301,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7782:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2302,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "7792:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2303,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "7801:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2304,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "7805:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2307,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2311,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:16"
													},
													{
														"expression": {
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2312,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7831:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2313,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "7841:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2314,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "7850:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2315,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "7854:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2322,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:16"
													},
													{
														"expression": {
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2323,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7880:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2324,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "7890:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2325,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "7899:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2326,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "7903:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2329,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2333,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:16"
													},
													{
														"expression": {
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2334,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7929:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2335,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "7939:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2336,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "7948:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2337,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "7952:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2340,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2344,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:16"
													},
													{
														"expression": {
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2345,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "7978:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2346,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "7988:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2347,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "7997:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2348,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "8001:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2351,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2355,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:16"
													},
													{
														"expression": {
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "8027:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2357,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "8037:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2358,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "8046:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2359,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "8050:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2362,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2366,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:16"
													},
													{
														"expression": {
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2367,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "8076:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2368,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "8086:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2369,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2278,
																					"src": "8095:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2370,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2291,
																					"src": "8099:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2373,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2377,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2379,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2291,
																	"src": "8136:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2380,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "8144:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2381,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2291,
																		"src": "8148:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2378,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "8132:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2282,
														"id": 2384,
														"nodeType": "Return",
														"src": "8125:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "6544:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:16"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "6578:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:16"
									},
									"scope": 2883,
									"src": "6530:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "8348:161:16",
										"statements": [
											{
												"id": 2421,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:16",
												"statements": [
													{
														"assignments": [
															2399
														],
														"declarations": [
															{
																"constant": false,
																"id": 2399,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2421,
																"src": "8382:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2398,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2403,
														"initialValue": {
															"arguments": [
																{
																	"id": 2401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "8404:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2400,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2387,
																	2423
																],
																"referencedDeclaration": 2387,
																"src": "8399:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2404,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "8427:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2024",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2405,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2393,
																					"src": "8437:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2406,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2024,
																						"src": "8449:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2024_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2022,
																					"src": "8449:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2409,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2399,
																						"src": "8464:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2410,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2399,
																						"src": "8473:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2412,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "8482:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2418,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2397,
														"id": 2420,
														"nodeType": "Return",
														"src": "8420:72:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "8286:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "8297:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2024",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2391,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2024,
														"src": "8297:8:16"
													},
													"referencedDeclaration": 2024,
													"src": "8297:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2024",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:16"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "8339:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:16"
									},
									"scope": 2883,
									"src": "8272:237:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2554,
										"nodeType": "Block",
										"src": "8694:922:16",
										"statements": [
											{
												"assignments": [
													2432
												],
												"declarations": [
													{
														"constant": false,
														"id": 2432,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2554,
														"src": "8704:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2434,
												"initialValue": {
													"hexValue": "30",
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:16"
											},
											{
												"id": 2551,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "8760:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2449,
														"nodeType": "IfStatement",
														"src": "8756:99:16",
														"trueBody": {
															"id": 2448,
															"nodeType": "Block",
															"src": "8778:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2440,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "8796:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2443,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:16"
																},
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2444,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "8827:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "8872:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2464,
														"nodeType": "IfStatement",
														"src": "8868:96:16",
														"trueBody": {
															"id": 2463,
															"nodeType": "Block",
															"src": "8889:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2455,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "8907:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2458,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:16"
																},
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "8937:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "8981:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "8977:96:16",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "8998:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "9016:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:16"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9046:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "9090:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "9086:96:16",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "9107:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "9125:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:16"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9155:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "9199:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "9195:93:16",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "9215:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "9233:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:16"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9262:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "9305:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "9301:93:16",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "9321:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "9339:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:16"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9368:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "9411:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "9407:93:16",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "9427:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "9445:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:16"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9474:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "9517:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "9513:64:16",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "9533:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "9551:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2552,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "9603:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2430,
												"id": 2553,
												"nodeType": "Return",
												"src": "9596:13:16"
											}
										]
									},
									"documentation": {
										"id": 2424,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:16",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "8647:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:16"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "8685:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:16"
									},
									"scope": 2883,
									"src": "8633:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "9849:165:16",
										"statements": [
											{
												"id": 2589,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:16",
												"statements": [
													{
														"assignments": [
															2567
														],
														"declarations": [
															{
																"constant": false,
																"id": 2567,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "9883:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2566,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2571,
														"initialValue": {
															"arguments": [
																{
																	"id": 2569,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "9905:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2568,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2555,
																	2591
																],
																"referencedDeclaration": 2555,
																"src": "9900:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2572,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "9932:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2024",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2573,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2561,
																					"src": "9942:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2574,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2024,
																						"src": "9954:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2024_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2022,
																					"src": "9954:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2578,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2567,
																						"src": "9974:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2580,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2558,
																					"src": "9983:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2565,
														"id": 2588,
														"nodeType": "Return",
														"src": "9925:72:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2556,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "9783:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "9798:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2024",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2560,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2559,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2024,
														"src": "9798:8:16"
													},
													"referencedDeclaration": 2024,
													"src": "9798:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2024",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:16"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "9840:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:16"
									},
									"scope": 2883,
									"src": "9769:245:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "10201:854:16",
										"statements": [
											{
												"assignments": [
													2600
												],
												"declarations": [
													{
														"constant": false,
														"id": 2600,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2719,
														"src": "10211:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2602,
												"initialValue": {
													"hexValue": "30",
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:16"
											},
											{
												"id": 2716,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10267:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2619,
														"nodeType": "IfStatement",
														"src": "10263:103:16",
														"trueBody": {
															"id": 2618,
															"nodeType": "Block",
															"src": "10286:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10304:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:16"
																},
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10339:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2620,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10383:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2636,
														"nodeType": "IfStatement",
														"src": "10379:103:16",
														"trueBody": {
															"id": 2635,
															"nodeType": "Block",
															"src": "10402:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10420:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:16"
																},
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10455:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2637,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10499:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2653,
														"nodeType": "IfStatement",
														"src": "10495:103:16",
														"trueBody": {
															"id": 2652,
															"nodeType": "Block",
															"src": "10518:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10536:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:16"
																},
																{
																	"expression": {
																		"id": 2650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2648,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10571:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2651,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10615:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "10611:100:16",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "10633:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10651:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:16"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10685:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2671,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10728:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2687,
														"nodeType": "IfStatement",
														"src": "10724:100:16",
														"trueBody": {
															"id": 2686,
															"nodeType": "Block",
															"src": "10746:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10764:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2681,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:16"
																},
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10798:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2688,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10841:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "10837:100:16",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "10859:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "10877:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:16"
																},
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10911:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2705,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "10954:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2715,
														"nodeType": "IfStatement",
														"src": "10950:66:16",
														"trueBody": {
															"id": 2714,
															"nodeType": "Block",
															"src": "10972:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "10990:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2717,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2600,
													"src": "11042:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2598,
												"id": 2718,
												"nodeType": "Return",
												"src": "11035:13:16"
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:16",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "10154:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:16"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "10192:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:16"
									},
									"scope": 2883,
									"src": "10139:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "11290:167:16",
										"statements": [
											{
												"id": 2754,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:16",
												"statements": [
													{
														"assignments": [
															2732
														],
														"declarations": [
															{
																"constant": false,
																"id": 2732,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2754,
																"src": "11324:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2731,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2736,
														"initialValue": {
															"arguments": [
																{
																	"id": 2734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2723,
																	"src": "11347:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2733,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2720,
																	2756
																],
																"referencedDeclaration": 2720,
																"src": "11341:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "11374:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2024",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2738,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2726,
																					"src": "11384:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2739,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2024,
																						"src": "11396:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2024_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2022,
																					"src": "11396:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2744,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2743,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2732,
																						"src": "11417:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2745,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "11426:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2751,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2730,
														"id": 2753,
														"nodeType": "Return",
														"src": "11367:73:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "11224:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "11239:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2024",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2724,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2024,
														"src": "11239:8:16"
													},
													"referencedDeclaration": 2024,
													"src": "11239:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2024",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:16"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "11281:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:16"
									},
									"scope": 2883,
									"src": "11209:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "11771:600:16",
										"statements": [
											{
												"assignments": [
													2765
												],
												"declarations": [
													{
														"constant": false,
														"id": 2765,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2842,
														"src": "11781:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2767,
												"initialValue": {
													"hexValue": "30",
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:16"
											},
											{
												"id": 2839,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "11837:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2782,
														"nodeType": "IfStatement",
														"src": "11833:98:16",
														"trueBody": {
															"id": 2781,
															"nodeType": "Block",
															"src": "11855:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "11873:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:16"
																},
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "11904:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "11948:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2797,
														"nodeType": "IfStatement",
														"src": "11944:95:16",
														"trueBody": {
															"id": 2796,
															"nodeType": "Block",
															"src": "11965:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "11983:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:16"
																},
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "12013:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "12056:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2812,
														"nodeType": "IfStatement",
														"src": "12052:95:16",
														"trueBody": {
															"id": 2811,
															"nodeType": "Block",
															"src": "12073:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "12091:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:16"
																},
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "12121:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "12164:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2827,
														"nodeType": "IfStatement",
														"src": "12160:95:16",
														"trueBody": {
															"id": 2826,
															"nodeType": "Block",
															"src": "12181:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "12199:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2821,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:16"
																},
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "12229:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "12272:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2838,
														"nodeType": "IfStatement",
														"src": "12268:64:16",
														"trueBody": {
															"id": 2837,
															"nodeType": "Block",
															"src": "12288:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2765,
																			"src": "12306:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2840,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2765,
													"src": "12358:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2763,
												"id": 2841,
												"nodeType": "Return",
												"src": "12351:13:16"
											}
										]
									},
									"documentation": {
										"id": 2757,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:16",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "11724:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:16"
									},
									"returnParameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "11762:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:16"
									},
									"scope": 2883,
									"src": "11708:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "12608:174:16",
										"statements": [
											{
												"id": 2880,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:16",
												"statements": [
													{
														"assignments": [
															2855
														],
														"declarations": [
															{
																"constant": false,
																"id": 2855,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2880,
																"src": "12642:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2854,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2859,
														"initialValue": {
															"arguments": [
																{
																	"id": 2857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "12666:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2856,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2843,
																	2882
																],
																"referencedDeclaration": 2843,
																"src": "12659:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2860,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2855,
																"src": "12693:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2024",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2861,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2849,
																					"src": "12703:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2862,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2024,
																						"src": "12715:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2024_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2022,
																					"src": "12715:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2024",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2870,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2868,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2866,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2855,
																									"src": "12736:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2867,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2869,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2871,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2846,
																					"src": "12751:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2853,
														"id": 2879,
														"nodeType": "Return",
														"src": "12686:79:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2844,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "12542:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "12557:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2024",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2847,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2024,
														"src": "12557:8:16"
													},
													"referencedDeclaration": 2024,
													"src": "12557:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2024",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:16"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "12599:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:16"
									},
									"scope": 2883,
									"src": "12526:256:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2884,
							"src": "202:12582:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2988
						]
					},
					"id": 2989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2886,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2988,
							"linearizedBaseContracts": [
								2988
							],
							"name": "SignedMath",
							"nameLocation": "223:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "375:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2896,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "392:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2897,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "396:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2900,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "404:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:17",
													"trueExpression": {
														"id": 2899,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2889,
														"src": "400:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2895,
												"id": 2902,
												"nodeType": "Return",
												"src": "385:20:17"
											}
										]
									},
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "324:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2888,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "334:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2890,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:17"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "367:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2893,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:17"
									},
									"scope": 2988,
									"src": "311:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2921,
										"nodeType": "Block",
										"src": "554:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2914,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "571:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2915,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2909,
															"src": "575:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2909,
														"src": "583:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:17",
													"trueExpression": {
														"id": 2917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2907,
														"src": "579:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2913,
												"id": 2920,
												"nodeType": "Return",
												"src": "564:20:17"
											}
										]
									},
									"documentation": {
										"id": 2905,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "503:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2906,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "513:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2908,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:17"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "546:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2911,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:17"
									},
									"scope": 2988,
									"src": "490:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "796:162:17",
										"statements": [
											{
												"assignments": [
													2933
												],
												"declarations": [
													{
														"constant": false,
														"id": 2933,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 2965,
														"src": "858:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2932,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2946,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2934,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "870:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2935,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2927,
																	"src": "874:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2937,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2938,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "881:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2939,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2927,
																				"src": "885:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2941,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2944,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2947,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "910:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2952,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2933,
																						"src": "930:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2950,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2948,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2957,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "944:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2958,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2927,
																				"src": "948:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2960,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2962,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2931,
												"id": 2964,
												"nodeType": "Return",
												"src": "903:48:17"
											}
										]
									},
									"documentation": {
										"id": 2923,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "745:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2924,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "755:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2926,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:17"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "788:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2929,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:17"
									},
									"scope": 2988,
									"src": "728:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "1102:158:17",
										"statements": [
											{
												"id": 2985,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2976,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "1227:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:17",
																		"subExpression": {
																			"id": 2980,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "1241:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:17",
																	"trueExpression": {
																		"id": 2979,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2969,
																		"src": "1236:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2974,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2973,
														"id": 2984,
														"nodeType": "Return",
														"src": "1212:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "1060:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2968,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:17"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "1093:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:17"
									},
									"scope": 2988,
									"src": "1047:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2989,
							"src": "215:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:17"
				},
				"id": 17
			},
			"telefonica/centenario2.sol": {
				"ast": {
					"absolutePath": "telefonica/centenario2.sol",
					"exportedSymbols": {
						"Context": [
							1635
						],
						"ERC165": [
							2005
						],
						"ERC721": [
							1289
						],
						"ERC721Pausable": [
							1459
						],
						"ERC721URIStorage": [
							1585
						],
						"IERC165": [
							2017
						],
						"IERC4906": [
							139
						],
						"IERC721": [
							1406
						],
						"IERC721Errors": [
							233
						],
						"IERC721Metadata": [
							1613
						],
						"IERC721Receiver": [
							1424
						],
						"MyToken": [
							3125
						],
						"Ownable": [
							112
						],
						"Pausable": [
							1752
						],
						"Strings": [
							1981
						]
					},
					"id": 3126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3126,
							"sourceUnit": 1290,
							"src": "58:57:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3126,
							"sourceUnit": 1586,
							"src": "116:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"id": 2993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3126,
							"sourceUnit": 1460,
							"src": "195:76:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3126,
							"sourceUnit": 113,
							"src": "272:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2995,
										"name": "ERC721",
										"nameLocations": [
											"346:6:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1289,
										"src": "346:6:18"
									},
									"id": 2996,
									"nodeType": "InheritanceSpecifier",
									"src": "346:6:18"
								},
								{
									"baseName": {
										"id": 2997,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"354:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "354:16:18"
									},
									"id": 2998,
									"nodeType": "InheritanceSpecifier",
									"src": "354:16:18"
								},
								{
									"baseName": {
										"id": 2999,
										"name": "ERC721Pausable",
										"nameLocations": [
											"372:14:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1459,
										"src": "372:14:18"
									},
									"id": 3000,
									"nodeType": "InheritanceSpecifier",
									"src": "372:14:18"
								},
								{
									"baseName": {
										"id": 3001,
										"name": "Ownable",
										"nameLocations": [
											"388:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "388:7:18"
									},
									"id": 3002,
									"nodeType": "InheritanceSpecifier",
									"src": "388:7:18"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3125,
							"linearizedBaseContracts": [
								3125,
								112,
								1459,
								1752,
								1585,
								1289,
								233,
								1613,
								139,
								1406,
								2005,
								2017,
								1635
							],
							"name": "MyToken",
							"nameLocation": "335:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3004,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "418:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3125,
									"src": "402:28:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3008,
									"mutability": "mutable",
									"name": "_hasMinted",
									"nameLocation": "469:10:18",
									"nodeType": "VariableDeclaration",
									"scope": 3125,
									"src": "436:43:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3007,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3005,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "444:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "436:24:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3006,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "455:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4813d8a6",
									"id": 3012,
									"mutability": "mutable",
									"name": "isAllowedToMint",
									"nameLocation": "517:15:18",
									"nodeType": "VariableDeclaration",
									"scope": 3125,
									"src": "485:47:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3011,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3009,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "493:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "485:24:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3010,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "504:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64b55bed",
									"id": 3015,
									"mutability": "mutable",
									"name": "allowedAddresses",
									"nameLocation": "555:16:18",
									"nodeType": "VariableDeclaration",
									"scope": 3125,
									"src": "538:33:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 3013,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "538:7:18",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3014,
										"nodeType": "ArrayTypeName",
										"src": "538:9:18",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "629:2:18",
										"statements": []
									},
									"id": 3023,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "607:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "618:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 3020,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3017,
												"name": "ERC721",
												"nameLocations": [
													"600:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1289,
												"src": "600:6:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "600:24:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:18"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:18"
									},
									"scope": 3125,
									"src": "578:53:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "671:25:18",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3028,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "681:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:8:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3030,
												"nodeType": "ExpressionStatement",
												"src": "681:8:18"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3025,
												"name": "onlyOwner",
												"nameLocations": [
													"661:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "661:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "661:9:18"
										}
									],
									"name": "pause",
									"nameLocation": "646:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:2:18"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:0:18"
									},
									"scope": 3125,
									"src": "637:59:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "738:27:18",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3037,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "748:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:10:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3039,
												"nodeType": "ExpressionStatement",
												"src": "748:10:18"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3035,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3034,
												"name": "onlyOwner",
												"nameLocations": [
													"728:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "728:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "728:9:18"
										}
									],
									"name": "unpause",
									"nameLocation": "711:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:2:18"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:18"
									},
									"scope": 3125,
									"src": "702:63:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "827:149:18",
										"statements": [
											{
												"assignments": [
													3049
												],
												"declarations": [
													{
														"constant": false,
														"id": 3049,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "846:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3069,
														"src": "838:15:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "838:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3052,
												"initialValue": {
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "856:14:18",
													"subExpression": {
														"id": 3050,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3004,
														"src": "856:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "838:32:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "890:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "894:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3053,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															911,
															937
														],
														"referencedDeclaration": 911,
														"src": "880:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:22:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "880:22:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "925:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3060,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "934:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3058,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "912:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "912:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "912:26:18"
											},
											{
												"expression": {
													"id": 3067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3063,
															"name": "_hasMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "948:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3065,
														"indexExpression": {
															"id": 3064,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "959:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "948:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "965:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "948:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3068,
												"nodeType": "ExpressionStatement",
												"src": "948:21:18"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "780:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "797:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "789:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "815:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "801:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3044,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:31:18"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:18"
									},
									"scope": 3125,
									"src": "771:205:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										846,
										1458
									],
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "1199:56:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3086,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3072,
															"src": "1230:2:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "1234:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3088,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "1243:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3084,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1216:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$3125_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1222:7:18",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "1216:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1216:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3083,
												"id": 3090,
												"nodeType": "Return",
												"src": "1209:39:18"
											}
										]
									},
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1060:7:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3080,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3078,
												"name": "ERC721",
												"nameLocations": [
													"1145:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1289,
												"src": "1145:6:18"
											},
											{
												"id": 3079,
												"name": "ERC721Pausable",
												"nameLocations": [
													"1153:14:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1459,
												"src": "1153:14:18"
											}
										],
										"src": "1136:32:18"
									},
									"parameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1076:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1068:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1088:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1080:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "1105:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1097:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:43:18"
									},
									"returnParameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "1186:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:18"
									},
									"scope": 3125,
									"src": "1051:204:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										476,
										1565
									],
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "1403:47:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3094,
															"src": "1435:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3102,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1420:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$3125_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 3103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1426:8:18",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "1420:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:23:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3106,
												"nodeType": "Return",
												"src": "1413:30:18"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1270:8:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3098,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3096,
												"name": "ERC721",
												"nameLocations": [
													"1341:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1289,
												"src": "1341:6:18"
											},
											{
												"id": 3097,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1349:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1585,
												"src": "1349:16:18"
											}
										],
										"src": "1332:34:18"
									},
									"parameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1287:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "1279:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:17:18"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "1384:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1384:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:15:18"
									},
									"scope": 3125,
									"src": "1261:189:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381,
										1508
									],
									"body": {
										"id": 3123,
										"nodeType": "Block",
										"src": "1601:60:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3120,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3110,
															"src": "1642:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3118,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1618:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$3125_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 3119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1624:17:18",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "1618:23:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:36:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3122,
												"nodeType": "Return",
												"src": "1611:43:18"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1465:17:18",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3114,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3112,
												"name": "ERC721",
												"nameLocations": [
													"1548:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1289,
												"src": "1548:6:18"
											},
											{
												"id": 3113,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1556:16:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1585,
												"src": "1556:16:18"
											}
										],
										"src": "1539:34:18"
									},
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1490:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "1483:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3109,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:20:18"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "1591:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:18"
									},
									"scope": 3125,
									"src": "1456:205:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3126,
							"src": "326:1337:18",
							"usedErrors": [
								191,
								196,
								205,
								210,
								215,
								222,
								227,
								232,
								1657,
								1660
							],
							"usedEvents": [
								13,
								131,
								138,
								1305,
								1314,
								1323,
								1649,
								1654
							]
						}
					],
					"src": "32:1632:18"
				},
				"id": 18
			}
		}
	}
}